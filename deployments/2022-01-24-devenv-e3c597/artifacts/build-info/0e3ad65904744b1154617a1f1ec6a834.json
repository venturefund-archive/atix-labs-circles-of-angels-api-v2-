{
  "id": "0e3ad65904744b1154617a1f1ec6a834",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.8",
  "solcLongVersion": "0.5.8+commit.23d335f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "src/contracts/ClaimsRegistry.sol": {
        "content": "pragma solidity ^0.5.8;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./interfaces/IClaimsRegistry.sol\";\nimport \"./utils/SignatureVerifier.sol\";\nimport \"./utils/StringUtils.sol\";\n\n/**\n * @title This contract holds information about claims made by COA members\n * @dev this was originally based on EIP780 Ethereum Claims Registry https://github.com/ethereum/EIPs/issues/780\n *      but with current version more based on EIP1812 Ethereum Verifiable Claims\n *      https://eips.ethereum.org/EIPS/eip-1812, on which the user is not the sender of the tx but only part of\n *      it through a signature\n */\ncontract ClaimsRegistry is IClaimsRegistry, Initializable, Ownable {\n    struct ClaimProposal {\n        // The IPFS hash can be bytes32 but IPFS hashes are 34 bytes long due to multihash.\n        // We could strip the first two bytes but for now it seems unnecessary.\n        // We are then representing ipfs hashes as strings\n        string proofHash;\n        uint256 activityId;\n        address proposerAddress;\n        string proposerEmail;\n        // Used for determining whether this structure is initialized or not\n        bool exists;\n    }\n\n    struct ClaimAudit {\n        // Included as the original proposal could be edited\n        ClaimProposal proposal;\n        address auditorAddress;\n        string auditorEmail;\n        bool approved;\n        // Used for determining whether this structure is initialized or not\n        bool exists;\n        string ipfsHash;\n    }\n\n    // Proposed claim by project id => proposer address => claim's hash => proposed claim\n    mapping(uint256 => mapping(address => mapping(bytes32 => ClaimProposal))) public registryProposedClaims;\n    // Claim by project id => auditor address => claim's hash => audit of claim.\n    mapping(uint256 => mapping(address => mapping(bytes32 => ClaimAudit))) internal registryAuditedClaims;\n\n    function registryInitialize() public initializer {\n        Ownable.initialize(msg.sender);\n    }\n\n    function proposeClaim(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proofHash,\n        uint256 _activityId,\n        string calldata _proposerEmail,\n        bytes calldata _authorizationSignature\n    ) external onlyOwner {\n        // Get the signer of the authorization message\n        address proposerAddress =\n            SignatureVerifier.verify(\n                hashProposedClaim(_projectId, _claimHash, _proofHash, _activityId, _proposerEmail),\n                _authorizationSignature\n            );\n\n        // Register proposed claim\n        registryProposedClaims[_projectId][proposerAddress][_claimHash] = ClaimProposal({\n            proofHash: _proofHash,\n            activityId: _activityId,\n            proposerAddress: proposerAddress,\n            proposerEmail: _proposerEmail,\n            exists: true\n        });\n\n        // Emit event for the claim proposed\n        emit ClaimProposed(_projectId, proposerAddress, _claimHash, _proofHash, now, _activityId);\n    }\n\n    function submitClaimApproval(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proposalProofHash,\n        string calldata _auditIpfsHash,\n        address _proposerAddress,\n        string calldata _auditorEmail,\n        bytes calldata _authorizationSignature\n    ) external onlyOwner {\n        submitClaimAuditResult(\n            _projectId,\n            _claimHash,\n            _proposalProofHash,\n            _auditIpfsHash,\n            _proposerAddress,\n            _auditorEmail,\n            true,\n            _authorizationSignature\n        );\n    }\n\n    function submitClaimRejection(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proposalProofHash,\n        string calldata _auditIpfsHash,\n        address _proposerAddress,\n        string calldata _auditorEmail,\n        bytes calldata _authorizationSignature\n    ) external onlyOwner {\n        submitClaimAuditResult(\n            _projectId,\n            _claimHash,\n            _proposalProofHash,\n            _auditIpfsHash,\n            _proposerAddress,\n            _auditorEmail,\n            false,\n            _authorizationSignature\n        );\n    }\n\n    /// @dev This funciton was kept internal with 2 ways of calling to reduce the parameters of the external functions\n    ///      For some reason 8 parameters causes the 0.5.8 compiler to fail\n    function submitClaimAuditResult(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string memory _proposalProofHash,\n        string memory _auditIpfsHash,\n        address _proposerAddress,\n        string memory _auditorEmail,\n        bool _approved,\n        bytes memory _authorizationSignature\n    ) internal onlyOwner {\n        // Obtain the signer of the authorization msg\n        address auditorAddress =\n            SignatureVerifier.verify(\n                hashClaimAuditResult(\n                    _projectId,\n                    _claimHash,\n                    _proposalProofHash,\n                    _auditIpfsHash,\n                    _proposerAddress,\n                    _auditorEmail,\n                    _approved\n                ),\n                _authorizationSignature\n            );\n\n        // Perform validations\n        ClaimProposal storage proposedClaim = registryProposedClaims[_projectId][_proposerAddress][_claimHash];\n        require(proposedClaim.exists, \"Claim wasn't proposed\");\n        require(\n            StringUtils.areEqual(proposedClaim.proofHash, _proposalProofHash),\n            \"Claim proposal has different proof hash than expected\"\n        );\n        require(\n            !registryAuditedClaims[_projectId][auditorAddress][_claimHash].exists,\n            \"Auditor already audited this claim\"\n        );\n\n        // Register audited claim\n        registryAuditedClaims[_projectId][auditorAddress][_claimHash] = ClaimAudit({\n            proposal: proposedClaim,\n            ipfsHash: _auditIpfsHash,\n            auditorAddress: auditorAddress,\n            auditorEmail: _auditorEmail,\n            approved: _approved,\n            exists: true\n        });\n\n        // Emit event for the audited claim\n        emit ClaimAudited(\n            _projectId,\n            auditorAddress,\n            _claimHash,\n            _approved,\n            proposedClaim.proofHash,\n            now,\n            proposedClaim.activityId\n        );\n    }\n\n    function areApproved(\n        uint256 _projectId,\n        address[] calldata _auditors,\n        bytes32[] calldata _claims\n    ) external view returns (bool) {\n        require(_auditors.length == _claims.length, \"arrays must be equal size\");\n        for (uint256 i = 0; i < _claims.length; i++) {\n            ClaimAudit memory claim = registryAuditedClaims[_projectId][_auditors[i]][_claims[i]];\n            // If claim.approved then the ClaimProposal exists,\n            // as it's checked when the audit result is processed\n            if (!claim.approved) return false;\n        }\n        return true;\n    }\n\n    /**\n     * @notice Returns the audit information of a claim\n     * @dev This function was created as structs inside structs are not supported for the contract's public interface\n     * @param _projectId - the id of the project the queried claim belongs to.\n     * @param _auditorAddress - the auditor of the queried claim.\n     * @param _claimHash - the has of the queried claim.\n     */\n    function getClaimAudit(\n        uint256 _projectId,\n        address _auditorAddress,\n        bytes32 _claimHash\n    )\n        public\n        view\n        returns (\n            string memory,\n            uint256,\n            address,\n            string memory,\n            bool,\n            address,\n            string memory,\n            bool,\n            string memory\n        )\n    {\n        ClaimAudit memory claimAudit = registryAuditedClaims[_projectId][_auditorAddress][_claimHash];\n\n        return (\n            claimAudit.proposal.proofHash,\n            claimAudit.proposal.activityId,\n            claimAudit.proposal.proposerAddress,\n            claimAudit.proposal.proposerEmail,\n            claimAudit.exists,\n            claimAudit.auditorAddress,\n            claimAudit.auditorEmail,\n            claimAudit.approved,\n            claimAudit.ipfsHash\n        );\n    }\n\n    function hashProposedClaim(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string memory _proofHash,\n        uint256 _activityId,\n        string memory _proposerEmail\n    ) internal pure returns (bytes32) {\n        return keccak256(abi.encode(_projectId, _claimHash, _proofHash, _activityId, _proposerEmail));\n    }\n\n    function hashClaimAuditResult(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string memory _proposalProofHash,\n        string memory _auditIpfsHash,\n        address _proposerAddress,\n        string memory _auditorEmail,\n        bool _approved\n    ) internal pure returns (bytes32) {\n        return\n            keccak256(\n                abi.encode(\n                    _projectId,\n                    _claimHash,\n                    _proposalProofHash,\n                    _auditIpfsHash,\n                    _proposerAddress,\n                    _auditorEmail,\n                    _approved\n                )\n            );\n    }\n\n    uint256[50] private _gap;\n}\n"
      },
      "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
        "content": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\nimport \"../GSN/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Initializable, Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function initialize(address sender) public initializer {\n        _owner = sender;\n        emit OwnershipTransferred(address(0), _owner);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(isOwner(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Returns true if the caller is the current owner.\n     */\n    function isOwner() public view returns (bool) {\n        return _msgSender() == _owner;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * > Note: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public onlyOwner {\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     */\n    function _transferOwnership(address newOwner) internal {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n\n    uint256[50] private ______gap;\n}\n"
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "content": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
      },
      "src/contracts/interfaces/IClaimsRegistry.sol": {
        "content": "pragma solidity ^0.5.8;\n\n/**\n * @title This contract holds information about claims made buy COA members\n */\ninterface IClaimsRegistry {\n    // Emitted when a claim's proposal is submitted\n    event ClaimProposed(\n        uint256 indexed projectId,\n        address indexed proposer,\n        bytes32 indexed claimHash,\n        string proofHash,\n        uint256 proposedAt,\n        uint256 activityId\n    );\n\n    // Emitted when a claim's audit result is submitted\n    event ClaimAudited(\n        uint256 indexed projectId,\n        address indexed auditor,\n        bytes32 indexed claimHash,\n        bool _approved,\n        string proofHash,\n        uint256 verifiedAt,\n        uint256 activityId\n    );\n\n    /**\n     * @notice Proposes a claim, by sending it's hash and proof\n     *         The owner of the contract acts as the relayer, by propagating a signature by the proposer\n     * @dev Validations being performed:\n     *       - The sender is the contract owner\n     *      Note: the identifier of a proposal is projectId+claimHash+proposerAddress, allowing\n     *            multiple proposals to exists for different proposers\n     *      Note: a user can override a proposal by sending a new one\n     * @param _projectId - the id of the project the claim is from.\n     * @param _claimHash - bytes32 of the claim's hash.\n     * @param _proofHash - IPFS hash of the proof of the claim.\n     * @param _activityId - the activity identifier.\n     * @param _proposerEmail - the email of the user proposing the claim.\n     * @param _authorizationSignature - the signature of the params by the proposer of the claim.\n     */\n    function proposeClaim(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proofHash,\n        uint256 _activityId,\n        string calldata _proposerEmail,\n        bytes calldata _authorizationSignature\n    ) external;\n\n    /**\n     * @notice Submits the approval of a proposed claim as the result of the audit.\n     *         The owner of the contract acts as the relayer, by propagating a signature by the auditor.\n     * @dev Validations being performed:\n     *       - The proposal exists\n     *       - The proposal has the same proof hash as being passed as parameter\n     *       - The auditor didn't already submit his audit\n     * @param _projectId - the id of the project the claim is from.\n     * @param _claimHash - bytes32 of the claim's hash being audited.\n     * @param _proposalProofHash - IPFS hash of the proof from the proposal.\n     *                             This is required as it's allowed for a user to override his proposal,\n     *                             preventing this from the auditor approving a proposal he didn't intended.\n     * @param _auditIpfsHash - IPFS hash of the audit report\n     * @param _proposerAddress - address of the proposer of the claim.\n     * @param _auditorEmail - email of the author of the audit.\n     * @param _authorizationSignature - the signature of the params by the auditor.\n     */\n    function submitClaimApproval(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proposalProofHash,\n        string calldata _auditIpfsHash,\n        address _proposerAddress,\n        string calldata _auditorEmail,\n        bytes calldata _authorizationSignature\n    ) external;\n\n    /**\n     * @notice Submits the rejection of a proposed claim as the result of the audit.\n     *         The owner of the contract acts as the relayer, by propagating a signature by the auditor.\n     * @dev Validations being performed:\n     *       - The proposal exists\n     *       - The proposal has the same proof hash as being passed as parameter\n     *       - The auditor didn't already submit his audit\n     * @param _projectId - the id of the project the claim is from.\n     * @param _claimHash - bytes32 of the claim's hash being audited.\n     * @param _proposalProofHash - IPFS hash of the proof from the proposal.\n     *                             This is required as it's allowed for a user to override his proposal,\n     *                             preventing this from the auditor approving a proposal he didn't intended.\n     * @param _auditIpfsHash - IPFS hash of the audit report\n     * @param _proposerAddress - address of the proposer of the claim.\n     * @param _auditorEmail - email of the author of the audit.\n     * @param _authorizationSignature - the signature of the params by the auditor.\n     */\n    function submitClaimRejection(\n        uint256 _projectId,\n        bytes32 _claimHash,\n        string calldata _proposalProofHash,\n        string calldata _auditIpfsHash,\n        address _proposerAddress,\n        string calldata _auditorEmail,\n        bytes calldata _authorizationSignature\n    ) external;\n\n    /**\n     * @notice Checks whether the tasks from a project's milestone are approved).\n     * @param _projectId - address of a project.\n     * @param _auditors - array of addresses of the auditors.\n     * @param _claims - array of bytes32 hashes of the claims.\n     */\n    function areApproved(\n        uint256 _projectId,\n        address[] calldata _auditors,\n        bytes32[] calldata _claims\n    ) external view returns (bool);\n}\n"
      },
      "src/contracts/utils/SignatureVerifier.sol": {
        "content": "pragma solidity ^0.5.8;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\";\n\n/**\n * @dev Contract for verifying the signatures of the authorization message for performing actions on behalf of users\n *\n * TODO: Add nonces to signatures to avoid potential replay attacks\n *       This isn't sth core right now as the only sender of txs are our wallets\n */\nlibrary SignatureVerifier {\n    bytes internal constant prefix = \"\\x19Ethereum Signed Message:\\n32\";\n\n    /**\n     * @notice Verifies that the signature of a message hash is correct, and returns the signer address\n     * @param messageHash - the hash of the message\n     * @param signature - the signature of the message hash\n     */\n    function verify(bytes32 messageHash, bytes memory signature) internal pure returns (address) {\n        // Add message prefix to the message hash\n        bytes32 prefixedMessageHash = keccak256(abi.encodePacked(prefix, messageHash));\n\n        // Recover signer\n        address signer = ECDSA.recover(prefixedMessageHash, signature);\n        return signer;\n    }\n}\n"
      },
      "src/contracts/utils/StringUtils.sol": {
        "content": "pragma solidity ^0.5.8;\n\nlibrary StringUtils {\n    function areEqual(string memory s1, string memory s2) internal pure returns (bool) {\n        if (bytes(s1).length != bytes(s2).length) {\n            return false;\n        } else {\n            return keccak256(bytes(s1)) == keccak256(bytes(s2));\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
        "content": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context is Initializable {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n    // solhint-disable-previous-line no-empty-blocks\n\n    function _msgSender() internal view returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      },
      "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol": {
        "content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * NOTE: This call _does not revert_ if the signature is invalid, or\n     * if the signer is otherwise unable to be retrieved. In those scenarios,\n     * the zero address is returned.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        // Check the signature length\n        if (signature.length != 65) {\n            return (address(0));\n        }\n\n        // Divide the signature in r, s and v variables\n        bytes32 r;\n        bytes32 s;\n        uint8 v;\n\n        // ecrecover takes the signature parameters, and the only way to get them\n        // currently is to use assembly.\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            r := mload(add(signature, 0x20))\n            s := mload(add(signature, 0x40))\n            v := byte(0, mload(add(signature, 0x60)))\n        }\n\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return address(0);\n        }\n\n        if (v != 27 && v != 28) {\n            return address(0);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        return ecrecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * replicates the behavior of the\n     * https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\n     * JSON-RPC method.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n}\n"
      },
      "src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol": {
        "content": "pragma solidity ^0.5.8;\n\nimport \"../../../contracts/ClaimsRegistry.sol\";\nimport \"../../../contracts/utils/UpgradeableToV1.sol\";\nimport \"./VariableStorageForTests.sol\";\n\n/**\n * @title V2 of the ClaimsRegistry contract, extending it's behavior with the VariableStorageForTests\n *        Used only for testing purposes\n */\ncontract ClaimsRegistryV1ForTests is ClaimsRegistry, VariableStorageForTests, UpgradeableToV1 {\n    function claimUpgradeToV1(address _owner, string calldata _initialVariable) external upgraderToV1 {\n        Ownable._transferOwnership(_owner);\n        setVariable(_initialVariable);\n    }\n\n    uint256[49] private _gap;\n}\n"
      },
      "src/contracts/utils/UpgradeableToV1.sol": {
        "content": "pragma solidity ^0.5.8;\n\n/**\n * @title UpgradeableToV1\n *\n * @dev Helper contract to support upgrade functions. To use it, replace\n *      the constructor with a function that has the `initializer` modifier.\n * @dev Not in use right now (apart from testing) as a single version contract is provided.\n *      See the test contracts for an example on how to use it.\n * WARNING: Unlike constructors, initializer functions must be manually\n *          invoked. This applies both to deploying an UpgradeableToV1 contract, as well\n *          as extending an UpgradeableToV1 contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n *          a parent initializer twice, or ensure that all initializers are idempotent,\n *          because this is not dealt with automatically as with constructors.\n */\ncontract UpgradeableToV1 {\n    /**\n     * @dev Indicates that the contract has been upgraded to v1.\n     */\n    bool private upgradedToV1;\n\n    /**\n     * @dev Indicates that the contract is in the process of being upgraded to v1.\n     */\n    bool private upgradingToV1;\n\n    /**\n     * @dev Modifier to use in the upgraded function of a contract.\n     */\n    modifier upgraderToV1() {\n        require(upgradingToV1 || !upgradedToV1, \"Contract instance has already been upgraded to v1\");\n\n        bool isTopLevelCall = !upgradingToV1;\n        if (isTopLevelCall) {\n            upgradingToV1 = true;\n            upgradedToV1 = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            upgradingToV1 = false;\n        }\n    }\n\n    function version() public pure returns (uint16) {\n        return 1;\n    }\n\n    // Reserved storage space to allow for layout changes in the future.\n    uint256[50] private ______gap;\n}\n"
      },
      "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol": {
        "content": "pragma solidity ^0.5.8;\n\n/**\n * @title Contract storing a string variable\n *        To be used for testing purposes only\n */\ncontract VariableStorageForTests {\n    string public stringVariable;\n\n    // Setter for the string variable\n    function setVariable(string memory newValue) public {\n        stringVariable = newValue;\n    }\n}\n"
      },
      "src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol": {
        "content": "pragma solidity ^0.5.8;\n\nimport \"../../../contracts/ProjectsRegistry.sol\";\nimport \"../../../contracts/utils/UpgradeableToV1.sol\";\nimport \"./VariableStorageForTests.sol\";\n\n/**\n * @title V2 of the ProjectsRegistry contract, extending it's behavior with the VariableStorageForTests\n *        Used only for testing purposes\n */\ncontract ProjectsRegistryV1ForTests is ProjectsRegistry, VariableStorageForTests, UpgradeableToV1 {\n    function registryUpgradeToV1(address _owner, string calldata _initialVariable) external upgraderToV1 {\n        Ownable._transferOwnership(_owner);\n        setVariable(_initialVariable);\n    }\n\n    uint256[49] private _gap;\n}\n"
      },
      "src/contracts/ProjectsRegistry.sol": {
        "content": "pragma solidity ^0.5.8;\n\nimport \"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\";\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./utils/SignatureVerifier.sol\";\nimport \"./utils/StringUtils.sol\";\nimport \"./interfaces/IProjectsRegistry.sol\";\n\n/**\n * @title Stores projects related information\n */\ncontract ProjectsRegistry is Initializable, Ownable, IProjectsRegistry {\n    // The IPFS hashes can be bytes32 but IPFS hashes are 34 bytes long due to multihash.\n    // We could strip the first two bytes but for now it seems unnecessary.\n    // We are then representing ipfs hashes as strings\n    struct ProjectDescription {\n        // IPFS hash of the new project description proposal\n        string proposalIpfsHash;\n        // Address of the author of the proposal\n        address authorAddress;\n        // Email of the author of the proposal\n        string authorEmail;\n        // Used for determining whether this structure is initialized or not\n        bool isCreated;\n        // IPFS hash of the file for the audit\n        // Is empty when a description wasn't yet reviewed\n        string auditIpfsHash;\n    }\n\n    /// Project's ids list\n    uint256[] public projectIds;\n    // Pending project edits by\n    // project id => proposer address => project description\n    mapping(uint256 => mapping(address => ProjectDescription)) public pendingEdits;\n    // Project description by\n    // project id => project description\n    mapping(uint256 => ProjectDescription) public projectsDescription;\n\n    function registryInitialize() public initializer {\n        Ownable.initialize(msg.sender);\n    }\n\n    function createProject(uint256 _projectId, string calldata _initialProposalIpfsHash) external onlyOwner {\n        // Perform validations\n        require(!projectsDescription[_projectId].isCreated, \"The project is already created\");\n\n        // Save the initial project description\n        projectsDescription[_projectId] = ProjectDescription({\n            proposalIpfsHash: _initialProposalIpfsHash,\n            auditIpfsHash: \"\",\n            authorAddress: msg.sender,\n            authorEmail: \"\",\n            isCreated: true\n        });\n\n        // Append the project to our list\n        projectIds.push(_projectId);\n\n        // Emit event\n        emit ProjectCreated(_projectId, _initialProposalIpfsHash);\n    }\n\n    function proposeProjectEdit(\n        uint256 _projectId,\n        string calldata _proposedIpfsHash,\n        string calldata _proposerEmail,\n        bytes calldata _authorizationSignature\n    ) external onlyOwner {\n        // Perform validations\n        require(projectsDescription[_projectId].isCreated, \"Project being edited doesn't exist\");\n\n        // Get the proposer address\n        address proposerAddress =\n            SignatureVerifier.verify(\n                hashProposedEdit(_projectId, _proposedIpfsHash, _proposerEmail),\n                _authorizationSignature\n            );\n\n        // Add the proposal to the pending edits\n        pendingEdits[_projectId][proposerAddress] = ProjectDescription({\n            proposalIpfsHash: _proposedIpfsHash,\n            auditIpfsHash: \"\",\n            authorAddress: proposerAddress,\n            authorEmail: _proposerEmail,\n            isCreated: true\n        });\n\n        // Emit event\n        emit ProjectEditProposed(_projectId, proposerAddress, _proposedIpfsHash);\n    }\n\n    function submitProjectEditAuditResult(\n        uint256 _projectId,\n        string calldata _proposalIpfsHash,\n        string calldata _auditIpfsHash,\n        address _authorAddress,\n        bool _approved\n    ) external onlyOwner {\n        // Perform validations\n        ProjectDescription storage proposedEdit = pendingEdits[_projectId][_authorAddress];\n        require(proposedEdit.isCreated, \"The pending edit doesn't exists\");\n        require(\n            StringUtils.areEqual(proposedEdit.proposalIpfsHash, _proposalIpfsHash),\n            \"The pending edit doesn't have the ipfs hash selected\"\n        );\n\n        // Update the project description if needed\n        if (_approved) {\n            proposedEdit.auditIpfsHash = _auditIpfsHash;\n            projectsDescription[_projectId] = proposedEdit;\n        }\n\n        // Delete the pending edit that was audited\n        delete pendingEdits[_projectId][_authorAddress];\n\n        // Emit event\n        emit ProjectEditAudited(_projectId, _authorAddress, _proposalIpfsHash, _auditIpfsHash, _approved);\n    }\n\n    function getProjectsLength() external view returns (uint256) {\n        return projectIds.length;\n    }\n\n    function hashProposedEdit(\n        uint256 _projectId,\n        string memory _proposedIpfsHash,\n        string memory _proposerEmail\n    ) internal pure returns (bytes32) {\n        return keccak256(abi.encode(_projectId, _proposedIpfsHash, _proposerEmail));\n    }\n\n    uint256[50] private _gap;\n}\n"
      },
      "src/contracts/interfaces/IProjectsRegistry.sol": {
        "content": "pragma solidity ^0.5.8;\n\n/// @title Stores projects related information\ninterface IProjectsRegistry {\n    /// Emitted when a new Project is created\n    event ProjectCreated(uint256 id, string ipfsHash);\n    /// Emitted when an edit is proposed\n    event ProjectEditProposed(uint256 id, address proposer, string proposedIpfsHash);\n    /// Emmited when an edit is audited\n    event ProjectEditAudited(\n        uint256 id,\n        address proposer,\n        string proposalIpfsHash,\n        string auditIpfsHash,\n        bool approved\n    );\n\n    /**\n     * @notice Creates a Project, can only be run by the admin\n     *         Submits the initial IPFS hash of a project\n     * @dev Validations being performed:\n     *       - The sender is the contract owner\n     *       - There's no created project with the same id\n     * @param _projectId - the id of the project created\n     * @param _initialIpfsHash - the IPFS hash of the newly created project\n     */\n    function createProject(uint256 _projectId, string calldata _initialIpfsHash) external;\n\n    /**\n     * @notice proposes a project edit\n     *         It can only be run by the owner of the contract, which acts as the relayer,\n     *         by propagating a signature of the proposer\n     * @dev Validations being performed:\n     *       - The sender is the contract owner\n     *       - The project edited exists\n     *      Note: the identifier of a proposal is the projectId+proposerAddress,\n     *            so there can be multiple proposals from different users\n     *      Note: a user can override his proposal by sending a new one\n     * @param _projectId - the id of the project that's proposed to be edited\n     * @param _proposedIpfsHash - the new proposed project's IPFS hash\n     * @param _proposerEmail - the email of the proposer\n     * @param _authorizationSignature - the authorization signature by the edit proposer\n     */\n    function proposeProjectEdit(\n        uint256 _projectId,\n        string calldata _proposedIpfsHash,\n        string calldata _proposerEmail,\n        bytes calldata _authorizationSignature\n    ) external;\n\n    /**\n     * @notice Approves/rejects a proposed project edit\n     *         This can only be run by the admin\n     * @dev Validations being performed:\n     *       - The sender is the contract owner\n     *       - The proposal exists, and has the parameter IPFS hash\n     * @param _projectId - id of the project the edit belongs to\n     * @param _proposalIpfsHash - the IPFS hash of the project edit being audited.\n     *                            This is required as it's allowed for a user to override his proposal,\n     *                            preventing this from the auditor approving a proposal he didn't intended.\n     * @param _auditIpfsHash - the IPFS hash of the audit report\n     * @param _authorAddress - the address of the author of the proposal\n     * @param _approved - the audt result, whether the proposal was approved or not\n     */\n    function submitProjectEditAuditResult(\n        uint256 _projectId,\n        string calldata _proposalIpfsHash,\n        string calldata _auditIpfsHash,\n        address _authorAddress,\n        bool _approved\n    ) external;\n\n    // Returns the number of projects created\n    function getProjectsLength() external view returns (uint256);\n}\n"
      }
    },
    "settings": {
      "evmVersion": "byzantium",
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
        "Context": {
          "abi": [
            {
              "inputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "constructor"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ff7c500aa8a4cc5edcd7fee49562b31aeac70e49c8df50693bfa70b53cdd39d40029",
              "opcodes": "PUSH1 0x4C PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SELFDESTRUCT PUSH29 0x500AA8A4CC5EDCD7FEE49562B31AEAC70E49C8DF50693BFA70B53CDD39 0xd4 STOP 0x29 ",
              "sourceMap": "231:3417:1:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820ff7c500aa8a4cc5edcd7fee49562b31aeac70e49c8df50693bfa70b53cdd39d40029",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SELFDESTRUCT PUSH29 0x500AA8A4CC5EDCD7FEE49562B31AEAC70E49C8DF50693BFA70B53CDD39 0xd4 STOP 0x29 ",
              "sourceMap": "231:3417:1:-;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. * These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "constant": false,
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052610441806100136000396000f3fe608060405234801561001057600080fd5b506004361061005a5760e060020a6000350463715018a6811461005f5780638da5cb5b146100695780638f32d59b1461008d578063c4d66de8146100a9578063f2fde38b146100cf575b600080fd5b6100676100f5565b005b610071610177565b60408051600160a060020a039092168252519081900360200190f35b610095610186565b604080519115158252519081900360200190f35b610067600480360360208110156100bf57600080fd5b5035600160a060020a03166101ac565b610067600480360360208110156100e557600080fd5b5035600160a060020a031661028f565b6100fd610186565b61013f576040805160e560020a62461bcd02815260206004820181905260248201526000805160206103a8833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a0316906000805160206103c8833981519152908390a360338054600160a060020a0319169055565b603354600160a060020a031690565b603354600090600160a060020a031661019d6102e5565b600160a060020a031614905090565b600054610100900460ff16806101c557506101c56102e9565b806101d3575060005460ff16155b6102115760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806103e8602e913960400191505060405180910390fd5b600054610100900460ff1615801561023c576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a0384811691909117918290556040519116906000906000805160206103c8833981519152908290a3801561028b576000805461ff00191690555b5050565b610297610186565b6102d9576040805160e560020a62461bcd02815260206004820181905260248201526000805160206103a8833981519152604482015290519081900360640190fd5b6102e2816102ef565b50565b3390565b303b1590565b600160a060020a0381166103375760405160e560020a62461bcd0281526004018080602001828103825260268152602001806103826026913960400191505060405180910390fd5b603354604051600160a060020a038084169216906000805160206103c883398151915290600090a360338054600160a060020a031916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a7230582055779c6f2251d641a2e98d7055dc0138feee4c1f90af82f2e69c53d18b6c26210029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x441 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x28F JUMP JUMPDEST PUSH2 0xFD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x13F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x19D PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1C5 JUMPI POP PUSH2 0x1C5 PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH2 0x1D3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3E8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x297 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2EF JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x382 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x7230582055779C6F2251D641A2E98D7055DC0138FEEE4C1F90AF82 CALLCODE 0xe6 SWAP13 MSTORE8 0xd1 DUP12 PUSH13 0x26210029000000000000000000 ",
              "sourceMap": "477:2026:2:-;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061005a5760e060020a6000350463715018a6811461005f5780638da5cb5b146100695780638f32d59b1461008d578063c4d66de8146100a9578063f2fde38b146100cf575b600080fd5b6100676100f5565b005b610071610177565b60408051600160a060020a039092168252519081900360200190f35b610095610186565b604080519115158252519081900360200190f35b610067600480360360208110156100bf57600080fd5b5035600160a060020a03166101ac565b610067600480360360208110156100e557600080fd5b5035600160a060020a031661028f565b6100fd610186565b61013f576040805160e560020a62461bcd02815260206004820181905260248201526000805160206103a8833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a0316906000805160206103c8833981519152908390a360338054600160a060020a0319169055565b603354600160a060020a031690565b603354600090600160a060020a031661019d6102e5565b600160a060020a031614905090565b600054610100900460ff16806101c557506101c56102e9565b806101d3575060005460ff16155b6102115760405160e560020a62461bcd02815260040180806020018281038252602e8152602001806103e8602e913960400191505060405180910390fd5b600054610100900460ff1615801561023c576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a0384811691909117918290556040519116906000906000805160206103c8833981519152908290a3801561028b576000805461ff00191690555b5050565b610297610186565b6102d9576040805160e560020a62461bcd02815260206004820181905260248201526000805160206103a8833981519152604482015290519081900360640190fd5b6102e2816102ef565b50565b3390565b303b1590565b600160a060020a0381166103375760405160e560020a62461bcd0281526004018080602001828103825260268152602001806103826026913960400191505060405180910390fd5b603354604051600160a060020a038084169216906000805160206103c883398151915290600090a360338054600160a060020a031916600160a060020a039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a7230582055779c6f2251d641a2e98d7055dc0138feee4c1f90af82f2e69c53d18b6c26210029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x5A JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x715018A6 DUP2 EQ PUSH2 0x5F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x69 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0xA9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xCF JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x67 PUSH2 0xF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x186 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1AC JUMP JUMPDEST PUSH2 0x67 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x28F JUMP JUMPDEST PUSH2 0xFD PUSH2 0x186 JUMP JUMPDEST PUSH2 0x13F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x19D PUSH2 0x2E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1C5 JUMPI POP PUSH2 0x1C5 PUSH2 0x2E9 JUMP JUMPDEST DUP1 PUSH2 0x1D3 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x211 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3E8 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x297 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x2D9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3A8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x2E2 DUP2 PUSH2 0x2EF JUMP JUMPDEST POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x337 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x382 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573734F776E61626C653A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x7230582055779C6F2251D641A2E98D7055DC0138FEEE4C1F90AF82 CALLCODE 0xe6 SWAP13 MSTORE8 0xd1 DUP12 PUSH13 0x26210029000000000000000000 ",
              "sourceMap": "477:2026:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;477:2026:2;;;;;;-1:-1:-1;;;477:2026:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1746:137;;;:::i;:::-;;959:77;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:2;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;741:142;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:2;-1:-1:-1;;;;;741:142:2;;:::i;2032:107::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:2;-1:-1:-1;;;;;2032:107:2;;:::i;1746:137::-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:2;;-1:-1:-1;;;;;;;;;;;1807:40:2;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:2;;;1746:137::o;959:77::-;1023:6;;-1:-1:-1;;;;;1023:6:2;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:2;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:2;;1366:29;;1310:92;:::o;741:142::-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:2;:15;;-1:-1:-1;;;;;;806:15:2;-1:-1:-1;;;;;806:15:2;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:2;-1:-1:-1;;836:40:2;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;741:142:2;;:::o;2032:107::-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;:::-;2032:107;:::o;867:96:0:-;946:10;867:96;:::o;1409:498:3:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:2:-;-1:-1:-1;;;;;2313:22:2;;2305:73;;;;-1:-1:-1;;;;;2305:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:2;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:2;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:2;-1:-1:-1;;;;;2441:17:2;;;;;;;;;;2240:225::o"
            },
            "methodIdentifiers": {
              "initialize(address)": "c4d66de8",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. * This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be aplied to your functions to restrict their use to the owner.\",\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "Initializable": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058209e4f68f9514508ac693573c2987a3977031552764043261d15c559ad7488e2180029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP15 0x4f PUSH9 0xF9514508AC693573C2 SWAP9 PUSH27 0x3977031552764043261D15C559AD7488E218002900000000000000 ",
              "sourceMap": "657:1357:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:1357:3;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600080fdfea165627a7a723058209e4f68f9514508ac693573c2987a3977031552764043261d15c559ad7488e2180029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP15 0x4f PUSH9 0xF9514508AC693573C2 SWAP9 PUSH27 0x3977031552764043261D15C559AD7488E218002900000000000000 ",
              "sourceMap": "657:1357:3:-;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"Initializable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]}},\"version\":1}"
        }
      },
      "src/contracts/ClaimsRegistry.sol": {
        "ClaimsRegistry": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimRejection",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_auditorAddress",
                  "type": "address"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                }
              ],
              "name": "getClaimAudit",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "bool"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "bool"
                },
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proofHash",
                  "type": "string"
                },
                {
                  "name": "_activityId",
                  "type": "uint256"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeClaim",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_auditors",
                  "type": "address[]"
                },
                {
                  "name": "_claims",
                  "type": "bytes32[]"
                }
              ],
              "name": "areApproved",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimApproval",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "registryInitialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "registryProposedClaims",
              "outputs": [
                {
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "name": "activityId",
                  "type": "uint256"
                },
                {
                  "name": "proposerAddress",
                  "type": "address"
                },
                {
                  "name": "proposerEmail",
                  "type": "string"
                },
                {
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "proposedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "auditor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "_approved",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "verifiedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimAudited",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052612774806100136000396000f3fe608060405234801561001057600080fd5b50600436106100a75760e060020a6000350463025fd67581146100ac57806312f057a4146102255780633d8eeee9146104505780633e8e21e61461056e57806349e054d814610647578063715018a6146107be5780638da5cb5b146107c65780638f32d59b146107ea5780639506ec01146107f2578063c4d66de8146107fa578063d0d4a35c14610820578063f2fde38b1461095b575b600080fd5b610223600480360360e08110156100c257600080fd5b813591602081013591810190606081016040820135602060020a8111156100e857600080fd5b8201836020820111156100fa57600080fd5b803590602001918460018302840111602060020a8311171561011b57600080fd5b919390929091602081019035602060020a81111561013857600080fd5b82018360208201111561014a57600080fd5b803590602001918460018302840111602060020a8311171561016b57600080fd5b91939092600160a060020a0383351692604081019060200135602060020a81111561019557600080fd5b8201836020820111156101a757600080fd5b803590602001918460018302840111602060020a831117156101c857600080fd5b919390929091602081019035602060020a8111156101e557600080fd5b8201836020820111156101f757600080fd5b803590602001918460018302840111602060020a8311171561021857600080fd5b509092509050610981565b005b6102576004803603606081101561023b57600080fd5b50803590600160a060020a036020820135169060400135610ab9565b60405180806020018a815260200189600160a060020a0316600160a060020a03168152602001806020018815151515815260200187600160a060020a0316600160a060020a0316815260200180602001861515151581526020018060200185810385528e818151815260200191508051906020019080838360005b838110156102ea5781810151838201526020016102d2565b50505050905090810190601f1680156103175780820380516001836020036101000a031916815260200191505b5085810384528b5181528b516020918201918d019080838360005b8381101561034a578181015183820152602001610332565b50505050905090810190601f1680156103775780820380516001836020036101000a031916815260200191505b5085810383528851815288516020918201918a019080838360005b838110156103aa578181015183820152602001610392565b50505050905090810190601f1680156103d75780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b8381101561040a5781810151838201526020016103f2565b50505050905090810190601f1680156104375780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b610223600480360360c081101561046657600080fd5b813591602081013591810190606081016040820135602060020a81111561048c57600080fd5b82018360208201111561049e57600080fd5b803590602001918460018302840111602060020a831117156104bf57600080fd5b91939092823592604081019060200135602060020a8111156104e057600080fd5b8201836020820111156104f257600080fd5b803590602001918460018302840111602060020a8311171561051357600080fd5b919390929091602081019035602060020a81111561053057600080fd5b82018360208201111561054257600080fd5b803590602001918460018302840111602060020a8311171561056357600080fd5b509092509050610e6a565b6106336004803603606081101561058457600080fd5b81359190810190604081016020820135602060020a8111156105a557600080fd5b8201836020820111156105b757600080fd5b803590602001918460208302840111602060020a831117156105d857600080fd5b919390929091602081019035602060020a8111156105f557600080fd5b82018360208201111561060757600080fd5b803590602001918460208302840111602060020a8311171561062857600080fd5b509092509050611136565b604080519115158252519081900360200190f35b610223600480360360e081101561065d57600080fd5b813591602081013591810190606081016040820135602060020a81111561068357600080fd5b82018360208201111561069557600080fd5b803590602001918460018302840111602060020a831117156106b657600080fd5b919390929091602081019035602060020a8111156106d357600080fd5b8201836020820111156106e557600080fd5b803590602001918460018302840111602060020a8311171561070657600080fd5b91939092600160a060020a0383351692604081019060200135602060020a81111561073057600080fd5b82018360208201111561074257600080fd5b803590602001918460018302840111602060020a8311171561076357600080fd5b919390929091602081019035602060020a81111561078057600080fd5b82018360208201111561079257600080fd5b803590602001918460018302840111602060020a831117156107b357600080fd5b50909250905061150b565b610223611637565b6107ce6116b9565b60408051600160a060020a039092168252519081900360200190f35b6106336116c9565b6102236116ef565b6102236004803603602081101561081057600080fd5b5035600160a060020a031661179d565b6108526004803603606081101561083657600080fd5b50803590600160a060020a036020820135169060400135611880565b604051808060200186815260200185600160a060020a0316600160a060020a031681526020018060200184151515158152602001838103835288818151815260200191508051906020019080838360005b838110156108bb5781810151838201526020016108a3565b50505050905090810190601f1680156108e85780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b8381101561091b578181015183820152602001610903565b50505050905090810190601f1680156109485780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b6102236004803603602081101561097157600080fd5b5035600160a060020a03166119e5565b6109896116c9565b6109cb576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b610aac8b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8f018190048102820181019092528d815292508d91508c908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81528d935091508b908b90819084018382808284376000920182905250604080516020601f8f018190048102820181019092528d81529194509092508c91508b9081908401838280828437600092019190915250611a3892505050565b5050505050505050505050565b60606000806060600080606060006060610ad1612541565b606760008e815260200190815260200160002060008d600160a060020a0316600160a060020a0316815260200190815260200160002060008c81526020019081526020016000206040518060c0016040529081600082016040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bcc5780601f10610ba157610100808354040283529160200191610bcc565b820191906000526020600020905b815481529060010190602001808311610baf57829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f81018490048402850184019091528084526060909401939091830182828015610c835780601f10610c5857610100808354040283529160200191610c83565b820191906000526020600020905b815481529060010190602001808311610c6657829003601f168201915b50505091835250506004919091015460ff1615156020918201529082526005830154600160a060020a03168282015260068301805460408051601f60026000196001861615610100020190941693909304928301859004850281018501825282815294019392830182828015610d3a5780601f10610d0f57610100808354040283529160200191610d3a565b820191906000526020600020905b815481529060010190602001808311610d1d57829003601f168201915b5050509183525050600782015460ff80821615156020808501919091526101009283900490911615156040808501919091526008850180548251600260018316159096026000190190911694909404601f810184900484028501840190925281845260609094019391830182828015610df45780601f10610dc957610100808354040283529160200191610df4565b820191906000526020600020905b815481529060010190602001808311610dd757829003601f168201915b505050505081525050905080600001516000015181600001516020015182600001516040015183600001516060015184608001518560200151866040015187606001518860a001518898508595508292508090509950995099509950995099509950995099505093979b92969a50939750939750565b610e726116c9565b610eb4576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b6000610f6c610f308b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e935091508c908c908190840183828082843760009201919091525061202692505050565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061213b92505050565b6040805160c06020601f8c01819004028201810190925260a081018a81529293509182918b908b90819085018382808284376000920191909152505050908252506020808201899052600160a060020a0384166040808401919091528051601f8901839004830281018301909152878152606090920191908890889081908401838280828437600092018290525093855250506001602093840152508c8152606682526040808220600160a060020a038616835283528082208d8352835290208251805191926110419284929091019061258b565b5060208281015160018301556040830151600283018054600160a060020a031916600160a060020a039092169190911790556060830151805161108a926003850192019061258b565b5060808201518160040160006101000a81548160ff0219169083151502179055509050508881600160a060020a03168b7f941ac8c0858f17404d289e370f26a2a9a677c273773c8ac912d2a86eeed3f9da8b8b428c60405180806020018481526020018381526020018281038252868682818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a450505050505050505050565b600083821461118e576040805160e560020a62461bcd0281526020600482015260196024820152603860020a78617272617973206d75737420626520657175616c2073697a6502604482015290519081900360640190fd5b60005b828110156114fc576111a1612541565b6000888152606760205260408120908888858181106111bc57fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a0316815260200190815260200160002060008686858181106111fa57fe5b602090810292909201358352508181019290925260409081016000208151815460026001821615610100026000190190911604601f81018590049094028101610180908101909352610160810184815290939192849260c08401928592849284918701828280156112ac5780601f10611281576101008083540402835291602001916112ac565b820191906000526020600020905b81548152906001019060200180831161128f57829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f810184900484028501840190915280845260609094019390918301828280156113635780601f1061133857610100808354040283529160200191611363565b820191906000526020600020905b81548152906001019060200180831161134657829003601f168201915b50505091835250506004919091015460ff1615156020918201529082526005830154600160a060020a03168282015260068301805460408051601f6002600019600186161561010002019094169390930492830185900485028101850182528281529401939283018282801561141a5780601f106113ef5761010080835404028352916020019161141a565b820191906000526020600020905b8154815290600101906020018083116113fd57829003601f168201915b5050509183525050600782015460ff80821615156020808501919091526101009283900490911615156040808501919091526008850180548251600260018316159096026000190190911694909404601f8101849004840285018401909252818452606090940193918301828280156114d45780601f106114a9576101008083540402835291602001916114d4565b820191906000526020600020905b8154815290600101906020018083116114b757829003601f168201915b505050505081525050905080606001516114f357600092505050611502565b50600101611191565b50600190505b95945050505050565b6115136116c9565b611555576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b610aac8b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8f018190048102820181019092528d815292508d91508c908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81528d935091508b908b908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81526001935091508b908b9081908401838280828437600092019190915250611a3892505050565b61163f6116c9565b611681576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a0316906000805160206126fb833981519152908390a360338054600160a060020a0319169055565b603354600160a060020a03165b90565b603354600090600160a060020a03166116e06121fa565b600160a060020a031614905090565b600054610100900460ff168061170857506117086121fe565b80611716575060005460ff16155b6117545760405160e560020a62461bcd02815260040180806020018281038252602e81526020018061271b602e913960400191505060405180910390fd5b600054610100900460ff1615801561177f576000805460ff1961ff0019909116610100171660011790555b6117883361179d565b801561179a576000805461ff00191690555b50565b600054610100900460ff16806117b657506117b66121fe565b806117c4575060005460ff16155b6118025760405160e560020a62461bcd02815260040180806020018281038252602e81526020018061271b602e913960400191505060405180910390fd5b600054610100900460ff1615801561182d576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a0384811691909117918290556040519116906000906000805160206126fb833981519152908290a3801561187c576000805461ff00191690555b5050565b6066602090815260009384526040808520825292845282842081529083529181902080548251601f6002600019610100600186161502019093169290920491820185900485028101850190935280835290928391908301828280156119265780601f106118fb57610100808354040283529160200191611926565b820191906000526020600020905b81548152906001019060200180831161190957829003601f168201915b505050600180850154600280870154600388018054604080516020601f60001999851615610100029990990190931695909504968701829004820285018201905285845297989397600160a060020a0390921696509294509092908301828280156119d25780601f106119a7576101008083540402835291602001916119d2565b820191906000526020600020905b8154815290600101906020018083116119b557829003601f168201915b5050506004909301549192505060ff1685565b6119ed6116c9565b611a2f576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b61179a81612204565b611a406116c9565b611a82576040805160e560020a62461bcd02815260206004820181905260248201526000805160206126db833981519152604482015290519081900360640190fd5b6000611a9c611a968a8a8a8a8a8a8a612296565b8361213b565b60008a8152606660209081526040808320600160a060020a038a16845282528083208c8452909152902060048101549192509060ff16611b21576040805160e560020a62461bcd0281526020600482015260156024820152605a60020a7410db185a5b481dd85cdb89dd081c1c9bdc1bdcd95902604482015290519081900360640190fd5b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152611bb69290918491830182828015611bab5780601f10611b8057610100808354040283529160200191611bab565b820191906000526020600020905b815481529060010190602001808311611b8e57829003601f168201915b505050505089612432565b611bf45760405160e560020a62461bcd0281526004018080602001828103825260358152602001806126a66035913960400191505060405180910390fd5b60008a8152606760209081526040808320600160a060020a038616845282528083208c8452909152902060070154610100900460ff1615611c695760405160e560020a62461bcd02815260040180806020018281038252602281526020018061265e6022913960400191505060405180910390fd5b6040805182546101806020601f60026000196101006001871615020190941693909304928301819004028301810190935261016082018181529192839260c084019286928492918491870182828015611d035780601f10611cd857610100808354040283529160200191611d03565b820191906000526020600020905b815481529060010190602001808311611ce657829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f81018490048402850184019091528084526060909401939091830182828015611dba5780601f10611d8f57610100808354040283529160200191611dba565b820191906000526020600020905b815481529060010190602001808311611d9d57829003601f168201915b50505091835250506004919091015460ff161515602091820152908252600160a060020a03851682820181905260408084018a905288151560608501526001608085015260a09093018b905260008e8152606783528381209181529082528281208d8252825291909120825180518051929391928492611e3e92849291019061258b565b5060208281015160018301556040830151600283018054600160a060020a031916600160a060020a0390921691909117905560608301518051611e87926003850192019061258b565b50608091909101516004909101805460ff1916911515919091179055602082810151600583018054600160a060020a031916600160a060020a0390921691909117905560408301518051611ee1926006850192019061258b565b506060820151600782018054608085015115156101000261ff001993151560ff19909216919091179290921691909117905560a08201518051611f2e91600884019160209091019061258b565b509050508882600160a060020a03168b7fffe8853c16839a0a7a36143e70a10d6dc4fe237832780d9419dab5b52af39a3787856000014287600101546040518085151515158152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156120095780601f10611fde57610100808354040283529160200191612009565b820191906000526020600020905b815481529060010190602001808311611fec57829003601f168201915b50509550505050505060405180910390a450505050505050505050565b60008585858585604051602001808681526020018581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b8381101561208357818101518382015260200161206b565b50505050905090810190601f1680156120b05780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156120e35781810151838201526020016120cb565b50505050905090810190601f1680156121105780820380516001836020036101000a031916815260200191505b5097505050505050505060405160208183030381529060405280519060200120905095945050505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250846040516020018083805190602001908083835b602083106121a75780518252601f199092019160209182019101612188565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201905282519201919091209250600091506121ef9050828561245d565b925050505b92915050565b3390565b303b1590565b600160a060020a03811661224c5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806126806026913960400191505060405180910390fd5b603354604051600160a060020a038084169216906000805160206126fb83398151915290600090a360338054600160a060020a031916600160a060020a0392909216919091179055565b60008787878787878760405160200180888152602001878152602001806020018060200186600160a060020a0316600160a060020a031681526020018060200185151515158152602001848103845289818151815260200191508051906020019080838360005b838110156123155781810151838201526020016122fd565b50505050905090810190601f1680156123425780820380516001836020036101000a031916815260200191505b5084810383528851815288516020918201918a019080838360005b8381101561237557818101518382015260200161235d565b50505050905090810190601f1680156123a25780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b838110156123d55781810151838201526020016123bd565b50505050905090810190601f1680156124025780820380516001836020036101000a031916815260200191505b509a5050505050505050505050604051602081830303815290604052805190602001209050979650505050505050565b60008151835114612445575060006121f4565b818051906020012083805190602001201490506121f4565b60008151604114612470575060006121f4565b60208201516040830151606084015160001a6fa2a8918ca85bafe22016d0b997e4df6060ff60020a038211156124ac57600093505050506121f4565b8060ff16601b141580156124c457508060ff16601c14155b156124d557600093505050506121f4565b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa15801561252c573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b604051806101400160405280612555612609565b81526020016000600160a060020a0316815260200160608152602001600015158152602001600015158152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106125cc57805160ff19168380011785556125f9565b828001600101855582156125f9579182015b828111156125f95782518255916020019190600101906125de565b50612605929150612643565b5090565b6040518060a0016040528060608152602001600081526020016000600160a060020a03168152602001606081526020016000151581525090565b6116c691905b80821115612605576000815560010161264956fe41756469746f7220616c72656164792061756469746564207468697320636c61696d4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436c61696d2070726f706f73616c2068617320646966666572656e742070726f6f662068617368207468616e2065787065637465644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a165627a7a7230582081647c2a26c46e2f98b9f90e2c0dc1ff67deb398be5c2dcf6303a19647481c770029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2774 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x25FD675 DUP2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x12F057A4 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x3D8EEEE9 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x3E8E21E6 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x49E054D8 EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xD0D4A35C EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x95B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP9 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP15 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP5 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x332 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x377 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x392 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x437 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 DUP3 CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x633 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x150B JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x633 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x179D JUMP JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x903 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x948 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x989 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAAC DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP2 SWAP5 POP SWAP1 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A38 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x60 PUSH2 0xAD1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP9 SWAP9 POP DUP6 SWAP6 POP DUP3 SWAP3 POP DUP1 SWAP1 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP4 SWAP8 SWAP12 SWAP3 SWAP7 SWAP11 POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP JUMP JUMPDEST PUSH2 0xE72 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0xEB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF6C PUSH2 0xF30 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP4 POP SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2026 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x213B SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP13 DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x1041 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x108A SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0x941AC8C0858F17404D289E370F26A2A9A677C273773C8AC912D2A86EEED3F9DA DUP12 DUP12 TIMESTAMP DUP13 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 EQ PUSH2 0x118E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x2 EXP PUSH25 0x617272617973206D75737420626520657175616C2073697A65 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14FC JUMPI PUSH2 0x11A1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x11BC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x11FA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV SWAP1 SWAP5 MUL DUP2 ADD PUSH2 0x180 SWAP1 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP2 ADD DUP5 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP6 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x12AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x128F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x141A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x141A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x14D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH2 0x14F3 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1191 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1513 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAAC DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x1 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A38 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x163F PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1681 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x16E0 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1708 JUMPI POP PUSH2 0x1708 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH2 0x1716 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1754 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x271B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1788 CALLER PUSH2 0x179D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17B6 JUMPI POP PUSH2 0x17B6 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH2 0x17C4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x271B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x182D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 MSTORE SWAP1 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1926 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1909 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP1 DUP6 ADD SLOAD PUSH1 0x2 DUP1 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT SWAP10 DUP6 AND ISZERO PUSH2 0x100 MUL SWAP10 SWAP1 SWAP10 ADD SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 DIV SWAP7 DUP8 ADD DUP3 SWAP1 DIV DUP3 MUL DUP6 ADD DUP3 ADD SWAP1 MSTORE DUP6 DUP5 MSTORE SWAP8 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP7 POP SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x19D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH2 0x19ED PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1A2F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x179A DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x1A40 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1A82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A9C PUSH2 0x1A96 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2296 JUMP JUMPDEST DUP4 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0x1B21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x5A PUSH1 0x2 EXP PUSH21 0x10DB185A5B481DD85CDB89DD081C1C9BDC1BDCD959 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1BB6 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A6 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C69 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x265E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 SLOAD PUSH2 0x180 PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP2 SWAP1 DIV MUL DUP4 ADD DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1D03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CD8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1DBA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DBA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x67 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP14 DUP3 MSTORE DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP1 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x1E3E SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1E87 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1EE1 SWAP3 PUSH1 0x6 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1F2E SWAP2 PUSH1 0x8 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP SWAP1 POP POP DUP9 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0xFFE8853C16839A0A7A36143E70A10D6DC4FE237832780D9419DAB5B52AF39A37 DUP8 DUP6 PUSH1 0x0 ADD TIMESTAMP DUP8 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2009 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2083 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x206B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x20B0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x20CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2110 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x21A7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2188 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x21EF SWAP1 POP DUP3 DUP6 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2680 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2315 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2342 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2375 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x235D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23D5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23BD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2402 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2445 JUMPI POP PUSH1 0x0 PUSH2 0x21F4 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2470 JUMPI POP PUSH1 0x0 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x24AC JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x21F4 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x24C4 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2555 PUSH2 0x2609 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x25CC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25DE JUMP JUMPDEST POP PUSH2 0x2605 SWAP3 SWAP2 POP PUSH2 0x2643 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x16C6 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2649 JUMP INVALID COINBASE PUSH22 0x6469746F7220616C7265616479206175646974656420 PUSH21 0x68697320636C61696D4F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373436C61696D2070726F706F73616C2068 PUSH2 0x7320 PUSH5 0x6966666572 PUSH6 0x6E742070726F PUSH16 0x662068617368207468616E2065787065 PUSH4 0x7465644F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x7230582081647C2A26C46E2F98B9F90E2C0DC1FF67DEB398BE5C2D 0xcf PUSH4 0x3A19647 0x48 SHR PUSH24 0x2900000000000000000000000000000000000000000000 ",
              "sourceMap": "708:8674:4:-;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x25FD675 DUP2 EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x12F057A4 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x3D8EEEE9 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x3E8E21E6 EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0x49E054D8 EQ PUSH2 0x647 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7BE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x7C6 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x7EA JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x7F2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xD0D4A35C EQ PUSH2 0x820 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x95B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x981 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP9 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP15 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2EA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2D2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x317 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP5 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x34A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x332 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x377 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x392 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3D7 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x40A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3F2 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x437 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x48C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 DUP3 CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x530 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x563 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xE6A JUMP JUMPDEST PUSH2 0x633 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x5D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x628 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x65D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x6D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x792 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x150B JUMP JUMPDEST PUSH2 0x223 PUSH2 0x1637 JUMP JUMPDEST PUSH2 0x7CE PUSH2 0x16B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x633 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x223 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x810 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x179D JUMP JUMPDEST PUSH2 0x852 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8A3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8E8 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x91B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x903 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x948 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x971 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x19E5 JUMP JUMPDEST PUSH2 0x989 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x9CB JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAAC DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP2 SWAP5 POP SWAP1 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A38 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x60 PUSH2 0xAD1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xBCC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBA1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBCC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBAF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD3A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD0F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD3A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD1D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xDF4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xDC9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDF4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xDD7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP9 SWAP9 POP DUP6 SWAP6 POP DUP3 SWAP3 POP DUP1 SWAP1 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP4 SWAP8 SWAP12 SWAP3 SWAP7 SWAP11 POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP JUMP JUMPDEST PUSH2 0xE72 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0xEB4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xF6C PUSH2 0xF30 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP4 POP SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2026 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x213B SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP13 DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x1041 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x108A SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0x941AC8C0858F17404D289E370F26A2A9A677C273773C8AC912D2A86EEED3F9DA DUP12 DUP12 TIMESTAMP DUP13 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 EQ PUSH2 0x118E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x2 EXP PUSH25 0x617272617973206D75737420626520657175616C2073697A65 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x14FC JUMPI PUSH2 0x11A1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x11BC JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x11FA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV SWAP1 SWAP5 MUL DUP2 ADD PUSH2 0x180 SWAP1 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP2 ADD DUP5 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP6 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x12AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1281 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x12AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x128F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1363 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1338 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1363 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1346 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x141A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13EF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x141A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13FD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x14D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x14D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH2 0x14F3 JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x1502 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1191 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1513 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1555 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xAAC DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x1 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1A38 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x163F PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1681 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x16E0 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1708 JUMPI POP PUSH2 0x1708 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH2 0x1716 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1754 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x271B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x177F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1788 CALLER PUSH2 0x179D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x179A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x17B6 JUMPI POP PUSH2 0x17B6 PUSH2 0x21FE JUMP JUMPDEST DUP1 PUSH2 0x17C4 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1802 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x271B PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x182D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x187C JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 MSTORE SWAP1 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1926 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1926 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1909 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP1 DUP6 ADD SLOAD PUSH1 0x2 DUP1 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT SWAP10 DUP6 AND ISZERO PUSH2 0x100 MUL SWAP10 SWAP1 SWAP10 ADD SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 DIV SWAP7 DUP8 ADD DUP3 SWAP1 DIV DUP3 MUL DUP6 ADD DUP3 ADD SWAP1 MSTORE DUP6 DUP5 MSTORE SWAP8 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP7 POP SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x19D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x19A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x19D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x19B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH2 0x19ED PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1A2F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x179A DUP2 PUSH2 0x2204 JUMP JUMPDEST PUSH2 0x1A40 PUSH2 0x16C9 JUMP JUMPDEST PUSH2 0x1A82 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1A9C PUSH2 0x1A96 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2296 JUMP JUMPDEST DUP4 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0x1B21 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x5A PUSH1 0x2 EXP PUSH21 0x10DB185A5B481DD85CDB89DD081C1C9BDC1BDCD959 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1BB6 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BAB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B80 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BAB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B8E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x2432 JUMP JUMPDEST PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x26A6 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1C69 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x265E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 SLOAD PUSH2 0x180 PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP2 SWAP1 DIV MUL DUP4 ADD DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1D03 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CD8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D03 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CE6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1DBA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1D8F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1DBA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D9D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x67 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP14 DUP3 MSTORE DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP1 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x1E3E SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1E87 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1EE1 SWAP3 PUSH1 0x6 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x1F2E SWAP2 PUSH1 0x8 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x258B JUMP JUMPDEST POP SWAP1 POP POP DUP9 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0xFFE8853C16839A0A7A36143E70A10D6DC4FE237832780D9419DAB5B52AF39A37 DUP8 DUP6 PUSH1 0x0 ADD TIMESTAMP DUP8 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x2009 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FDE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2009 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FEC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2083 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x206B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x20B0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x20CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2110 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x21A7 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2188 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x21EF SWAP1 POP DUP3 DUP6 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x224C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2680 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26FB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2315 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x22FD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2342 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2375 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x235D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x23A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23D5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23BD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2402 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x2445 JUMPI POP PUSH1 0x0 PUSH2 0x21F4 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2470 JUMPI POP PUSH1 0x0 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x24AC JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x21F4 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x24C4 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2555 PUSH2 0x2609 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x25CC JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25DE JUMP JUMPDEST POP PUSH2 0x2605 SWAP3 SWAP2 POP PUSH2 0x2643 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x16C6 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2605 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2649 JUMP INVALID COINBASE PUSH22 0x6469746F7220616C7265616479206175646974656420 PUSH21 0x68697320636C61696D4F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373436C61696D2070726F706F73616C2068 PUSH2 0x7320 PUSH5 0x6966666572 PUSH6 0x6E742070726F PUSH16 0x662068617368207468616E2065787065 PUSH4 0x7465644F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x7230582081647C2A26C46E2F98B9F90E2C0DC1FF67DEB398BE5C2D 0xcf PUSH4 0x3A19647 0x48 SHR PUSH24 0x2900000000000000000000000000000000000000000000 ",
              "sourceMap": "708:8674:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:8674:4;;;;;;-1:-1:-1;;;708:8674:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3692:586;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3692:586:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;-1:-1:-1;;;;;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3692:586:4;;-1:-1:-1;3692:586:4;-1:-1:-1;3692:586:4;:::i;:::-;;7479:878;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7479:878:4;;;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;7479:878:4;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7479:878:4;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:1014;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2082:1014:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2082:1014:4;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2082:1014:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2082:1014:4;;-1:-1:-1;2082:1014:4;-1:-1:-1;2082:1014:4;:::i;6472:609::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6472:609:4;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6472:609:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6472:609:4;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6472:609:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6472:609:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6472:609:4;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;6472:609:4;;-1:-1:-1;6472:609:4;-1:-1:-1;6472:609:4;:::i;:::-;;;;;;;;;;;;;;;;;;3102:584;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3102:584:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;-1:-1:-1;;;;;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3102:584:4;;-1:-1:-1;3102:584:4;-1:-1:-1;3102:584:4;:::i;1746:137:2:-;;;:::i;959:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:2;;;;;;;;;;;;;;1310:92;;;:::i;1980:96:4:-;;;:::i;741:142:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:2;-1:-1:-1;;;;;741:142:2;;:::i;1682:103:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1682:103:4;;;-1:-1:-1;;;;;1682:103:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1682:103:4;-1:-1:-1;;;;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1682:103:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2032:107:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:2;-1:-1:-1;;;;;2032:107:2;;:::i;3692:586:4:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;4018:253:4;4054:10;4078;4102:18;;4018:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;;-1:-1:-1;4134:14:4;;-1:-1:-1;4134:14:4;;;;4018:253;;4134:14;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;4162:16;;-1:-1:-1;4018:253:4;-1:-1:-1;4192:13:4;;;;;;4018:253;;4192:13;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;-1:-1;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;99:1:-1;;-1:-1;4018:253:4;;-1:-1:-1;4238:23:4;;-1:-1:-1;4238:23:4;;;;4018:253;;4238:23;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4018:22:4;;-1:-1:-1;;;4018:253:4:i;:::-;3692:586;;;;;;;;;;;:::o;7479:878::-;7655:13;7682:7;7703;7724:13;7751:4;7769:7;7790:13;7817:4;7835:13;7873:28;;:::i;:::-;7904:21;:33;7926:10;7904:33;;;;;;;;;;;:50;7938:15;-1:-1:-1;;;;;7904:50:4;-1:-1:-1;;;;;7904:50:4;;;;;;;;;;;;:62;7955:10;7904:62;;;;;;;;;;;7873:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7873:93:4;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7998:10;:19;;;:29;;;8041:10;:19;;;:30;;;8085:10;:19;;;:35;;;8134:10;:19;;;:33;;;8181:10;:17;;;8212:10;:25;;;8251:10;:23;;;8288:10;:19;;;8321:10;:19;;;7977:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7479:878;;;;;;;;;;;;;:::o;2082:1014::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2403:23:4;2441:179;2483:82;2501:10;2513;2525;;2483:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;2483:82:4;;;;137:4:-1;2483:82:4;;;;;;;;;;;;;;;;;2537:11;;-1:-1:-1;2483:82:4;-1:-1:-1;2550:14:4;;;;;;2483:82;;2550:14;;;;2483:82;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2483:17:4;;-1:-1:-1;;;2483:82:4:i;:::-;2583:23;;2441:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2441:24:4;;-1:-1:-1;;;2441:179:4:i;:::-;2732:212;;;;;;;;;;;;;;;;;;;;;;;;;2403:217;;-1:-1:-1;2732:212:4;;;2771:10;;;;;;2732:212;;2771:10;;;;2732:212;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;2732:212:4;;;-1:-1:-1;2732:212:4;;;;;;;-1:-1:-1;;;;;2732:212:4;;;;;;;;;;;;137:4:-1;2732:212:4;;;;;;;;;;;;;;;;;;;;;;;2893:14;;;;;;2732:212;;2893:14;;;;2732:212;1:33:-1;99:1;81:16;;74:27;;;-1:-1;2732:212:4;;;-1:-1:-1;;2929:4:4;2732:212;;;;;-1:-1:-1;2666:34:4;;;:22;:34;;;;;;-1:-1:-1;;;;;2666:51:4;;;;;;;;;:63;;;;;;;:278;;;;:63;;:278;;:63;;:278;;;;;:::i;:::-;-1:-1:-1;2666:278:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2666:278:4;-1:-1:-1;;;;;2666:278:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3048:10;3031:15;-1:-1:-1;;;;;3005:84:4;3019:10;3005:84;3060:10;;3072:3;3077:11;3005:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;3005:84:4;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3005:84:4;;;;-1:-1:-1;3005:84:4;;-1:-1:-1;;;;;;3005:84:4;1219:1:2;2082:1014:4;;;;;;;;;:::o;6472:609::-;6624:4;6648:34;;;6640:72;;;;;-1:-1:-1;;;;;6640:72:4;;;;;;;;;;;;-1:-1:-1;;;;;6640:72:4;;;;;;;;;;;;;;;6727:9;6722:332;6742:18;;;6722:332;;;6781:23;;:::i;:::-;6807:33;;;;:21;:33;;;;;;6841:9;;6851:1;6841:12;;;;;;;;;;;;;-1:-1:-1;;;;;6841:12:4;-1:-1:-1;;;;;6807:47:4;-1:-1:-1;;;;;6807:47:4;;;;;;;;;;;;:59;6855:7;;6863:1;6855:10;;;;;;;;;;;;;;;;6807:59;;-1:-1:-1;6807:59:4;;;;;;;;;;;-1:-1:-1;6807:59:4;6781:85;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6807:59;;6781:85;;;;;;6807:59;;6781:85;;6807:59;;6781:85;;6807:59;6781:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6781:85:4;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7015:5;:14;;;7010:33;;7038:5;7031:12;;;;;;7010:33;-1:-1:-1;6762:3:4;;6722:332;;;;7070:4;7063:11;;6472:609;;;;;;;;:::o;3102:584::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;3427:252:4;3463:10;3487;3511:18;;3427:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;;-1:-1:-1;3543:14:4;;-1:-1:-1;3543:14:4;;;;3427:252;;3543:14;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;3571:16;;-1:-1:-1;3427:252:4;-1:-1:-1;3601:13:4;;;;;;3427:252;;3601:13;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;3628:4;;-1:-1:-1;3427:252:4;-1:-1:-1;3646:23:4;;;;;;3427:252;;3646:23;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3427:22:4;;-1:-1:-1;;;3427:252:4:i;1746:137:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:2;;-1:-1:-1;;;;;;;;;;;1807:40:2;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:2;;;1746:137::o;959:77::-;1023:6;;-1:-1:-1;;;;;1023:6:2;959:77;;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:2;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:2;;1366:29;;1310:92;:::o;1980:96:4:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;2039:30:4;2058:10;2039:18;:30::i;:::-;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;1980:96:4;:::o;741:142:2:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:2;:15;;-1:-1:-1;;;;;;806:15:2;-1:-1:-1;;;;;806:15:2;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:2;-1:-1:-1;;836:40:2;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;741:142:2;;:::o;1682:103:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1682:103:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1682:103:4;;;;-1:-1:-1;1682:103:4;;-1:-1:-1;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1682:103:4;;;;;;;-1:-1:-1;;1682:103:4;;;:::o;2032:107:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;4479:1987:4:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;4877:22:4;4914:379;4956:282;4998:10;5030;5062:18;5102:14;5138:16;5176:13;5211:9;4956:20;:282::i;:::-;5256:23;4914:24;:379::i;:::-;5335:35;5373:34;;;:22;:34;;;;;;;;-1:-1:-1;;;;;5373:52:4;;;;;;;;;:64;;;;;;;;5455:20;;;;4877:416;;-1:-1:-1;5373:64:4;5455:20;;5447:54;;;;;-1:-1:-1;;;;;5447:54:4;;;;;;;;;;;;-1:-1:-1;;;;;5447:54:4;;;;;;;;;;;;;;;5532:65;;;;;;;;;;;;;-1:-1:-1;;5532:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5578:18;5532:20;:65::i;:::-;5511:165;;;;-1:-1:-1;;;;;5511:165:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5708:33;;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5708:49:4;;;;;;;;;:61;;;;;;;;:68;;;;;;;;5707:69;5686:150;;;;-1:-1:-1;;;;;5686:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5945:241;;;;;;;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:13;;5945:241;;;5980:13;;5945:241;;5980:13;5945:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5945:241:4;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5945:241:4;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:33;;;:21;:33;;;;;:49;;;;;;;;;:61;;;;;;;;;:305;;;;;;:61;;:305;;:61;;:305;;:61;;:305;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5881:305:4;-1:-1:-1;;;;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;-1:-1:-1;;5881:305:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5881:305:4;-1:-1:-1;;;;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;;;;;;-1:-1:-1;;5881:305:4;;;-1:-1:-1;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6324:10;6296:14;-1:-1:-1;;;;;6246:213:4;6272:10;6246:213;6348:9;6371:13;:23;;6408:3;6425:13;:24;;;6246:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:1:2;;4479:1987:4;;;;;;;;:::o;8363:332::-;8576:7;8623:10;8635;8647;8659:11;8672:14;8612:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8612:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8612:75:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8612:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8612:75:4;;;8602:86;;;;;;8595:93;;8363:332;;;;;;;:::o;725:360:8:-;809:7;878:27;935:6;;;;;;;;;;;;;;;;;943:11;918:37;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;918:37:8;;;;;-1:-1:-1;918:37:8;;;26:21:-1;;;6:49;;918:37:8;;;;;908:48;;;;;;;;;-1:-1:-1;;;;1010:45:8;;-1:-1:-1;908:48:8;1045:9;1010:13;:45::i;:::-;993:62;-1:-1:-1;;;725:360:8;;;;;:::o;867:96:0:-;946:10;867:96;:::o;1409:498:3:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:2:-;-1:-1:-1;;;;;2313:22:2;;2305:73;;;;-1:-1:-1;;;;;2305:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:2;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:2;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:2;-1:-1:-1;;;;;2441:17:2;;;;;;;;;;2240:225::o;8701:648:4:-;8991:7;9088:10;9120;9152:18;9192:14;9228:16;9266:13;9301:9;9056:272;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9056:272:4;-1:-1:-1;;;;;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9056:272:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9056:272:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9056:272:4;;;9029:313;;;;;;9010:332;;8701:648;;;;;;;;;:::o;51:260:9:-;128:4;174:2;168:16;154:2;148:16;:36;144:161;;-1:-1:-1;207:5:9;200:12;;144:161;290:2;274:20;;;;;;266:2;250:20;;;;;;:44;243:51;;;;1226:1891:1;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:1;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;-1:-1:-1;;;;;2786:79:1;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3086:24:1;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:1;;-1:-1:-1;;3086:24:1;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:1:o;708:8674:4:-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;708:8674:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;708:8674:4;;;-1:-1:-1;708:8674:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;708:8674:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "areApproved(uint256,address[],bytes32[])": "3e8e21e6",
              "getClaimAudit(uint256,address,bytes32)": "12f057a4",
              "initialize(address)": "c4d66de8",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "proposeClaim(uint256,bytes32,string,uint256,string,bytes)": "3d8eeee9",
              "registryInitialize()": "9506ec01",
              "registryProposedClaims(uint256,address,bytes32)": "d0d4a35c",
              "renounceOwnership()": "715018a6",
              "submitClaimApproval(uint256,bytes32,string,string,address,string,bytes)": "49e054d8",
              "submitClaimRejection(uint256,bytes32,string,string,address,string,bytes)": "025fd675",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimRejection\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_auditorAddress\",\"type\":\"address\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"}],\"name\":\"getClaimAudit\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proofHash\",\"type\":\"string\"},{\"name\":\"_activityId\",\"type\":\"uint256\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_auditors\",\"type\":\"address[]\"},{\"name\":\"_claims\",\"type\":\"bytes32[]\"}],\"name\":\"areApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registryInitialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registryProposedClaims\",\"outputs\":[{\"name\":\"proofHash\",\"type\":\"string\"},{\"name\":\"activityId\",\"type\":\"uint256\"},{\"name\":\"proposerAddress\",\"type\":\"address\"},{\"name\":\"proposerEmail\",\"type\":\"string\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"proposedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"auditor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimAudited\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"this was originally based on EIP780 Ethereum Claims Registry https://github.com/ethereum/EIPs/issues/780     but with current version more based on EIP1812 Ethereum Verifiable Claims     https://eips.ethereum.org/EIPS/eip-1812, on which the user is not the sender of the tx but only part of     it through a signature\",\"methods\":{\"getClaimAudit(uint256,address,bytes32)\":{\"details\":\"This function was created as structs inside structs are not supported for the contract's public interface\",\"params\":{\"_auditorAddress\":\"- the auditor of the queried claim.\",\"_claimHash\":\"- the has of the queried claim.\",\"_projectId\":\"- the id of the project the queried claim belongs to.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"This contract holds information about claims made by COA members\"},\"userdoc\":{\"methods\":{\"getClaimAudit(uint256,address,bytes32)\":{\"notice\":\"Returns the audit information of a claim\"}}}},\"settings\":{\"compilationTarget\":{\"src/contracts/ClaimsRegistry.sol\":\"ClaimsRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]},\"src/contracts/ClaimsRegistry.sol\":{\"keccak256\":\"0x54744019158f083b43596d75c62036bb56901120f8b0c8a8e220661936988278\",\"urls\":[\"bzzr://7beeac67fdbefb7b62ac98603295d7dca6db9be780e8c579851f6d0310d8febf\"]},\"src/contracts/interfaces/IClaimsRegistry.sol\":{\"keccak256\":\"0xd31bf9774cebaf62ef64fb55aa6a51580a0bb652c00d24dcbadd701725a61962\",\"urls\":[\"bzzr://874bd0e7263b41199ac31a7907f67fa8fea8da70bd13de31aeec1823386838e9\"]},\"src/contracts/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x7640764af901ef936847670e9221d794c5a1f8914e2a9ef877edb49892b5b83e\",\"urls\":[\"bzzr://dee27cc02f5f8fbb586336ce888e0747372c85b1d1de244928426eabb8bcc14e\"]},\"src/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x5ddd47496a33edbbd7440040c2638d1a5063a3cd04b353000e2da10eb5077aa9\",\"urls\":[\"bzzr://42bad4ea3a3bd293cedcf199d863f3228ea4de5ec24aba71d248fe5edab45f6a\"]}},\"version\":1}"
        }
      },
      "src/contracts/ProjectsRegistry.sol": {
        "ProjectsRegistry": {
          "abi": [
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "projectIds",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposedIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeProjectEdit",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "registryInitialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "projectsDescription",
              "outputs": [
                {
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "authorAddress",
                  "type": "address"
                },
                {
                  "name": "authorEmail",
                  "type": "string"
                },
                {
                  "name": "isCreated",
                  "type": "bool"
                },
                {
                  "name": "auditIpfsHash",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_initialProposalIpfsHash",
                  "type": "string"
                }
              ],
              "name": "createProject",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getProjectsLength",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_authorAddress",
                  "type": "address"
                },
                {
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "submitProjectEditAuditResult",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingEdits",
              "outputs": [
                {
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "authorAddress",
                  "type": "address"
                },
                {
                  "name": "authorEmail",
                  "type": "string"
                },
                {
                  "name": "isCreated",
                  "type": "bool"
                },
                {
                  "name": "auditIpfsHash",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "ipfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposedIpfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectEditProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "auditIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ProjectEditAudited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1A57 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x48C35AD4 DUP2 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x843D160A EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xB4796CE2 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xBF1A8003 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xC6BDC0A2 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xF5CDD9C2 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xFD2CA96B EQ PUSH2 0x571 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x63D JUMP JUMPDEST PUSH2 0x20D PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP8 MLOAD DUP2 MSTORE DUP8 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP10 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x331 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x319 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x35E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x391 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x379 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3BE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x5C3 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x645 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x687 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x199C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x78F PUSH2 0x753 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP3 POP DUP12 SWAP2 POP DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1419 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x151C SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD DUP3 MSTORE DUP9 DUP2 MSTORE SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP13 DUP4 MSTORE PUSH1 0x67 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0x867 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x8A6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x8DA SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9D3ACFAF4CF0F7CA2755C0330B02196B1D84ACE88B6EE78448155159F4215B82 DUP9 DUP3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x991 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH2 0x9B9 PUSH2 0x15DF JUMP JUMPDEST DUP1 PUSH2 0x9C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA39 CALLER PUSH2 0xE91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 DUP2 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH2 0x100 SWAP8 DUP5 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP3 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP4 SWAP5 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xC78 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6A65637420697320616C726561647920637265617465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP CALLER PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE DUP2 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD MSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP8 DUP4 MSTORE PUSH1 0x68 DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0xD78 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xDB7 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xDEB SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP5 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xED06D1E70F1FAA0E1750DEF1B3A1D942390A8F47D03679C9025A1C38DC34FE7B SWAP2 DUP6 SWAP2 DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xEAA JUMPI POP PUSH2 0xEAA PUSH2 0x15DF JUMP JUMPDEST DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xFC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0xFD5 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x1017 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1095 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070656E64696E67206564697420646F65736E27742065786973747300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1160 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x111F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x111F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1102 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1677 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1968 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1279 JUMPI PUSH2 0x11B2 PUSH1 0x4 DUP3 ADD DUP7 DUP7 PUSH2 0x1804 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x11E6 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD PUSH2 0x1231 SWAP4 DUP4 DUP7 ADD SWAP4 SWAP1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP PUSH1 0x3 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH2 0x1275 SWAP3 DUP5 ADD SWAP2 SWAP1 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x12A6 DUP3 DUP3 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE PUSH2 0x12C6 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x12E0 PUSH1 0x4 DUP4 ADD PUSH1 0x0 PUSH2 0x18E7 JUMP JUMPDEST POP POP PUSH32 0x632679850203170FCCC7C6ABAEF76A269CBB5D0EC94F498416071A78C9F7D502 DUP9 DUP5 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP9 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP12 POP SWAP1 SWAP10 POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1450 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1495 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14C8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x14F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1588 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1569 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x15D0 SWAP1 POP DUP3 DUP6 PUSH2 0x16A2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1942 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x168A JUMPI POP PUSH1 0x0 PUSH2 0x15D5 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x16B5 JUMPI POP PUSH1 0x0 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x15D5 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1709 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x171A JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x17C7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH2 0x1800 SWAP3 SWAP2 POP PUSH2 0x1927 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1845 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x18AB JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18CC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x190D JUMPI POP PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA4B SWAP2 SWAP1 JUMPDEST PUSH2 0x977 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x192D JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735468652070656E64696E672065646974 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206861766520746865206970667320686173682073 PUSH6 0x6C6563746564 POP PUSH19 0x6F6A656374206265696E672065646974656420 PUSH5 0x6F65736E27 PUSH21 0x2065786973744F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x72305820F2B03114BDC8F5D8E483543B961677B58EDBCCE890DCCC 0xf 0xb3 STATICCALL SHR MUL SWAP15 0x2f 0xc0 0x4c STOP 0x29 ",
              "sourceMap": "343:4527:5:-;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x48C35AD4 DUP2 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x843D160A EQ PUSH2 0xF0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xB4796CE2 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xBF1A8003 EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0xC6BDC0A2 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xF5CDD9C2 EQ PUSH2 0x49B JUMPI DUP1 PUSH4 0xFD2CA96B EQ PUSH2 0x571 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x5BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x106 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x63D JUMP JUMPDEST PUSH2 0x20D PUSH2 0x96A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xA4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D1 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2B9 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP8 MLOAD DUP2 MSTORE DUP8 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP10 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x331 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x319 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x35E JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x391 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x379 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3BE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x409 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x43C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xC2E JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xE91 JUMP JUMPDEST PUSH2 0xD4 PUSH2 0xF74 JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xF7A JUMP JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x522 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x534 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0xFCD JUMP JUMPDEST PUSH2 0x26A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x13A6 JUMP JUMPDEST PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5AA JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x5C3 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x605 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x645 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x687 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x199C PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x78F PUSH2 0x753 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP3 POP DUP12 SWAP2 POP DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1419 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x151C SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD DUP3 MSTORE DUP9 DUP2 MSTORE SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP13 DUP4 MSTORE PUSH1 0x67 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0x867 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x8A6 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x8DA SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9D3ACFAF4CF0F7CA2755C0330B02196B1D84ACE88B6EE78448155159F4215B82 DUP9 DUP3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x991 PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9B9 JUMPI POP PUSH2 0x9B9 PUSH2 0x15DF JUMP JUMPDEST DUP1 PUSH2 0x9C7 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xA30 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA39 CALLER PUSH2 0xE91 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA4B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAC8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 DUP2 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH2 0x100 SWAP8 DUP5 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP3 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xB89 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB89 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP4 SWAP5 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC24 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBF9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC24 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC07 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xC36 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xC78 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6A65637420697320616C726561647920637265617465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP CALLER PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE DUP2 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD MSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP8 DUP4 MSTORE PUSH1 0x68 DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0xD78 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xDB7 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xDEB SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP5 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xED06D1E70F1FAA0E1750DEF1B3A1D942390A8F47D03679C9025A1C38DC34FE7B SWAP2 DUP6 SWAP2 DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xEAA JUMPI POP PUSH2 0xEAA PUSH2 0x15DF JUMP JUMPDEST DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x19FE PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0xF70 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xF82 PUSH2 0x97A JUMP JUMPDEST PUSH2 0xFC4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xA4B DUP2 PUSH2 0x15E5 JUMP JUMPDEST PUSH2 0xFD5 PUSH2 0x97A JUMP JUMPDEST PUSH2 0x1017 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19BE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1095 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070656E64696E67206564697420646F65736E27742065786973747300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1160 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x111F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10F4 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x111F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1102 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1677 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x119E JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1968 PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1279 JUMPI PUSH2 0x11B2 PUSH1 0x4 DUP3 ADD DUP7 DUP7 PUSH2 0x1804 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x11E6 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD PUSH2 0x1231 SWAP4 DUP4 DUP7 ADD SWAP4 SWAP1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP PUSH1 0x3 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH2 0x1275 SWAP3 DUP5 ADD SWAP2 SWAP1 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1872 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x12A6 DUP3 DUP3 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE PUSH2 0x12C6 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x18E7 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x12E0 PUSH1 0x4 DUP4 ADD PUSH1 0x0 PUSH2 0x18E7 JUMP JUMPDEST POP POP PUSH32 0x632679850203170FCCC7C6ABAEF76A269CBB5D0EC94F498416071A78C9F7D502 DUP9 DUP5 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP9 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP12 POP SWAP1 SWAP10 POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xAE5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xABA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAE5 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1468 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1450 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1495 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14C8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14B0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x14F5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1588 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1569 JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x15D0 SWAP1 POP DUP3 DUP6 PUSH2 0x16A2 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1942 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x19DE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x168A JUMPI POP PUSH1 0x0 PUSH2 0x15D5 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x16B5 JUMPI POP PUSH1 0x0 PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x16F1 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x15D5 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1709 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x171A JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x15D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1771 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x17C7 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x17D9 JUMP JUMPDEST POP PUSH2 0x1800 SWAP3 SWAP2 POP PUSH2 0x1927 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1845 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1857 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x18AB JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x17F4 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x17F4 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x17F4 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x18CC JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x190D JUMPI POP PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA4B SWAP2 SWAP1 JUMPDEST PUSH2 0x977 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1800 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x192D JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735468652070656E64696E672065646974 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206861766520746865206970667320686173682073 PUSH6 0x6C6563746564 POP PUSH19 0x6F6A656374206265696E672065646974656420 PUSH5 0x6F65736E27 PUSH21 0x2065786973744F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564A165627A PUSH27 0x72305820F2B03114BDC8F5D8E483543B961677B58EDBCCE890DCCC 0xf 0xb3 STATICCALL SHR MUL SWAP15 0x2f 0xc0 0x4c STOP 0x29 ",
              "sourceMap": "343:4527:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;343:4527:5;;;;;;-1:-1:-1;;;343:4527:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1193:27;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1193:27:5;;:::i;:::-;;;;;;;;;;;;;;;;1746:137:2;;;:::i;:::-;;2368:1026:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2368:1026:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2368:1026:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2368:1026:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2368:1026:5;;-1:-1:-1;2368:1026:5;-1:-1:-1;2368:1026:5;:::i;959:77:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:2;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;1546:96:5;;;:::i;1474:65::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1474:65:5;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1474:65:5;-1:-1:-1;;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:714;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1648:714:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1648:714:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1648:714:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1648:714:5;;-1:-1:-1;1648:714:5;-1:-1:-1;1648:714:5;:::i;741:142:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:2;-1:-1:-1;;;;;741:142:2;;:::i;4466:102:5:-;;;:::i;2032:107:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:2;-1:-1:-1;;;;;2032:107:2;;:::i;3400:1060:5:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3400:1060:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3400:1060:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3400:1060:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3400:1060:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3400:1060:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3400:1060:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3400:1060:5;;-1:-1:-1;3400:1060:5;-1:-1:-1;;;;;;3400:1060:5;;;;;;;;;;:::i;1319:78::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1319:78:5;;;;;;-1:-1:-1;;;;;1319:78:5;;:::i;1193:27::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1193:27:5;:::o;1746:137:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:2;;-1:-1:-1;;;;;;;;;;;1807:40:2;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:2;;;1746:137::o;2368:1026:5:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2629:31:5;;;;:19;:31;;;;;:41;;;;;2621:88;;;;-1:-1:-1;;;;;2621:88:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2756:23;2794:160;2836:63;2853:10;2865:17;;2836:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;2836:63:5;;;;137:4:-1;2836:63:5;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:14:5;;-1:-1:-1;2884:14:5;;;;2836:63;;2884:14;;;;2836:63;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2836:16:5;;-1:-1:-1;;;2836:63:5:i;:::-;2917:23;;2794:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2794:24:5;;-1:-1:-1;;;2794:160:5:i;:::-;3058:224;;;;;;;;;;;;;;;;;;;;;;;;;2756:198;;-1:-1:-1;3058:224:5;;;3109:17;;;;;;3058:224;;3109:17;;;;3058:224;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;3058:224:5;;;-1:-1:-1;;;;;;3058:224:5;;;;;;;;;;;;;137:4:-1;3058:224:5;;;;;;;;;;;;;;;;;;;;3228:14;;;;;;3058:224;;3228:14;;;;3058:224;1:33:-1;99:1;81:16;;74:27;;;-1:-1;3058:224:5;;;-1:-1:-1;;3267:4:5;3058:224;;;;;;;;;;;;;;;;;;;;;;;;;;3014:24;;;:12;:24;;;;;-1:-1:-1;;;;;3014:41:5;;;;;;;;;;:268;;;;:41;;:268;;-1:-1:-1;3014:41:5;;:268;;;;:::i;:::-;-1:-1:-1;3014:268:5;;;;;;;;;;-1:-1:-1;;;;;;3014:268:5;-1:-1:-1;;;;;3014:268:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3014:268:5;;;;;;;;;-1:-1:-1;;3014:268:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3320:67;3340:10;3352:15;3369:17;;3320:67;;;;;;;;;-1:-1:-1;;;;;3320:67:5;-1:-1:-1;;;;;3320:67:5;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;3320:67:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3320:67:5;;;;-1:-1:-1;3320:67:5;;-1:-1:-1;;;;;;3320:67:5;1219:1:2;2368:1026:5;;;;;;;:::o;959:77:2:-;1023:6;;-1:-1:-1;;;;;1023:6:2;959:77;;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:2;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:2;;1366:29;;1310:92;:::o;1546:96:5:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;1605:30:5;1624:10;1605:18;:30::i;:::-;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;1546:96:5;:::o;1474:65::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1474:65:5;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1648:714::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1802:31:5;;;;:19;:31;;;;;:41;;;;;1801:42;1793:85;;;;;-1:-1:-1;;;;;1793:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:214;;;;;;;;2022:24;;1971:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;1971:214:5;;;-1:-1:-1;;2106:10:5;1971:214;;;;;;;;;;;;;;;;;;;;;;;2170:4;1971:214;;;;;;;;;;;;;;;;;;;;;;1937:31;;;:19;:31;;;;;;:248;;;;:31;;:248;;-1:-1:-1;1937:31:5;;:248;;;;:::i;:::-;-1:-1:-1;1937:248:5;;;;;;;;;;-1:-1:-1;;;;;;1937:248:5;-1:-1:-1;;;;;1937:248:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1937:248:5;;;;;;;;;-1:-1:-1;;1937:248:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2238:10:5;27::-1;;39:1;23:18;;45:23;;-1:-1;2238:27:5;;;;;;;;;-1:-1:-1;2303:52:5;;;;;;2238:27;2303:52;;;;;;;;;;;;;2254:10;;2330:24;;;;2303:52;;;;2330:24;;;;2303:52;1:33:-1;99:1;81:16;;;74:27;2303:52:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2303:52:5;;;;-1:-1:-1;2303:52:5;;-1:-1:-1;;;;;2303:52:5;1648:714;;;:::o;741:142:2:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:2;:15;;-1:-1:-1;;;;;;806:15:2;-1:-1:-1;;;;;806:15:2;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:2;-1:-1:-1;;836:40:2;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;741:142:2;;:::o;4466:102:5:-;4544:10;:17;4466:102;:::o;2032:107:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;3400:1060:5:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;3671:39:5;3713:24;;;:12;:24;;;;;;;;-1:-1:-1;;;;;3713:40:5;;;;;;;;;3771:22;;;;;;3763:66;;;;;-1:-1:-1;;;;;3763:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:70;;;;;;;;;;;;;-1:-1:-1;;3860:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:17;;3860:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3860:20:5;;-1:-1:-1;;;3860:70:5:i;:::-;3839:169;;;;-1:-1:-1;;;;;3839:169:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4075:9;4071:143;;;4100:43;:26;;;4129:14;;4100:43;:::i;:::-;-1:-1:-1;4157:31:5;;;;:19;:31;;;;;:46;;4191:12;;4157:31;:46;;:31;;4191:12;;4157:46;-1:-1:-1;;4157:46:5;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4157:46:5;;;;;;;;;;-1:-1:-1;;;;;;4157:46:5;-1:-1:-1;;;;;4157:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4157:46:5;;;;;;:::i;:::-;-1:-1:-1;4157:46:5;;;;;;;;;;-1:-1:-1;;4157:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4157:46:5;;;;-1:-1:-1;;4157:46:5;;;;;;:::i;:::-;-1:-1:-1;;;4071:143:5;4283:24;;;;:12;:24;;;;;;;;-1:-1:-1;;;;;4283:40:5;;;;;;;;;;4276:47;4283:40;:24;4276:47;:::i;:::-;;;;;;-1:-1:-1;;;;;;4276:47:5;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;4276:47:5;;;;;;;;;:::i;:::-;;;4361:92;4380:10;4392:14;4408:17;;4427:14;;4443:9;4361:92;;;;;;;;;-1:-1:-1;;;;;4361:92:5;-1:-1:-1;;;;;4361:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;4361:92:5;;;;;;;;;;;-1:-1:-1;4361:92:5;;;;;1:33:-1;99:1;81:16;;;74:27;4361:92:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;4361:92:5;;;;-1:-1:-1;4361:92:5;;-1:-1:-1;;;;;;;;;;4361:92:5;1219:1:2;3400:1060:5;;;;;;;:::o;1319:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1319:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4574:263;4736:7;4783:10;4795:17;4814:14;4772:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4772:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4772:57:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4772:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4772:57:5;;;4762:68;;;;;;4755:75;;4574:263;;;;;:::o;725:360:8:-;809:7;878:27;935:6;;;;;;;;;;;;;;;;;943:11;918:37;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;918:37:8;;;;;-1:-1:-1;918:37:8;;;26:21:-1;;;6:49;;918:37:8;;;;;908:48;;;;;;;;;-1:-1:-1;;;;1010:45:8;;-1:-1:-1;908:48:8;1045:9;1010:13;:45::i;:::-;993:62;-1:-1:-1;;;725:360:8;;;;;:::o;867:96:0:-;946:10;867:96;:::o;1409:498:3:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:2:-;-1:-1:-1;;;;;2313:22:2;;2305:73;;;;-1:-1:-1;;;;;2305:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:2;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:2;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:2;-1:-1:-1;;;;;2441:17:2;;;;;;;;;;2240:225::o;51:260:9:-;128:4;174:2;168:16;154:2;148:16;:36;144:161;;-1:-1:-1;207:5:9;200:12;;144:161;290:2;274:20;;;;;;266:2;250:20;;;;;;:44;243:51;;;;1226:1891:1;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:1;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;-1:-1:-1;;;;;2786:79:1;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3086:24:1;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:1;;-1:-1:-1;;3086:24:1;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:1:o;343:4527:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;343:4527:5;;;-1:-1:-1;343:4527:5;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;343:4527:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "createProject(uint256,string)": "bf1a8003",
              "getProjectsLength()": "c6bdc0a2",
              "initialize(address)": "c4d66de8",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "pendingEdits(uint256,address)": "fd2ca96b",
              "projectIds(uint256)": "48c35ad4",
              "projectsDescription(uint256)": "b4796ce2",
              "proposeProjectEdit(uint256,string,string,bytes)": "843d160a",
              "registryInitialize()": "9506ec01",
              "renounceOwnership()": "715018a6",
              "submitProjectEditAuditResult(uint256,string,string,address,bool)": "f5cdd9c2",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposedIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeProjectEdit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registryInitialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectsDescription\",\"outputs\":[{\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"authorAddress\",\"type\":\"address\"},{\"name\":\"authorEmail\",\"type\":\"string\"},{\"name\":\"isCreated\",\"type\":\"bool\"},{\"name\":\"auditIpfsHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_initialProposalIpfsHash\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_authorAddress\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"submitProjectEditAuditResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingEdits\",\"outputs\":[{\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"authorAddress\",\"type\":\"address\"},{\"name\":\"authorEmail\",\"type\":\"string\"},{\"name\":\"isCreated\",\"type\":\"bool\"},{\"name\":\"auditIpfsHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposedIpfsHash\",\"type\":\"string\"}],\"name\":\"ProjectEditProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"auditIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProjectEditAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Stores projects related information\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/contracts/ProjectsRegistry.sol\":\"ProjectsRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]},\"src/contracts/ProjectsRegistry.sol\":{\"keccak256\":\"0x3d0140ef5be1864d6a5be548e3b799fe858cabb9316659778a089d18c6574974\",\"urls\":[\"bzzr://4608d2fbc558c7b1f7534f0c903cc0b0bfd0b7d87cfa96046b9b86737a39b6b1\"]},\"src/contracts/interfaces/IProjectsRegistry.sol\":{\"keccak256\":\"0xc83f4b91b3af69aa6cc65f7850a1c254fb8d433d82a47cd6f5f67fc0803c13da\",\"urls\":[\"bzzr://c039091f576131b5d443bae58678c6e3617296208f6b1d1c049701bc08bdb5e4\"]},\"src/contracts/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x7640764af901ef936847670e9221d794c5a1f8914e2a9ef877edb49892b5b83e\",\"urls\":[\"bzzr://dee27cc02f5f8fbb586336ce888e0747372c85b1d1de244928426eabb8bcc14e\"]},\"src/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x5ddd47496a33edbbd7440040c2638d1a5063a3cd04b353000e2da10eb5077aa9\",\"urls\":[\"bzzr://42bad4ea3a3bd293cedcf199d863f3228ea4de5ec24aba71d248fe5edab45f6a\"]}},\"version\":1}"
        }
      },
      "src/contracts/interfaces/IClaimsRegistry.sol": {
        "IClaimsRegistry": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimRejection",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proofHash",
                  "type": "string"
                },
                {
                  "name": "_activityId",
                  "type": "uint256"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeClaim",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_auditors",
                  "type": "address[]"
                },
                {
                  "name": "_claims",
                  "type": "bytes32[]"
                }
              ],
              "name": "areApproved",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimApproval",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "proposedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "auditor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "_approved",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "verifiedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimAudited",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "areApproved(uint256,address[],bytes32[])": "3e8e21e6",
              "proposeClaim(uint256,bytes32,string,uint256,string,bytes)": "3d8eeee9",
              "submitClaimApproval(uint256,bytes32,string,string,address,string,bytes)": "49e054d8",
              "submitClaimRejection(uint256,bytes32,string,string,address,string,bytes)": "025fd675"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimRejection\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proofHash\",\"type\":\"string\"},{\"name\":\"_activityId\",\"type\":\"uint256\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_auditors\",\"type\":\"address[]\"},{\"name\":\"_claims\",\"type\":\"bytes32[]\"}],\"name\":\"areApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"proposedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"auditor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimAudited\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"areApproved(uint256,address[],bytes32[])\":{\"params\":{\"_auditors\":\"- array of addresses of the auditors.\",\"_claims\":\"- array of bytes32 hashes of the claims.\",\"_projectId\":\"- address of a project.\"}},\"proposeClaim(uint256,bytes32,string,uint256,string,bytes)\":{\"details\":\"Validations being performed:      - The sender is the contract owner     Note: the identifier of a proposal is projectId+claimHash+proposerAddress, allowing           multiple proposals to exists for different proposers     Note: a user can override a proposal by sending a new one\",\"params\":{\"_activityId\":\"- the activity identifier.\",\"_authorizationSignature\":\"- the signature of the params by the proposer of the claim.\",\"_claimHash\":\"- bytes32 of the claim's hash.\",\"_projectId\":\"- the id of the project the claim is from.\",\"_proofHash\":\"- IPFS hash of the proof of the claim.\",\"_proposerEmail\":\"- the email of the user proposing the claim.\"}},\"submitClaimApproval(uint256,bytes32,string,string,address,string,bytes)\":{\"details\":\"Validations being performed:      - The proposal exists      - The proposal has the same proof hash as being passed as parameter      - The auditor didn't already submit his audit\",\"params\":{\"_auditIpfsHash\":\"- IPFS hash of the audit report\",\"_auditorEmail\":\"- email of the author of the audit.\",\"_authorizationSignature\":\"- the signature of the params by the auditor.\",\"_claimHash\":\"- bytes32 of the claim's hash being audited.\",\"_projectId\":\"- the id of the project the claim is from.\",\"_proposalProofHash\":\"- IPFS hash of the proof from the proposal.                            This is required as it's allowed for a user to override his proposal,                            preventing this from the auditor approving a proposal he didn't intended.\",\"_proposerAddress\":\"- address of the proposer of the claim.\"}},\"submitClaimRejection(uint256,bytes32,string,string,address,string,bytes)\":{\"details\":\"Validations being performed:      - The proposal exists      - The proposal has the same proof hash as being passed as parameter      - The auditor didn't already submit his audit\",\"params\":{\"_auditIpfsHash\":\"- IPFS hash of the audit report\",\"_auditorEmail\":\"- email of the author of the audit.\",\"_authorizationSignature\":\"- the signature of the params by the auditor.\",\"_claimHash\":\"- bytes32 of the claim's hash being audited.\",\"_projectId\":\"- the id of the project the claim is from.\",\"_proposalProofHash\":\"- IPFS hash of the proof from the proposal.                            This is required as it's allowed for a user to override his proposal,                            preventing this from the auditor approving a proposal he didn't intended.\",\"_proposerAddress\":\"- address of the proposer of the claim.\"}}},\"title\":\"This contract holds information about claims made buy COA members\"},\"userdoc\":{\"methods\":{\"areApproved(uint256,address[],bytes32[])\":{\"notice\":\"Checks whether the tasks from a project's milestone are approved).\"},\"proposeClaim(uint256,bytes32,string,uint256,string,bytes)\":{\"notice\":\"Proposes a claim, by sending it's hash and proof        The owner of the contract acts as the relayer, by propagating a signature by the proposer\"},\"submitClaimApproval(uint256,bytes32,string,string,address,string,bytes)\":{\"notice\":\"Submits the approval of a proposed claim as the result of the audit.        The owner of the contract acts as the relayer, by propagating a signature by the auditor.\"},\"submitClaimRejection(uint256,bytes32,string,string,address,string,bytes)\":{\"notice\":\"Submits the rejection of a proposed claim as the result of the audit.        The owner of the contract acts as the relayer, by propagating a signature by the auditor.\"}}}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IClaimsRegistry.sol\":\"IClaimsRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/IClaimsRegistry.sol\":{\"keccak256\":\"0xd31bf9774cebaf62ef64fb55aa6a51580a0bb652c00d24dcbadd701725a61962\",\"urls\":[\"bzzr://874bd0e7263b41199ac31a7907f67fa8fea8da70bd13de31aeec1823386838e9\"]}},\"version\":1}"
        }
      },
      "src/contracts/interfaces/IProjectsRegistry.sol": {
        "IProjectsRegistry": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposedIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeProjectEdit",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_initialIpfsHash",
                  "type": "string"
                }
              ],
              "name": "createProject",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getProjectsLength",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_authorAddress",
                  "type": "address"
                },
                {
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "submitProjectEditAuditResult",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "ipfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposedIpfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectEditProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "auditIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ProjectEditAudited",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "createProject(uint256,string)": "bf1a8003",
              "getProjectsLength()": "c6bdc0a2",
              "proposeProjectEdit(uint256,string,string,bytes)": "843d160a",
              "submitProjectEditAuditResult(uint256,string,string,address,bool)": "f5cdd9c2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposedIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeProjectEdit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_initialIpfsHash\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_authorAddress\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"submitProjectEditAuditResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposedIpfsHash\",\"type\":\"string\"}],\"name\":\"ProjectEditProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"auditIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProjectEditAudited\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"createProject(uint256,string)\":{\"details\":\"Validations being performed:      - The sender is the contract owner      - There's no created project with the same id\",\"params\":{\"_initialIpfsHash\":\"- the IPFS hash of the newly created project\",\"_projectId\":\"- the id of the project created\"}},\"proposeProjectEdit(uint256,string,string,bytes)\":{\"details\":\"Validations being performed:      - The sender is the contract owner      - The project edited exists     Note: the identifier of a proposal is the projectId+proposerAddress,           so there can be multiple proposals from different users     Note: a user can override his proposal by sending a new one\",\"params\":{\"_authorizationSignature\":\"- the authorization signature by the edit proposer\",\"_projectId\":\"- the id of the project that's proposed to be edited\",\"_proposedIpfsHash\":\"- the new proposed project's IPFS hash\",\"_proposerEmail\":\"- the email of the proposer\"}},\"submitProjectEditAuditResult(uint256,string,string,address,bool)\":{\"details\":\"Validations being performed:      - The sender is the contract owner      - The proposal exists, and has the parameter IPFS hash\",\"params\":{\"_approved\":\"- the audt result, whether the proposal was approved or not\",\"_auditIpfsHash\":\"- the IPFS hash of the audit report\",\"_authorAddress\":\"- the address of the author of the proposal\",\"_projectId\":\"- id of the project the edit belongs to\",\"_proposalIpfsHash\":\"- the IPFS hash of the project edit being audited.                           This is required as it's allowed for a user to override his proposal,                           preventing this from the auditor approving a proposal he didn't intended.\"}}},\"title\":\"Stores projects related information\"},\"userdoc\":{\"methods\":{\"createProject(uint256,string)\":{\"notice\":\"Creates a Project, can only be run by the admin        Submits the initial IPFS hash of a project\"},\"proposeProjectEdit(uint256,string,string,bytes)\":{\"notice\":\"proposes a project edit        It can only be run by the owner of the contract, which acts as the relayer,        by propagating a signature of the proposer\"},\"submitProjectEditAuditResult(uint256,string,string,address,bool)\":{\"notice\":\"Approves/rejects a proposed project edit        This can only be run by the admin\"}}}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IProjectsRegistry.sol\":\"IProjectsRegistry\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"src/contracts/interfaces/IProjectsRegistry.sol\":{\"keccak256\":\"0xc83f4b91b3af69aa6cc65f7850a1c254fb8d433d82a47cd6f5f67fc0803c13da\",\"urls\":[\"bzzr://c039091f576131b5d443bae58678c6e3617296208f6b1d1c049701bc08bdb5e4\"]}},\"version\":1}"
        }
      },
      "src/contracts/utils/SignatureVerifier.sol": {
        "SignatureVerifier": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e1f62f295898d7cf6ddfd2aa3ea1fdc1f02286a3da3a2b090674ca8eb89c8f960029",
              "opcodes": "PUSH1 0x4C PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 0xf6 0x2f 0x29 PC SWAP9 0xd7 0xcf PUSH14 0xDFD2AA3EA1FDC1F02286A3DA3A2B MULMOD MOD PUSH21 0xCA8EB89C8F96002900000000000000000000000000 ",
              "sourceMap": "387:700:8:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820e1f62f295898d7cf6ddfd2aa3ea1fdc1f02286a3da3a2b090674ca8eb89c8f960029",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xe1 0xf6 0x2f 0x29 PC SWAP9 0xd7 0xcf PUSH14 0xDFD2AA3EA1FDC1F02286A3DA3A2B MULMOD MOD PUSH21 0xCA8EB89C8F96002900000000000000000000000000 ",
              "sourceMap": "387:700:8:-;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract for verifying the signatures of the authorization message for performing actions on behalf of users * TODO: Add nonces to signatures to avoid potential replay attacks      This isn't sth core right now as the only sender of txs are our wallets\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/contracts/utils/SignatureVerifier.sol\":\"SignatureVerifier\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]},\"src/contracts/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x7640764af901ef936847670e9221d794c5a1f8914e2a9ef877edb49892b5b83e\",\"urls\":[\"bzzr://dee27cc02f5f8fbb586336ce888e0747372c85b1d1de244928426eabb8bcc14e\"]}},\"version\":1}"
        }
      },
      "src/contracts/utils/StringUtils.sol": {
        "StringUtils": {
          "abi": [],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "604c6023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820540faccfdbfa10f1c5cb97c3e373deacf3b040cde43a39e96808dfb224f3c97d0029",
              "opcodes": "PUSH1 0x4C PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xf 0xac 0xcf 0xdb STATICCALL LT CALL 0xc5 0xcb SWAP8 0xc3 0xe3 PUSH20 0xDEACF3B040CDE43A39E96808DFB224F3C97D0029 ",
              "sourceMap": "25:288:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea165627a7a72305820540faccfdbfa10f1c5cb97c3e373deacf3b040cde43a39e96808dfb224f3c97d0029",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 SLOAD 0xf 0xac 0xcf 0xdb STATICCALL LT CALL 0xc5 0xcb SWAP8 0xc3 0xe3 PUSH20 0xDEACF3B040CDE43A39E96808DFB224F3C97D0029 ",
              "sourceMap": "25:288:9:-;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/contracts/utils/StringUtils.sol\":\"StringUtils\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"src/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x5ddd47496a33edbbd7440040c2638d1a5063a3cd04b353000e2da10eb5077aa9\",\"urls\":[\"bzzr://42bad4ea3a3bd293cedcf199d863f3228ea4de5ec24aba71d248fe5edab45f6a\"]}},\"version\":1}"
        }
      },
      "src/contracts/utils/UpgradeableToV1.sol": {
        "UpgradeableToV1": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "name": "",
                  "type": "uint16"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50607e8061001e6000396000f3fe6080604052348015600f57600080fd5b5060043610602b5760e060020a600035046354fd4d5081146030575b600080fd5b6036604d565b6040805161ffff9092168252519081900360200190f35b60019056fea165627a7a72305820205bb02e25fb98b0450da99cea60eafde5ca3a9a5a1146e988848758805ff70f0029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x7E DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x2B JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x54FD4D50 DUP2 EQ PUSH1 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x36 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 KECCAK256 JUMPDEST 0xb0 0x2e 0x25 0xfb SWAP9 0xb0 GASLIMIT 0xd 0xa9 SWAP13 0xea PUSH1 0xEA REVERT 0xe5 0xca GASPRICE SWAP11 GAS GT 0x46 0xe9 DUP9 DUP5 DUP8 PC DUP1 0x5f 0xf7 0xf STOP 0x29 ",
              "sourceMap": "846:925:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:925:10;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b5060043610602b5760e060020a600035046354fd4d5081146030575b600080fd5b6036604d565b6040805161ffff9092168252519081900360200190f35b60019056fea165627a7a72305820205bb02e25fb98b0450da99cea60eafde5ca3a9a5a1146e988848758805ff70f0029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x2B JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x54FD4D50 DUP2 EQ PUSH1 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x36 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x1 SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 KECCAK256 JUMPDEST 0xb0 0x2e 0x25 0xfb SWAP9 0xb0 GASLIMIT 0xd 0xa9 SWAP13 0xea PUSH1 0xEA REVERT 0xe5 0xca GASPRICE SWAP11 GAS GT 0x46 0xe9 DUP9 DUP5 DUP8 PC DUP1 0x5f 0xf7 0xf STOP 0x29 ",
              "sourceMap": "846:925:10:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:925:10;;;;;;-1:-1:-1;;;846:925:10;;;;;;;;;;;;1587:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1652:1;1587:73;:::o"
            },
            "methodIdentifiers": {
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Helper contract to support upgrade functions. To use it, replace     the constructor with a function that has the `initializer` modifier.Not in use right now (apart from testing) as a single version contract is provided.     See the test contracts for an example on how to use it. WARNING: Unlike constructors, initializer functions must be manually         invoked. This applies both to deploying an UpgradeableToV1 contract, as well         as extending an UpgradeableToV1 contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke         a parent initializer twice, or ensure that all initializers are idempotent,         because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"UpgradeableToV1\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/contracts/utils/UpgradeableToV1.sol\":\"UpgradeableToV1\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"src/contracts/utils/UpgradeableToV1.sol\":{\"keccak256\":\"0x43b03a366784bc1f79a3c3338f23a6158ae356d2ac3a97bb35f9bc5479c96008\",\"urls\":[\"bzzr://50e951b1ec66448e0aca894e7f956beca941a161c1a39a1275885acd413a7f44\"]}},\"version\":1}"
        }
      },
      "src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol": {
        "ClaimsRegistryV1ForTests": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimRejection",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "stringVariable",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_auditorAddress",
                  "type": "address"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                }
              ],
              "name": "getClaimAudit",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "bool"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "string"
                },
                {
                  "name": "",
                  "type": "bool"
                },
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proofHash",
                  "type": "string"
                },
                {
                  "name": "_activityId",
                  "type": "uint256"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeClaim",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_auditors",
                  "type": "address[]"
                },
                {
                  "name": "_claims",
                  "type": "bytes32[]"
                }
              ],
              "name": "areApproved",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_claimHash",
                  "type": "bytes32"
                },
                {
                  "name": "_proposalProofHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerAddress",
                  "type": "address"
                },
                {
                  "name": "_auditorEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "submitClaimApproval",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "name": "",
                  "type": "uint16"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "registryInitialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                },
                {
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "name": "registryProposedClaims",
              "outputs": [
                {
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "name": "activityId",
                  "type": "uint256"
                },
                {
                  "name": "proposerAddress",
                  "type": "address"
                },
                {
                  "name": "proposerEmail",
                  "type": "string"
                },
                {
                  "name": "exists",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "setVariable",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "name": "_initialVariable",
                  "type": "string"
                }
              ],
              "name": "claimUpgradeToV1",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "proposedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "projectId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "name": "auditor",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "claimHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "name": "_approved",
                  "type": "bool"
                },
                {
                  "indexed": false,
                  "name": "proofHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "verifiedAt",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "activityId",
                  "type": "uint256"
                }
              ],
              "name": "ClaimAudited",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x2B17 DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD3 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x25FD675 DUP2 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x117B2467 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x12F057A4 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3D8EEEE9 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x3E8E21E6 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x49E054D8 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xD0D4A35C EQ PUSH2 0x8E8 JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC7 JUMPI DUP1 PUSH4 0xFA394FE8 EQ PUSH2 0xAED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x293 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP9 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP15 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x393 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP5 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x453 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x480 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 DUP3 CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x85C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1783 JUMP JUMPDEST PUSH2 0x86F PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x896 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x196C JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x91A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x983 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x96B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9B0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA10 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1C62 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0xBB5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC96 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP2 SWAP5 POP SWAP1 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1DAA SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD49 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xFB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x106C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1041 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x106C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x104F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP9 SWAP9 POP DUP6 SWAP6 POP DUP3 SWAP3 POP DUP1 SWAP1 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP4 SWAP8 SWAP12 SWAP3 SWAP7 SWAP11 POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP JUMP JUMPDEST PUSH2 0x10EA PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x112C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E4 PUSH2 0x11A8 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP4 POP SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2398 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x24AD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP13 DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x12B9 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1302 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0x941AC8C0858F17404D289E370F26A2A9A677C273773C8AC912D2A86EEED3F9DA DUP12 DUP12 TIMESTAMP DUP13 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 EQ PUSH2 0x1406 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x2 EXP PUSH25 0x617272617973206D75737420626520657175616C2073697A65 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1419 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x1434 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1472 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV SWAP1 SWAP5 MUL DUP2 ADD PUSH2 0x180 SWAP1 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP2 ADD DUP5 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP6 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1524 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1524 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1507 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x15DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1692 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1667 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1692 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1675 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x174C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1721 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x174C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x172F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH2 0x176B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x177A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1409 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x178B PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x17CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC96 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x1 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1DAA SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18BD PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x18FF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x195D PUSH2 0x256C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1985 JUMPI POP PUSH2 0x1985 PUSH2 0x2570 JUMP JUMPDEST DUP1 PUSH2 0x1993 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x19D1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x19FC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1A05 CALLER PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A33 JUMPI POP PUSH2 0x1A33 PUSH2 0x2570 JUMP JUMPDEST DUP1 PUSH2 0x1A41 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1A7F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 MSTORE SWAP1 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP1 DUP6 ADD SLOAD PUSH1 0x2 DUP1 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT SWAP10 DUP6 AND ISZERO PUSH2 0x100 MUL SWAP10 SWAP1 SWAP10 ADD SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 DIV SWAP7 DUP8 ADD DUP3 SWAP1 DIV DUP3 MUL DUP6 ADD DUP3 ADD SWAP1 MSTORE DUP6 DUP5 MSTORE SWAP8 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP7 POP SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1C4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1AF9 SWAP1 PUSH1 0x9A SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH2 0x1C7D PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x1CBF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1CE1 JUMPI POP PUSH1 0x9B SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1D1F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2ABB PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x9B DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1D53 DUP5 PUSH2 0x2576 JUMP JUMPDEST PUSH2 0x1D92 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1C62 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x9B DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x1DF4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E0E PUSH2 0x1E08 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2608 JUMP JUMPDEST DUP4 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0x1E93 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x5A PUSH1 0x2 EXP PUSH21 0x10DB185A5B481DD85CDB89DD081C1C9BDC1BDCD959 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1F28 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x1F66 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A18 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FDB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 SLOAD PUSH2 0x180 PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP2 SWAP1 DIV MUL DUP4 ADD DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2075 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x204A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2075 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2058 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x212C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2101 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x210F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x67 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP14 DUP3 MSTORE DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP1 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x21B0 SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x21F9 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x2253 SWAP3 PUSH1 0x6 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x22A0 SWAP2 PUSH1 0x8 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP SWAP1 POP POP DUP9 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0xFFE8853C16839A0A7A36143E70A10D6DC4FE237832780D9419DAB5B52AF39A37 DUP8 DUP6 PUSH1 0x0 ADD TIMESTAMP DUP8 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x237B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2350 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x237B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x235E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23F5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23DD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2455 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x243D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2482 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2519 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x24FA JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2561 SWAP1 POP DUP3 DUP6 PUSH2 0x27CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29F2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2687 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x26B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26CF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2714 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2747 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2774 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x27B7 JUMPI POP PUSH1 0x0 PUSH2 0x2566 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x27E2 JUMPI POP PUSH1 0x0 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x281E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x2566 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2836 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x2847 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x289E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x28C7 PUSH2 0x297B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x293E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x296B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x296B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x296B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2950 JUMP JUMPDEST POP PUSH2 0x2977 SWAP3 SWAP2 POP PUSH2 0x29B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2977 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x29BB JUMP INVALID COINBASE PUSH22 0x6469746F7220616C7265616479206175646974656420 PUSH21 0x68697320636C61696D4F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373436C61696D2070726F706F73616C2068 PUSH2 0x7320 PUSH5 0x6966666572 PUSH6 0x6E742070726F PUSH16 0x662068617368207468616E2065787065 PUSH4 0x7465644F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20757067726164656420 PUSH21 0x6F207631A165627A7A7230582031CC7C6CB9C59EEB SIGNEXTEND 0xc PUSH26 0x702434B90FD47EC49CF401F9886B6080109F8CDFC50029000000 ",
              "sourceMap": "320:321:11:-;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100d35760e060020a6000350463025fd67581146100d8578063117b24671461025157806312f057a4146102ce5780633d8eeee9146104f95780633e8e21e61461061757806349e054d8146106f057806354fd4d5014610867578063715018a6146108865780638da5cb5b1461088e5780638f32d59b146108b25780639506ec01146108ba578063c4d66de8146108c2578063d0d4a35c146108e8578063d746afa614610a23578063f2fde38b14610ac7578063fa394fe814610aed575b600080fd5b61024f600480360360e08110156100ee57600080fd5b813591602081013591810190606081016040820135602060020a81111561011457600080fd5b82018360208201111561012657600080fd5b803590602001918460018302840111602060020a8311171561014757600080fd5b919390929091602081019035602060020a81111561016457600080fd5b82018360208201111561017657600080fd5b803590602001918460018302840111602060020a8311171561019757600080fd5b91939092600160a060020a0383351692604081019060200135602060020a8111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460018302840111602060020a831117156101f457600080fd5b919390929091602081019035602060020a81111561021157600080fd5b82018360208201111561022357600080fd5b803590602001918460018302840111602060020a8311171561024457600080fd5b509092509050610b6b565b005b610259610ca3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561029357818101518382015260200161027b565b50505050905090810190601f1680156102c05780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610300600480360360608110156102e457600080fd5b50803590600160a060020a036020820135169060400135610d31565b60405180806020018a815260200189600160a060020a0316600160a060020a03168152602001806020018815151515815260200187600160a060020a0316600160a060020a0316815260200180602001861515151581526020018060200185810385528e818151815260200191508051906020019080838360005b8381101561039357818101518382015260200161037b565b50505050905090810190601f1680156103c05780820380516001836020036101000a031916815260200191505b5085810384528b5181528b516020918201918d019080838360005b838110156103f35781810151838201526020016103db565b50505050905090810190601f1680156104205780820380516001836020036101000a031916815260200191505b5085810383528851815288516020918201918a019080838360005b8381101561045357818101518382015260200161043b565b50505050905090810190601f1680156104805780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b838110156104b357818101518382015260200161049b565b50505050905090810190601f1680156104e05780820380516001836020036101000a031916815260200191505b509d505050505050505050505050505060405180910390f35b61024f600480360360c081101561050f57600080fd5b813591602081013591810190606081016040820135602060020a81111561053557600080fd5b82018360208201111561054757600080fd5b803590602001918460018302840111602060020a8311171561056857600080fd5b91939092823592604081019060200135602060020a81111561058957600080fd5b82018360208201111561059b57600080fd5b803590602001918460018302840111602060020a831117156105bc57600080fd5b919390929091602081019035602060020a8111156105d957600080fd5b8201836020820111156105eb57600080fd5b803590602001918460018302840111602060020a8311171561060c57600080fd5b5090925090506110e2565b6106dc6004803603606081101561062d57600080fd5b81359190810190604081016020820135602060020a81111561064e57600080fd5b82018360208201111561066057600080fd5b803590602001918460208302840111602060020a8311171561068157600080fd5b919390929091602081019035602060020a81111561069e57600080fd5b8201836020820111156106b057600080fd5b803590602001918460208302840111602060020a831117156106d157600080fd5b5090925090506113ae565b604080519115158252519081900360200190f35b61024f600480360360e081101561070657600080fd5b813591602081013591810190606081016040820135602060020a81111561072c57600080fd5b82018360208201111561073e57600080fd5b803590602001918460018302840111602060020a8311171561075f57600080fd5b919390929091602081019035602060020a81111561077c57600080fd5b82018360208201111561078e57600080fd5b803590602001918460018302840111602060020a831117156107af57600080fd5b91939092600160a060020a0383351692604081019060200135602060020a8111156107d957600080fd5b8201836020820111156107eb57600080fd5b803590602001918460018302840111602060020a8311171561080c57600080fd5b919390929091602081019035602060020a81111561082957600080fd5b82018360208201111561083b57600080fd5b803590602001918460018302840111602060020a8311171561085c57600080fd5b509092509050611783565b61086f6118af565b6040805161ffff9092168252519081900360200190f35b61024f6118b5565b610896611937565b60408051600160a060020a039092168252519081900360200190f35b6106dc611946565b61024f61196c565b61024f600480360360208110156108d857600080fd5b5035600160a060020a0316611a1a565b61091a600480360360608110156108fe57600080fd5b50803590600160a060020a036020820135169060400135611afd565b604051808060200186815260200185600160a060020a0316600160a060020a031681526020018060200184151515158152602001838103835288818151815260200191508051906020019080838360005b8381101561098357818101518382015260200161096b565b50505050905090810190601f1680156109b05780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b838110156109e35781810151838201526020016109cb565b50505050905090810190601f168015610a105780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b61024f60048036036020811015610a3957600080fd5b810190602081018135602060020a811115610a5357600080fd5b820183602082011115610a6557600080fd5b803590602001918460018302840111602060020a83111715610a8657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611c62945050505050565b61024f60048036036020811015610add57600080fd5b5035600160a060020a0316611c75565b61024f60048036036040811015610b0357600080fd5b600160a060020a038235169190810190604081016020820135602060020a811115610b2d57600080fd5b820183602082011115610b3f57600080fd5b803590602001918460018302840111602060020a83111715610b6057600080fd5b509092509050611cc8565b610b73611946565b610bb5576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b610c968b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8f018190048102820181019092528d815292508d91508c908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81528d935091508b908b90819084018382808284376000920182905250604080516020601f8f018190048102820181019092528d81529194509092508c91508b9081908401838280828437600092019190915250611daa92505050565b5050505050505050505050565b609a805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610d295780601f10610cfe57610100808354040283529160200191610d29565b820191906000526020600020905b815481529060010190602001808311610d0c57829003601f168201915b505050505081565b60606000806060600080606060006060610d496128b3565b606760008e815260200190815260200160002060008d600160a060020a0316600160a060020a0316815260200190815260200160002060008c81526020019081526020016000206040518060c0016040529081600082016040518060a0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610e445780601f10610e1957610100808354040283529160200191610e44565b820191906000526020600020905b815481529060010190602001808311610e2757829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f81018490048402850184019091528084526060909401939091830182828015610efb5780601f10610ed057610100808354040283529160200191610efb565b820191906000526020600020905b815481529060010190602001808311610ede57829003601f168201915b50505091835250506004919091015460ff1615156020918201529082526005830154600160a060020a03168282015260068301805460408051601f60026000196001861615610100020190941693909304928301859004850281018501825282815294019392830182828015610fb25780601f10610f8757610100808354040283529160200191610fb2565b820191906000526020600020905b815481529060010190602001808311610f9557829003601f168201915b5050509183525050600782015460ff80821615156020808501919091526101009283900490911615156040808501919091526008850180548251600260018316159096026000190190911694909404601f81018490048402850184019092528184526060909401939183018282801561106c5780601f106110415761010080835404028352916020019161106c565b820191906000526020600020905b81548152906001019060200180831161104f57829003601f168201915b505050505081525050905080600001516000015181600001516020015182600001516040015183600001516060015184608001518560200151866040015187606001518860a001518898508595508292508090509950995099509950995099509950995099505093979b92969a50939750939750565b6110ea611946565b61112c576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b60006111e46111a88b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8e018190048102820181019092528c81528e935091508c908c908190840183828082843760009201919091525061239892505050565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506124ad92505050565b6040805160c06020601f8c01819004028201810190925260a081018a81529293509182918b908b90819085018382808284376000920191909152505050908252506020808201899052600160a060020a0384166040808401919091528051601f8901839004830281018301909152878152606090920191908890889081908401838280828437600092018290525093855250506001602093840152508c8152606682526040808220600160a060020a038616835283528082208d8352835290208251805191926112b9928492909101906128fd565b5060208281015160018301556040830151600283018054600160a060020a031916600160a060020a039092169190911790556060830151805161130292600385019201906128fd565b5060808201518160040160006101000a81548160ff0219169083151502179055509050508881600160a060020a03168b7f941ac8c0858f17404d289e370f26a2a9a677c273773c8ac912d2a86eeed3f9da8b8b428c60405180806020018481526020018381526020018281038252868682818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a450505050505050505050565b6000838214611406576040805160e560020a62461bcd0281526020600482015260196024820152603860020a78617272617973206d75737420626520657175616c2073697a6502604482015290519081900360640190fd5b60005b82811015611774576114196128b3565b60008881526067602052604081209088888581811061143457fe5b90506020020135600160a060020a0316600160a060020a0316600160a060020a03168152602001908152602001600020600086868581811061147257fe5b602090810292909201358352508181019290925260409081016000208151815460026001821615610100026000190190911604601f81018590049094028101610180908101909352610160810184815290939192849260c08401928592849284918701828280156115245780601f106114f957610100808354040283529160200191611524565b820191906000526020600020905b81548152906001019060200180831161150757829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f810184900484028501840190915280845260609094019390918301828280156115db5780601f106115b0576101008083540402835291602001916115db565b820191906000526020600020905b8154815290600101906020018083116115be57829003601f168201915b50505091835250506004919091015460ff1615156020918201529082526005830154600160a060020a03168282015260068301805460408051601f600260001960018616156101000201909416939093049283018590048502810185018252828152940193928301828280156116925780601f1061166757610100808354040283529160200191611692565b820191906000526020600020905b81548152906001019060200180831161167557829003601f168201915b5050509183525050600782015460ff80821615156020808501919091526101009283900490911615156040808501919091526008850180548251600260018316159096026000190190911694909404601f81018490048402850184019092528184526060909401939183018282801561174c5780601f106117215761010080835404028352916020019161174c565b820191906000526020600020905b81548152906001019060200180831161172f57829003601f168201915b5050505050815250509050806060015161176b5760009250505061177a565b50600101611409565b50600190505b95945050505050565b61178b611946565b6117cd576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b610c968b8b8b8b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8f018190048102820181019092528d815292508d91508c908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81528d935091508b908b908190840183828082843760009201919091525050604080516020601f8d018190048102820181019092528b81526001935091508b908b9081908401838280828437600092019190915250611daa92505050565b60015b90565b6118bd611946565b6118ff576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a031690600080516020612a6d833981519152908390a360338054600160a060020a0319169055565b603354600160a060020a031690565b603354600090600160a060020a031661195d61256c565b600160a060020a031614905090565b600054610100900460ff16806119855750611985612570565b80611993575060005460ff16155b6119d15760405160e560020a62461bcd02815260040180806020018281038252602e815260200180612a8d602e913960400191505060405180910390fd5b600054610100900460ff161580156119fc576000805460ff1961ff0019909116610100171660011790555b611a0533611a1a565b8015611a17576000805461ff00191690555b50565b600054610100900460ff1680611a335750611a33612570565b80611a41575060005460ff16155b611a7f5760405160e560020a62461bcd02815260040180806020018281038252602e815260200180612a8d602e913960400191505060405180910390fd5b600054610100900460ff16158015611aaa576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a038481169190911791829055604051911690600090600080516020612a6d833981519152908290a38015611af9576000805461ff00191690555b5050565b6066602090815260009384526040808520825292845282842081529083529181902080548251601f600260001961010060018616150201909316929092049182018590048502810185019093528083529092839190830182828015611ba35780601f10611b7857610100808354040283529160200191611ba3565b820191906000526020600020905b815481529060010190602001808311611b8657829003601f168201915b505050600180850154600280870154600388018054604080516020601f60001999851615610100029990990190931695909504968701829004820285018201905285845297989397600160a060020a039092169650929450909290830182828015611c4f5780601f10611c2457610100808354040283529160200191611c4f565b820191906000526020600020905b815481529060010190602001808311611c3257829003601f168201915b5050506004909301549192505060ff1685565b8051611af990609a9060208401906128fd565b611c7d611946565b611cbf576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b611a1781612576565b609b54610100900460ff1680611ce15750609b5460ff16155b611d1f5760405160e560020a62461bcd028152600401808060200182810382526031815260200180612abb6031913960400191505060405180910390fd5b609b54610100900460ff16158015611d4a57609b805460ff1961ff0019909116610100171660011790555b611d5384612576565b611d9283838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6292505050565b8015611da457609b805461ff00191690555b50505050565b611db2611946565b611df4576040805160e560020a62461bcd0281526020600482018190526024820152600080516020612a4d833981519152604482015290519081900360640190fd5b6000611e0e611e088a8a8a8a8a8a8a612608565b836124ad565b60008a8152606660209081526040808320600160a060020a038a16845282528083208c8452909152902060048101549192509060ff16611e93576040805160e560020a62461bcd0281526020600482015260156024820152605a60020a7410db185a5b481dd85cdb89dd081c1c9bdc1bdcd95902604482015290519081900360640190fd5b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152611f289290918491830182828015611f1d5780601f10611ef257610100808354040283529160200191611f1d565b820191906000526020600020905b815481529060010190602001808311611f0057829003601f168201915b5050505050896127a4565b611f665760405160e560020a62461bcd028152600401808060200182810382526035815260200180612a186035913960400191505060405180910390fd5b60008a8152606760209081526040808320600160a060020a038616845282528083208c8452909152902060070154610100900460ff1615611fdb5760405160e560020a62461bcd0281526004018080602001828103825260228152602001806129d06022913960400191505060405180910390fd5b6040805182546101806020601f60026000196101006001871615020190941693909304928301819004028301810190935261016082018181529192839260c0840192869284929184918701828280156120755780601f1061204a57610100808354040283529160200191612075565b820191906000526020600020905b81548152906001019060200180831161205857829003601f168201915b5050509183525050600182810154602080840191909152600280850154600160a060020a031660408086019190915260038601805482516101009682161596909602600019011692909204601f8101849004840285018401909152808452606090940193909183018282801561212c5780601f106121015761010080835404028352916020019161212c565b820191906000526020600020905b81548152906001019060200180831161210f57829003601f168201915b50505091835250506004919091015460ff161515602091820152908252600160a060020a03851682820181905260408084018a905288151560608501526001608085015260a09093018b905260008e8152606783528381209181529082528281208d82528252919091208251805180519293919284926121b09284929101906128fd565b5060208281015160018301556040830151600283018054600160a060020a031916600160a060020a03909216919091179055606083015180516121f992600385019201906128fd565b50608091909101516004909101805460ff1916911515919091179055602082810151600583018054600160a060020a031916600160a060020a039092169190911790556040830151805161225392600685019201906128fd565b506060820151600782018054608085015115156101000261ff001993151560ff19909216919091179290921691909117905560a082015180516122a09160088401916020909101906128fd565b509050508882600160a060020a03168b7fffe8853c16839a0a7a36143e70a10d6dc4fe237832780d9419dab5b52af39a37878560000142876001015460405180851515151581526020018060200184815260200183815260200182810382528581815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561237b5780601f106123505761010080835404028352916020019161237b565b820191906000526020600020905b81548152906001019060200180831161235e57829003601f168201915b50509550505050505060405180910390a450505050505050505050565b60008585858585604051602001808681526020018581526020018060200184815260200180602001838103835286818151815260200191508051906020019080838360005b838110156123f55781810151838201526020016123dd565b50505050905090810190601f1680156124225780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561245557818101518382015260200161243d565b50505050905090810190601f1680156124825780820380516001836020036101000a031916815260200191505b5097505050505050505060405160208183030381529060405280519060200120905095945050505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250846040516020018083805190602001908083835b602083106125195780518252601f1990920191602091820191016124fa565b51815160209384036101000a600019018019909216911617905292019384525060408051808503815293820190528251920191909120925060009150612561905082856127cf565b925050505b92915050565b3390565b303b1590565b600160a060020a0381166125be5760405160e560020a62461bcd0281526004018080602001828103825260268152602001806129f26026913960400191505060405180910390fd5b603354604051600160a060020a03808416921690600080516020612a6d83398151915290600090a360338054600160a060020a031916600160a060020a0392909216919091179055565b60008787878787878760405160200180888152602001878152602001806020018060200186600160a060020a0316600160a060020a031681526020018060200185151515158152602001848103845289818151815260200191508051906020019080838360005b8381101561268757818101518382015260200161266f565b50505050905090810190601f1680156126b45780820380516001836020036101000a031916815260200191505b5084810383528851815288516020918201918a019080838360005b838110156126e75781810151838201526020016126cf565b50505050905090810190601f1680156127145780820380516001836020036101000a031916815260200191505b50848103825286518152865160209182019188019080838360005b8381101561274757818101518382015260200161272f565b50505050905090810190601f1680156127745780820380516001836020036101000a031916815260200191505b509a5050505050505050505050604051602081830303815290604052805190602001209050979650505050505050565b600081518351146127b757506000612566565b81805190602001208380519060200120149050612566565b600081516041146127e257506000612566565b60208201516040830151606084015160001a6fa2a8918ca85bafe22016d0b997e4df6060ff60020a0382111561281e5760009350505050612566565b8060ff16601b1415801561283657508060ff16601c14155b156128475760009350505050612566565b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa15801561289e573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b6040518061014001604052806128c761297b565b81526020016000600160a060020a0316815260200160608152602001600015158152602001600015158152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061293e57805160ff191683800117855561296b565b8280016001018555821561296b579182015b8281111561296b578251825591602001919060010190612950565b506129779291506129b5565b5090565b6040518060a0016040528060608152602001600081526020016000600160a060020a03168152602001606081526020016000151581525090565b6118b291905b8082111561297757600081556001016129bb56fe41756469746f7220616c72656164792061756469746564207468697320636c61696d4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373436c61696d2070726f706f73616c2068617320646966666572656e742070726f6f662068617368207468616e2065787065637465644f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20757067726164656420746f207631a165627a7a7230582031cc7c6cb9c59eeb0b0c79702434b90fd47ec49cf401f9886b6080109f8cdfc50029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD3 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x25FD675 DUP2 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x117B2467 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x12F057A4 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x3D8EEEE9 EQ PUSH2 0x4F9 JUMPI DUP1 PUSH4 0x3E8E21E6 EQ PUSH2 0x617 JUMPI DUP1 PUSH4 0x49E054D8 EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x886 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x88E JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x8B2 JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x8C2 JUMPI DUP1 PUSH4 0xD0D4A35C EQ PUSH2 0x8E8 JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC7 JUMPI DUP1 PUSH4 0xFA394FE8 EQ PUSH2 0xAED JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x197 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xB6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x259 PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x293 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x27B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP9 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 DUP2 SUB DUP6 MSTORE DUP15 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x393 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x37B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x3C0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP5 MSTORE DUP12 MLOAD DUP2 MSTORE DUP12 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP14 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3F3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x420 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x453 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x480 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP6 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4B3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x49B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4E0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 DUP3 CALLDATALOAD SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x10E2 JUMP JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x62D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x64E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x660 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x681 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x69E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x706 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x72C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x75F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x78E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x7AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 CALLDATALOAD AND SWAP3 PUSH1 0x40 DUP2 ADD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x7EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x80C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x829 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x83B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x85C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1783 JUMP JUMPDEST PUSH2 0x86F PUSH2 0x18AF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x896 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x24F PUSH2 0x196C JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1A1A JUMP JUMPDEST PUSH2 0x91A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x983 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x96B JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x9B0 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E3 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9CB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xA10 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA39 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xA53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0xA86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1C62 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1C75 JUMP JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xB2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xB3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0xB60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x1CC8 JUMP JUMPDEST PUSH2 0xB73 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0xBB5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC96 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP2 SWAP5 POP SWAP1 SWAP3 POP DUP13 SWAP2 POP DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1DAA SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9A DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xD29 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCFE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD29 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD0C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x0 PUSH1 0x60 PUSH2 0xD49 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x67 PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP14 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEFB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xED0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEFB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEDE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xFB2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF87 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xFB2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF95 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x106C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1041 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x106C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x104F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 PUSH1 0x0 ADD MLOAD PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x40 ADD MLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0x60 ADD MLOAD DUP5 PUSH1 0x80 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x40 ADD MLOAD DUP8 PUSH1 0x60 ADD MLOAD DUP9 PUSH1 0xA0 ADD MLOAD DUP9 SWAP9 POP DUP6 SWAP6 POP DUP3 SWAP3 POP DUP1 SWAP1 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP SWAP10 POP POP SWAP4 SWAP8 SWAP12 SWAP3 SWAP7 SWAP11 POP SWAP4 SWAP8 POP SWAP4 SWAP8 POP JUMP JUMPDEST PUSH2 0x10EA PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x112C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E4 PUSH2 0x11A8 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP15 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP13 DUP2 MSTORE DUP15 SWAP4 POP SWAP2 POP DUP13 SWAP1 DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x2398 SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x24AD SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP13 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x20 DUP1 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x40 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD SWAP1 SWAP2 MSTORE DUP8 DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 SWAP4 DUP5 ADD MSTORE POP DUP13 DUP2 MSTORE PUSH1 0x66 DUP3 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP4 MSTORE DUP4 MSTORE DUP1 DUP3 KECCAK256 DUP14 DUP4 MSTORE DUP4 MSTORE SWAP1 KECCAK256 DUP3 MLOAD DUP1 MLOAD SWAP2 SWAP3 PUSH2 0x12B9 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1302 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP9 DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0x941AC8C0858F17404D289E370F26A2A9A677C273773C8AC912D2A86EEED3F9DA DUP12 DUP12 TIMESTAMP DUP13 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP7 DUP7 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 EQ PUSH2 0x1406 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x2 EXP PUSH25 0x617272617973206D75737420626520657175616C2073697A65 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1774 JUMPI PUSH2 0x1419 PUSH2 0x28B3 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0x1434 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x1472 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD DUP4 MSTORE POP DUP2 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x2 PUSH1 0x1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH1 0x1F DUP2 ADD DUP6 SWAP1 DIV SWAP1 SWAP5 MUL DUP2 ADD PUSH2 0x180 SWAP1 DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP2 ADD DUP5 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP6 SWAP3 DUP5 SWAP3 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1524 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1524 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1507 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x15DB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15B0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15DB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15BE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP3 DUP3 ADD MSTORE PUSH1 0x6 DUP4 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH1 0x1 DUP7 AND ISZERO PUSH2 0x100 MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD DUP3 MSTORE DUP3 DUP2 MSTORE SWAP5 ADD SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1692 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1667 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1692 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1675 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x7 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP3 DUP4 SWAP1 DIV SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP6 ADD DUP1 SLOAD DUP3 MLOAD PUSH1 0x2 PUSH1 0x1 DUP4 AND ISZERO SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND SWAP5 SWAP1 SWAP5 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x174C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1721 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x174C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x172F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD PUSH2 0x176B JUMPI PUSH1 0x0 SWAP3 POP POP POP PUSH2 0x177A JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1409 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x178B PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x17CD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xC96 DUP12 DUP12 DUP12 DUP12 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP16 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP14 DUP2 MSTORE SWAP3 POP DUP14 SWAP2 POP DUP13 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE DUP14 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE PUSH1 0x1 SWAP4 POP SWAP2 POP DUP12 SWAP1 DUP12 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1DAA SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x18BD PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x18FF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x195D PUSH2 0x256C JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1985 JUMPI POP PUSH2 0x1985 PUSH2 0x2570 JUMP JUMPDEST DUP1 PUSH2 0x1993 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x19D1 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x19FC JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1A05 CALLER PUSH2 0x1A1A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1A17 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1A33 JUMPI POP PUSH2 0x1A33 PUSH2 0x2570 JUMP JUMPDEST DUP1 PUSH2 0x1A41 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1A7F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A8D PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1AAA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 DUP2 MSTORE SWAP1 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1BA3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B78 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BA3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B86 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP1 DUP6 ADD SLOAD PUSH1 0x2 DUP1 DUP8 ADD SLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x0 NOT SWAP10 DUP6 AND ISZERO PUSH2 0x100 MUL SWAP10 SWAP1 SWAP10 ADD SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 DIV SWAP7 DUP8 ADD DUP3 SWAP1 DIV DUP3 MUL DUP6 ADD DUP3 ADD SWAP1 MSTORE DUP6 DUP5 MSTORE SWAP8 SWAP9 SWAP4 SWAP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP7 POP SWAP3 SWAP5 POP SWAP1 SWAP3 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1C4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0xFF AND DUP6 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x1AF9 SWAP1 PUSH1 0x9A SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST PUSH2 0x1C7D PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x1CBF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x1A17 DUP2 PUSH2 0x2576 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1CE1 JUMPI POP PUSH1 0x9B SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1D1F JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2ABB PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1D4A JUMPI PUSH1 0x9B DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1D53 DUP5 PUSH2 0x2576 JUMP JUMPDEST PUSH2 0x1D92 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1C62 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1DA4 JUMPI PUSH1 0x9B DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DB2 PUSH2 0x1946 JUMP JUMPDEST PUSH2 0x1DF4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A4D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E0E PUSH2 0x1E08 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x2608 JUMP JUMPDEST DUP4 PUSH2 0x24AD JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x66 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP11 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0x1E93 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x5A PUSH1 0x2 EXP PUSH21 0x10DB185A5B481DD85CDB89DD081C1C9BDC1BDCD959 MUL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x1F28 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1F1D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EF2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1F1D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1F00 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP10 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0x1F66 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x35 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2A18 PUSH1 0x35 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP13 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1FDB JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29D0 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 SLOAD PUSH2 0x180 PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP8 AND ISZERO MUL ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV SWAP3 DUP4 ADD DUP2 SWAP1 DIV MUL DUP4 ADD DUP2 ADD SWAP1 SWAP4 MSTORE PUSH2 0x160 DUP3 ADD DUP2 DUP2 MSTORE SWAP2 SWAP3 DUP4 SWAP3 PUSH1 0xC0 DUP5 ADD SWAP3 DUP7 SWAP3 DUP5 SWAP3 SWAP2 DUP5 SWAP2 DUP8 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x2075 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x204A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2075 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2058 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP7 ADD DUP1 SLOAD DUP3 MLOAD PUSH2 0x100 SWAP7 DUP3 AND ISZERO SWAP7 SWAP1 SWAP7 MUL PUSH1 0x0 NOT ADD AND SWAP3 SWAP1 SWAP3 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP2 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x212C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2101 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x212C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x210F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x20 SWAP2 DUP3 ADD MSTORE SWAP1 DUP3 MSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP6 AND DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 ADD DUP11 SWAP1 MSTORE DUP9 ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP4 ADD DUP12 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x67 DUP4 MSTORE DUP4 DUP2 KECCAK256 SWAP2 DUP2 MSTORE SWAP1 DUP3 MSTORE DUP3 DUP2 KECCAK256 DUP14 DUP3 MSTORE DUP3 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP1 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 PUSH2 0x21B0 SWAP3 DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x60 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x21F9 SWAP3 PUSH1 0x3 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x80 SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x2253 SWAP3 PUSH1 0x6 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x7 DUP3 ADD DUP1 SLOAD PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x22A0 SWAP2 PUSH1 0x8 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x28FD JUMP JUMPDEST POP SWAP1 POP POP DUP9 DUP3 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP12 PUSH32 0xFFE8853C16839A0A7A36143E70A10D6DC4FE237832780D9419DAB5B52AF39A37 DUP8 DUP6 PUSH1 0x0 ADD TIMESTAMP DUP8 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP6 DUP2 DUP2 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x237B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2350 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x237B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x235E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x23F5 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x23DD JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2422 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2455 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x243D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2482 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP8 POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2519 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x24FA JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x2561 SWAP1 POP DUP3 DUP6 PUSH2 0x27CF JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x25BE JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29F2 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A6D DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2687 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x266F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x26B4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP9 MLOAD DUP2 MSTORE DUP9 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP11 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x26E7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x26CF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2714 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP7 MLOAD DUP2 MSTORE DUP7 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP9 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2747 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x272F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2774 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP11 POP POP POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x27B7 JUMPI POP PUSH1 0x0 PUSH2 0x2566 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x27E2 JUMPI POP PUSH1 0x0 PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x281E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x2566 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2836 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x2847 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x2566 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x289E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x28C7 PUSH2 0x297B JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x293E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x296B JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x296B JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x296B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2950 JUMP JUMPDEST POP PUSH2 0x2977 SWAP3 SWAP2 POP PUSH2 0x29B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x18B2 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2977 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x29BB JUMP INVALID COINBASE PUSH22 0x6469746F7220616C7265616479206175646974656420 PUSH21 0x68697320636C61696D4F776E61626C653A206E6577 KECCAK256 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373436C61696D2070726F706F73616C2068 PUSH2 0x7320 PUSH5 0x6966666572 PUSH6 0x6E742070726F PUSH16 0x662068617368207468616E2065787065 PUSH4 0x7465644F PUSH24 0x6E61626C653A2063616C6C6572206973206E6F7420746865 KECCAK256 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20757067726164656420 PUSH21 0x6F207631A165627A7A7230582031CC7C6CB9C59EEB SIGNEXTEND 0xc PUSH26 0x702434B90FD47EC49CF401F9886B6080109F8CDFC50029000000 ",
              "sourceMap": "320:321:11:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;320:321:11;;;;;;-1:-1:-1;;;320:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3692:586:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3692:586:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;-1:-1:-1;;;;;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3692:586:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3692:586:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3692:586:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3692:586:4;;-1:-1:-1;3692:586:4;-1:-1:-1;3692:586:4;:::i;:::-;;164:28:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7479:878:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7479:878:4;;;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;7479:878:4;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7479:878:4;-1:-1:-1;;;;;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7479:878:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;7479:878:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2082:1014;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2082:1014:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2082:1014:4;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2082:1014:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2082:1014:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2082:1014:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2082:1014:4;;-1:-1:-1;2082:1014:4;-1:-1:-1;2082:1014:4;:::i;6472:609::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6472:609:4;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6472:609:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6472:609:4;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;6472:609:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;6472:609:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6472:609:4;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;-1:-1;6472:609:4;;-1:-1:-1;6472:609:4;-1:-1:-1;6472:609:4;:::i;:::-;;;;;;;;;;;;;;;;;;3102:584;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3102:584:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;-1:-1:-1;;;;;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3102:584:4;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3102:584:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3102:584:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;3102:584:4;;-1:-1:-1;3102:584:4;-1:-1:-1;3102:584:4;:::i;1587:73:10:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1746:137:2;;;:::i;959:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:2;;;;;;;;;;;;;;1310:92;;;:::i;1980:96:4:-;;;:::i;741:142:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:2;-1:-1:-1;;;;;741:142:2;;:::i;1682:103:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1682:103:4;;;-1:-1:-1;;;;;1682:103:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1682:103:4;-1:-1:-1;;;;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1682:103:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:94:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;237:94:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;237:94:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;237:94:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;237:94:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;237:94:13;;-1:-1:-1;237:94:13;;-1:-1:-1;;;;;237:94:13:i;2032:107:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:2;-1:-1:-1;;;;;2032:107:2;;:::i;420:188:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;420:188:11;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;420:188:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;420:188:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;420:188:11;;-1:-1:-1;420:188:11;-1:-1:-1;420:188:11;:::i;3692:586:4:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;4018:253:4;4054:10;4078;4102:18;;4018:253;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;;-1:-1:-1;4134:14:4;;-1:-1:-1;4134:14:4;;;;4018:253;;4134:14;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;4162:16;;-1:-1:-1;4018:253:4;-1:-1:-1;4192:13:4;;;;;;4018:253;;4192:13;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;-1:-1;4018:253:4;;;;137:4:-1;4018:253:4;;;;;;;;;;;;;;;;;99:1:-1;;-1:-1;4018:253:4;;-1:-1:-1;4238:23:4;;-1:-1:-1;4238:23:4;;;;4018:253;;4238:23;;;;4018:253;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;4018:22:4;;-1:-1:-1;;;4018:253:4:i;:::-;3692:586;;;;;;;;;;;:::o;164:28:13:-;;;;;;;;;;;;;;;-1:-1:-1;;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7479:878:4:-;7655:13;7682:7;7703;7724:13;7751:4;7769:7;7790:13;7817:4;7835:13;7873:28;;:::i;:::-;7904:21;:33;7926:10;7904:33;;;;;;;;;;;:50;7938:15;-1:-1:-1;;;;;7904:50:4;-1:-1:-1;;;;;7904:50:4;;;;;;;;;;;;:62;7955:10;7904:62;;;;;;;;;;;7873:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7873:93:4;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7873:93:4;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7873:93:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7998:10;:19;;;:29;;;8041:10;:19;;;:30;;;8085:10;:19;;;:35;;;8134:10;:19;;;:33;;;8181:10;:17;;;8212:10;:25;;;8251:10;:23;;;8288:10;:19;;;8321:10;:19;;;7977:373;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7479:878;;;;;;;;;;;;;:::o;2082:1014::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2403:23:4;2441:179;2483:82;2501:10;2513;2525;;2483:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;2483:82:4;;;;137:4:-1;2483:82:4;;;;;;;;;;;;;;;;;2537:11;;-1:-1:-1;2483:82:4;-1:-1:-1;2550:14:4;;;;;;2483:82;;2550:14;;;;2483:82;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2483:17:4;;-1:-1:-1;;;2483:82:4:i;:::-;2583:23;;2441:179;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2441:24:4;;-1:-1:-1;;;2441:179:4:i;:::-;2732:212;;;;;;;;;;;;;;;;;;;;;;;;;2403:217;;-1:-1:-1;2732:212:4;;;2771:10;;;;;;2732:212;;2771:10;;;;2732:212;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;2732:212:4;;;-1:-1:-1;2732:212:4;;;;;;;-1:-1:-1;;;;;2732:212:4;;;;;;;;;;;;137:4:-1;2732:212:4;;;;;;;;;;;;;;;;;;;;;;;2893:14;;;;;;2732:212;;2893:14;;;;2732:212;1:33:-1;99:1;81:16;;74:27;;;-1:-1;2732:212:4;;;-1:-1:-1;;2929:4:4;2732:212;;;;;-1:-1:-1;2666:34:4;;;:22;:34;;;;;;-1:-1:-1;;;;;2666:51:4;;;;;;;;;:63;;;;;;;:278;;;;:63;;:278;;:63;;:278;;;;;:::i;:::-;-1:-1:-1;2666:278:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2666:278:4;-1:-1:-1;;;;;2666:278:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3048:10;3031:15;-1:-1:-1;;;;;3005:84:4;3019:10;3005:84;3060:10;;3072:3;3077:11;3005:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;3005:84:4;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3005:84:4;;;;-1:-1:-1;3005:84:4;;-1:-1:-1;;;;;;3005:84:4;1219:1:2;2082:1014:4;;;;;;;;;:::o;6472:609::-;6624:4;6648:34;;;6640:72;;;;;-1:-1:-1;;;;;6640:72:4;;;;;;;;;;;;-1:-1:-1;;;;;6640:72:4;;;;;;;;;;;;;;;6727:9;6722:332;6742:18;;;6722:332;;;6781:23;;:::i;:::-;6807:33;;;;:21;:33;;;;;;6841:9;;6851:1;6841:12;;;;;;;;;;;;;-1:-1:-1;;;;;6841:12:4;-1:-1:-1;;;;;6807:47:4;-1:-1:-1;;;;;6807:47:4;;;;;;;;;;;;:59;6855:7;;6863:1;6855:10;;;;;;;;;;;;;;;;6807:59;;-1:-1:-1;6807:59:4;;;;;;;;;;;-1:-1:-1;6807:59:4;6781:85;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6807:59;;6781:85;;;;;;6807:59;;6781:85;;6807:59;;6781:85;;6807:59;6781:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6781:85:4;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6781:85:4;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6781:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7015:5;:14;;;7010:33;;7038:5;7031:12;;;;;;7010:33;-1:-1:-1;6762:3:4;;6722:332;;;;7070:4;7063:11;;6472:609;;;;;;;;:::o;3102:584::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;3427:252:4;3463:10;3487;3511:18;;3427:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;;-1:-1:-1;3543:14:4;;-1:-1:-1;3543:14:4;;;;3427:252;;3543:14;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;3571:16;;-1:-1:-1;3427:252:4;-1:-1:-1;3601:13:4;;;;;;3427:252;;3601:13;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;3427:252:4;;;;137:4:-1;3427:252:4;;;;;;;;;;;;;;;;;3628:4;;-1:-1:-1;3427:252:4;-1:-1:-1;3646:23:4;;;;;;3427:252;;3646:23;;;;3427:252;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;3427:22:4;;-1:-1:-1;;;3427:252:4:i;1587:73:10:-;1652:1;1587:73;;:::o;1746:137:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:2;;-1:-1:-1;;;;;;;;;;;1807:40:2;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:2;;;1746:137::o;959:77::-;1023:6;;-1:-1:-1;;;;;1023:6:2;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:2;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:2;;1366:29;;1310:92;:::o;1980:96:4:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;2039:30:4;2058:10;2039:18;:30::i;:::-;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;1980:96:4;:::o;741:142:2:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:2;:15;;-1:-1:-1;;;;;;806:15:2;-1:-1:-1;;;;;806:15:2;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:2;-1:-1:-1;;836:40:2;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;741:142:2;;:::o;1682:103:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1682:103:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1682:103:4;;;;-1:-1:-1;1682:103:4;;-1:-1:-1;1682:103:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1682:103:4;;;;;;;-1:-1:-1;;1682:103:4;;;:::o;237:94:13:-;299:25;;;;:14;;:25;;;;;:::i;2032:107:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;420:188:11:-;1248:13:10;;;;;;;;:30;;-1:-1:-1;1266:12:10;;;;1265:13;1248:30;1240:92;;;;-1:-1:-1;;;;;1240:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:13;;;;;;;1365:14;1389:98;;;;1423:13;:20;;-1:-1:-1;;;;1423:20:10;;;;;1457:19;1439:4;1457:19;;;1389:98;528:34:11;555:6;528:26;:34::i;:::-;572:29;584:16;;572:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;572:11:11;;-1:-1:-1;;;572:29:11:i;:::-;1513:14:10;1509:66;;;1543:13;:21;;-1:-1:-1;;1543:21:10;;;1509:66;420:188:11;;;;:::o;4479:1987:4:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;4877:22:4;4914:379;4956:282;4998:10;5030;5062:18;5102:14;5138:16;5176:13;5211:9;4956:20;:282::i;:::-;5256:23;4914:24;:379::i;:::-;5335:35;5373:34;;;:22;:34;;;;;;;;-1:-1:-1;;;;;5373:52:4;;;;;;;;;:64;;;;;;;;5455:20;;;;4877:416;;-1:-1:-1;5373:64:4;5455:20;;5447:54;;;;;-1:-1:-1;;;;;5447:54:4;;;;;;;;;;;;-1:-1:-1;;;;;5447:54:4;;;;;;;;;;;;;;;5532:65;;;;;;;;;;;;;-1:-1:-1;;5532:65:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5578:18;5532:20;:65::i;:::-;5511:165;;;;-1:-1:-1;;;;;5511:165:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5708:33;;;;:21;:33;;;;;;;;-1:-1:-1;;;;;5708:49:4;;;;;;;;;:61;;;;;;;;:68;;;;;;;;5707:69;5686:150;;;;-1:-1:-1;;;;;5686:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5945:241;;;;;;;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5980:13;;5945:241;;;5980:13;;5945:241;;5980:13;5945:241;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5945:241:4;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5945:241:4;;;-1:-1:-1;;5945:241:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5945:241:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5881:33;;;:21;:33;;;;;:49;;;;;;;;;:61;;;;;;;;;:305;;;;;;:61;;:305;;:61;;:305;;:61;;:305;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5881:305:4;-1:-1:-1;;;;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;-1:-1:-1;;5881:305:4;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5881:305:4;-1:-1:-1;;;;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5881:305:4;;;;;;;;;;;;;;;;;-1:-1:-1;;5881:305:4;;;-1:-1:-1;;5881:305:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6324:10;6296:14;-1:-1:-1;;;;;6246:213:4;6272:10;6246:213;6348:9;6371:13;:23;;6408:3;6425:13;:24;;;6246:213;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:1:2;;4479:1987:4;;;;;;;;:::o;8363:332::-;8576:7;8623:10;8635;8647;8659:11;8672:14;8612:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8612:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8612:75:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8612:75:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8612:75:4;;;8602:86;;;;;;8595:93;;8363:332;;;;;;;:::o;725:360:8:-;809:7;878:27;935:6;;;;;;;;;;;;;;;;;943:11;918:37;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;918:37:8;;;;;-1:-1:-1;918:37:8;;;26:21:-1;;;6:49;;918:37:8;;;;;908:48;;;;;;;;;-1:-1:-1;;;;1010:45:8;;-1:-1:-1;908:48:8;1045:9;1010:13;:45::i;:::-;993:62;-1:-1:-1;;;725:360:8;;;;;:::o;867:96:0:-;946:10;867:96;:::o;1409:498:3:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:2:-;-1:-1:-1;;;;;2313:22:2;;2305:73;;;;-1:-1:-1;;;;;2305:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:2;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:2;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:2;-1:-1:-1;;;;;2441:17:2;;;;;;;;;;2240:225::o;8701:648:4:-;8991:7;9088:10;9120;9152:18;9192:14;9228:16;9266:13;9301:9;9056:272;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9056:272:4;-1:-1:-1;;;;;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9056:272:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9056:272:4;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;9056:272:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9056:272:4;;;9029:313;;;;;;9010:332;;8701:648;;;;;;;;;:::o;51:260:9:-;128:4;174:2;168:16;154:2;148:16;:36;144:161;;-1:-1:-1;207:5:9;200:12;;144:161;290:2;274:20;;;;;;266:2;250:20;;;;;;:44;243:51;;;;1226:1891:1;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:1;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;-1:-1:-1;;;;;2786:79:1;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3086:24:1;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:1;;-1:-1:-1;;3086:24:1;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:1:o;320:321:11:-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;320:321:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;320:321:11;;;-1:-1:-1;320:321:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;320:321:11;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "areApproved(uint256,address[],bytes32[])": "3e8e21e6",
              "claimUpgradeToV1(address,string)": "fa394fe8",
              "getClaimAudit(uint256,address,bytes32)": "12f057a4",
              "initialize(address)": "c4d66de8",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "proposeClaim(uint256,bytes32,string,uint256,string,bytes)": "3d8eeee9",
              "registryInitialize()": "9506ec01",
              "registryProposedClaims(uint256,address,bytes32)": "d0d4a35c",
              "renounceOwnership()": "715018a6",
              "setVariable(string)": "d746afa6",
              "stringVariable()": "117b2467",
              "submitClaimApproval(uint256,bytes32,string,string,address,string,bytes)": "49e054d8",
              "submitClaimRejection(uint256,bytes32,string,string,address,string,bytes)": "025fd675",
              "transferOwnership(address)": "f2fde38b",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimRejection\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stringVariable\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_auditorAddress\",\"type\":\"address\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"}],\"name\":\"getClaimAudit\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"bool\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proofHash\",\"type\":\"string\"},{\"name\":\"_activityId\",\"type\":\"uint256\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeClaim\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_auditors\",\"type\":\"address[]\"},{\"name\":\"_claims\",\"type\":\"bytes32[]\"}],\"name\":\"areApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_claimHash\",\"type\":\"bytes32\"},{\"name\":\"_proposalProofHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerAddress\",\"type\":\"address\"},{\"name\":\"_auditorEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"submitClaimApproval\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registryInitialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"registryProposedClaims\",\"outputs\":[{\"name\":\"proofHash\",\"type\":\"string\"},{\"name\":\"activityId\",\"type\":\"uint256\"},{\"name\":\"proposerAddress\",\"type\":\"address\"},{\"name\":\"proposerEmail\",\"type\":\"string\"},{\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"setVariable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_initialVariable\",\"type\":\"string\"}],\"name\":\"claimUpgradeToV1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"proposedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"auditor\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"claimHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"_approved\",\"type\":\"bool\"},{\"indexed\":false,\"name\":\"proofHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"verifiedAt\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"activityId\",\"type\":\"uint256\"}],\"name\":\"ClaimAudited\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getClaimAudit(uint256,address,bytes32)\":{\"details\":\"This function was created as structs inside structs are not supported for the contract's public interface\",\"params\":{\"_auditorAddress\":\"- the auditor of the queried claim.\",\"_claimHash\":\"- the has of the queried claim.\",\"_projectId\":\"- the id of the project the queried claim belongs to.\"}},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"V2 of the ClaimsRegistry contract, extending it's behavior with the VariableStorageForTests       Used only for testing purposes\"},\"userdoc\":{\"methods\":{\"getClaimAudit(uint256,address,bytes32)\":{\"notice\":\"Returns the audit information of a claim\"}}}},\"settings\":{\"compilationTarget\":{\"src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol\":\"ClaimsRegistryV1ForTests\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]},\"src/contracts/ClaimsRegistry.sol\":{\"keccak256\":\"0x54744019158f083b43596d75c62036bb56901120f8b0c8a8e220661936988278\",\"urls\":[\"bzzr://7beeac67fdbefb7b62ac98603295d7dca6db9be780e8c579851f6d0310d8febf\"]},\"src/contracts/interfaces/IClaimsRegistry.sol\":{\"keccak256\":\"0xd31bf9774cebaf62ef64fb55aa6a51580a0bb652c00d24dcbadd701725a61962\",\"urls\":[\"bzzr://874bd0e7263b41199ac31a7907f67fa8fea8da70bd13de31aeec1823386838e9\"]},\"src/contracts/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x7640764af901ef936847670e9221d794c5a1f8914e2a9ef877edb49892b5b83e\",\"urls\":[\"bzzr://dee27cc02f5f8fbb586336ce888e0747372c85b1d1de244928426eabb8bcc14e\"]},\"src/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x5ddd47496a33edbbd7440040c2638d1a5063a3cd04b353000e2da10eb5077aa9\",\"urls\":[\"bzzr://42bad4ea3a3bd293cedcf199d863f3228ea4de5ec24aba71d248fe5edab45f6a\"]},\"src/contracts/utils/UpgradeableToV1.sol\":{\"keccak256\":\"0x43b03a366784bc1f79a3c3338f23a6158ae356d2ac3a97bb35f9bc5479c96008\",\"urls\":[\"bzzr://50e951b1ec66448e0aca894e7f956beca941a161c1a39a1275885acd413a7f44\"]},\"src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol\":{\"keccak256\":\"0x4dbf59c2c4c1e83ab09b4e4f995637f7e2a4ffc077521cc8f2ce2ece5b9f2313\",\"urls\":[\"bzzr://61404ac456717944e50cd5f71cd8331c6474cf3d83d1a3bc3bc63dd265abd526\"]},\"src/tests/contracts/mockUpgrades/VariableStorageForTests.sol\":{\"keccak256\":\"0x697a58f1c61cae82446bcf2502729b90327d74a2acb97c128f0849bbdb48b802\",\"urls\":[\"bzzr://b215c4796ffd355234f36cf6755ae2f560a4f5ebfd84a8b007a7d1c458f7bbbc\"]}},\"version\":1}"
        }
      },
      "src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol": {
        "ProjectsRegistryV1ForTests": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "stringVariable",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_owner",
                  "type": "address"
                },
                {
                  "name": "_initialVariable",
                  "type": "string"
                }
              ],
              "name": "registryUpgradeToV1",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "projectIds",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "version",
              "outputs": [
                {
                  "name": "",
                  "type": "uint16"
                }
              ],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposedIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_proposerEmail",
                  "type": "string"
                },
                {
                  "name": "_authorizationSignature",
                  "type": "bytes"
                }
              ],
              "name": "proposeProjectEdit",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "isOwner",
              "outputs": [
                {
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "registryInitialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "projectsDescription",
              "outputs": [
                {
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "authorAddress",
                  "type": "address"
                },
                {
                  "name": "authorEmail",
                  "type": "string"
                },
                {
                  "name": "isCreated",
                  "type": "bool"
                },
                {
                  "name": "auditIpfsHash",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_initialProposalIpfsHash",
                  "type": "string"
                }
              ],
              "name": "createProject",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "getProjectsLength",
              "outputs": [
                {
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "setVariable",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "_projectId",
                  "type": "uint256"
                },
                {
                  "name": "_proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_auditIpfsHash",
                  "type": "string"
                },
                {
                  "name": "_authorAddress",
                  "type": "address"
                },
                {
                  "name": "_approved",
                  "type": "bool"
                }
              ],
              "name": "submitProjectEditAuditResult",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "name": "",
                  "type": "uint256"
                },
                {
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "pendingEdits",
              "outputs": [
                {
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "name": "authorAddress",
                  "type": "address"
                },
                {
                  "name": "authorEmail",
                  "type": "string"
                },
                {
                  "name": "isCreated",
                  "type": "bool"
                },
                {
                  "name": "auditIpfsHash",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "ipfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposedIpfsHash",
                  "type": "string"
                }
              ],
              "name": "ProjectEditProposed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "name": "proposer",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "name": "proposalIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "auditIpfsHash",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "name": "approved",
                  "type": "bool"
                }
              ],
              "name": "ProjectEditAudited",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052611dfa806100136000396000f3fe608060405234801561001057600080fd5b50600436106100de5760e060020a6000350463117b246781146100e357806323870ff21461016057806348c35ad4146101e057806354fd4d501461020f578063715018a61461022e578063843d160a146102365780638da5cb5b1461034b5780638f32d59b1461036f5780639506ec011461038b578063b4796ce214610393578063bf1a800314610518578063c4d66de81461058d578063c6bdc0a2146105b3578063d746afa6146105bb578063f2fde38b1461065f578063f5cdd9c214610685578063fd2ca96b1461075b575b600080fd5b6100eb610787565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101de6004803603604081101561017657600080fd5b600160a060020a038235169190810190604081016020820135602060020a8111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460018302840111602060020a831117156101d357600080fd5b509092509050610815565b005b6101fd600480360360208110156101f657600080fd5b50356108f7565b60408051918252519081900360200190f35b610217610915565b6040805161ffff9092168252519081900360200190f35b6101de61091b565b6101de6004803603608081101561024c57600080fd5b81359190810190604081016020820135602060020a81111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460018302840111602060020a831117156102a057600080fd5b919390929091602081019035602060020a8111156102bd57600080fd5b8201836020820111156102cf57600080fd5b803590602001918460018302840111602060020a831117156102f057600080fd5b919390929091602081019035602060020a81111561030d57600080fd5b82018360208201111561031f57600080fd5b803590602001918460018302840111602060020a8311171561034057600080fd5b50909250905061099d565b610353610cca565b60408051600160a060020a039092168252519081900360200190f35b610377610cd9565b604080519115158252519081900360200190f35b6101de610cff565b6103b0600480360360208110156103a957600080fd5b5035610dad565b604051808060200186600160a060020a0316600160a060020a03168152602001806020018515151515815260200180602001848103845289818151815260200191508051906020019080838360005b838110156104175781810151838201526020016103ff565b50505050905090810190601f1680156104445780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561047757818101518382015260200161045f565b50505050905090810190601f1680156104a45780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156104d75781810151838201526020016104bf565b50505050905090810190601f1680156105045780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6101de6004803603604081101561052e57600080fd5b81359190810190604081016020820135602060020a81111561054f57600080fd5b82018360208201111561056157600080fd5b803590602001918460018302840111602060020a8311171561058257600080fd5b509092509050610f8d565b6101de600480360360208110156105a357600080fd5b5035600160a060020a03166111f0565b6101fd6112d3565b6101de600480360360208110156105d157600080fd5b810190602081018135602060020a8111156105eb57600080fd5b8201836020820111156105fd57600080fd5b803590602001918460018302840111602060020a8311171561061e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112d9945050505050565b6101de6004803603602081101561067557600080fd5b5035600160a060020a03166112ec565b6101de600480360360a081101561069b57600080fd5b81359190810190604081016020820135602060020a8111156106bc57600080fd5b8201836020820111156106ce57600080fd5b803590602001918460018302840111602060020a831117156106ef57600080fd5b919390929091602081019035602060020a81111561070c57600080fd5b82018360208201111561071e57600080fd5b803590602001918460018302840111602060020a8311171561073f57600080fd5b9193509150600160a060020a038135169060200135151561133f565b6103b06004803603604081101561077157600080fd5b5080359060200135600160a060020a0316611718565b609b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b505050505081565b609c54610100900460ff168061082e5750609c5460ff16155b61086c5760405160e560020a62461bcd028152600401808060200182810382526031815260200180611d9e6031913960400191505060405180910390fd5b609c54610100900460ff1615801561089757609c805460ff1961ff0019909116610100171660011790555b6108a08461178b565b6108df83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112d992505050565b80156108f157609c805461ff00191690555b50505050565b6066818154811061090457fe5b600091825260209091200154905081565b60015b90565b610923610cd9565b610965576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a031690600080516020611d50833981519152908390a360338054600160a060020a0319169055565b6109a5610cd9565b6109e7576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b60008781526068602052604090206003015460ff16610a3a5760405160e560020a62461bcd028152600401808060200182810382526022815260200180611d0e6022913960400191505060405180910390fd5b6000610aef610ab38989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061181d92505050565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061192092505050565b6040805160c06020601f8b01819004028201810190925260a081018981529293509182918a908a9081908501838280828437600092019190915250505090825250600160a060020a03831660208083019190915260408051601f89018390048302810183018252888152920191908890889081908401838280828437600092018290525093855250506001602080850191909152604080518083018252848152948101949094528c835260678152838320600160a060020a0387168452815292909120835180519193610bc793508492910190611af8565b50602082810151600183018054600160a060020a031916600160a060020a0390921691909117905560408301518051610c069260028501920190611af8565b50606082015160038201805460ff191691151591909117905560808201518051610c3a916004840191602090910190611af8565b509050507f9d3acfaf4cf0f7ca2755c0330b02196b1d84ace88b6ee78448155159f4215b82888289896040518085815260200184600160a060020a0316600160a060020a03168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a15050505050505050565b603354600160a060020a031690565b603354600090600160a060020a0316610cf06119df565b600160a060020a031614905090565b600054610100900460ff1680610d185750610d186119e3565b80610d26575060005460ff16155b610d645760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611d70602e913960400191505060405180910390fd5b600054610100900460ff16158015610d8f576000805460ff1961ff0019909116610100171660011790555b610d98336111f0565b8015610daa576000805461ff00191690555b50565b60686020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610e445780601f10610e1957610100808354040283529160200191610e44565b820191906000526020600020905b815481529060010190602001808311610e2757829003601f168201915b505050506001838101546002808601805460408051602061010097841615979097026000190190921693909304601f81018690048602820186019093528281529596600160a060020a03909316959294509192830182828015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b50505050600383015460048401805460408051602060026101006001861615026000190190941693909304601f8101849004840282018401909252818152959660ff9094169593945090830182828015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b5050505050905085565b610f95610cd9565b610fd7576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b60008381526068602052604090206003015460ff1615611041576040805160e560020a62461bcd02815260206004820152601e60248201527f5468652070726f6a65637420697320616c726561647920637265617465640000604482015290519081900360640190fd5b6040518060a0016040528083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250503360208085019190915260408051808301825284815281860152600160608601528051808301825284815260809095019490945287835260688152929091208351805191936110d793508492910190611af8565b50602082810151600183018054600160a060020a031916600160a060020a03909216919091179055604083015180516111169260028501920190611af8565b50606082015160038201805460ff19169115159190911790556080820151805161114a916004840191602090910190611af8565b5050606680546001810182556000919091527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354018490555060408051848152602081018281529181018390527fed06d1e70f1faa0e1750def1b3a1d942390a8f47d03679c9025a1c38dc34fe7b918591859185919060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a1505050565b600054610100900460ff168061120957506112096119e3565b80611217575060005460ff16155b6112555760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611d70602e913960400191505060405180910390fd5b600054610100900460ff16158015611280576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a038481169190911791829055604051911690600090600080516020611d50833981519152908290a380156112cf576000805461ff00191690555b5050565b60665490565b80516112cf90609b906020840190611af8565b6112f4610cd9565b611336576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b610daa8161178b565b611347610cd9565b611389576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b6000878152606760209081526040808320600160a060020a03861684529091529020600381015460ff16611407576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652070656e64696e67206564697420646f65736e27742065786973747300604482015290519081900360640190fd5b805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181526114d292909184918301828280156114915780601f1061146657610100808354040283529160200191611491565b820191906000526020600020905b81548152906001019060200180831161147457829003601f168201915b505050505088888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119e992505050565b6115105760405160e560020a62461bcd028152600401808060200182810382526034815260200180611cda6034913960400191505060405180910390fd5b81156115eb57611524600482018686611b76565b5060008881526068602052604090208154829190611558908290849060026000196101006001841615020190911604611be4565b506001828101548282018054600160a060020a031916600160a060020a03909216919091179055600280840180546115a3938386019390821615610100026000190190911604611be4565b50600382810154908201805460ff191660ff9092161515919091179055600480830180546115e7928401919060026101006001831615026000190190911604611be4565b5050505b6000888152606760209081526040808320600160a060020a03871684529091528120906116188282611c59565b600182018054600160a060020a0319169055611638600283016000611c59565b60038201805460ff19169055611652600483016000611c59565b50507f632679850203170fccc7c6abaef76a269cbb5d0ec94f498416071a78c9f7d502888489898989886040518088815260200187600160a060020a0316600160a060020a031681526020018060200180602001841515151581526020018381038352888882818152602001925080828437600083820152601f01601f191690910184810383528681526020019050868680828437600083820152604051601f909101601f19169092018290039b50909950505050505050505050a15050505050505050565b606760209081526000928352604080842082529183529181902080548251601f600260001961010060018616150201909316929092049182018590048502810185019093528083529092839190830182828015610e445780601f10610e1957610100808354040283529160200191610e44565b600160a060020a0381166117d35760405160e560020a62461bcd028152600401808060200182810382526026815260200180611cb46026913960400191505060405180910390fd5b603354604051600160a060020a03808416921690600080516020611d5083398151915290600090a360338054600160a060020a031916600160a060020a0392909216919091179055565b6000838383604051602001808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561186c578181015183820152602001611854565b50505050905090810190601f1680156118995780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156118cc5781810151838201526020016118b4565b50505050905090810190601f1680156118f95780820380516001836020036101000a031916815260200191505b50955050505050506040516020818303038152906040528051906020012090509392505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250846040516020018083805190602001908083835b6020831061198c5780518252601f19909201916020918201910161196d565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201905282519201919091209250600091506119d490508285611a14565b925050505b92915050565b3390565b303b1590565b600081518351146119fc575060006119d9565b818051906020012083805190602001201490506119d9565b60008151604114611a27575060006119d9565b60208201516040830151606084015160001a6fa2a8918ca85bafe22016d0b997e4df6060ff60020a03821115611a6357600093505050506119d9565b8060ff16601b14158015611a7b57508060ff16601c14155b15611a8c57600093505050506119d9565b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015611ae3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b3957805160ff1916838001178555611b66565b82800160010185558215611b66579182015b82811115611b66578251825591602001919060010190611b4b565b50611b72929150611c99565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bb75782800160ff19823516178555611b66565b82800160010185558215611b66579182015b82811115611b66578235825591602001919060010190611bc9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1d5780548555611b66565b82800160010185558215611b6657600052602060002091601f016020900482015b82811115611b66578254825591600101919060010190611c3e565b50805460018160011615610100020316600290046000825580601f10611c7f5750610daa565b601f016020900490600052602060002090810190610daa91905b61091891905b80821115611b725760008155600101611c9f56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468652070656e64696e67206564697420646f65736e2774206861766520746865206970667320686173682073656c656374656450726f6a656374206265696e672065646974656420646f65736e27742065786973744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20757067726164656420746f207631a165627a7a723058205c2f99cf64d2a3be0d9a9b1a496ab882f0a4c9e6dcce9911d1600830ee84bce10029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1DFA DUP1 PUSH2 0x13 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDE JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x117B2467 DUP2 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23870FF2 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x48C35AD4 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x843D160A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xB4796CE2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xBF1A8003 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xC6BDC0A2 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xF5CDD9C2 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xFD2CA96B EQ PUSH2 0x75B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x125 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x815 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x99D JUMP JUMPDEST PUSH2 0x353 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x417 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x444 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP8 MLOAD DUP2 MSTORE DUP8 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP10 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x477 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x45F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x504 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x12D9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x133F JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x9B DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x82E JUMPI POP PUSH1 0x9C SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D9E PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI PUSH1 0x9C DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8A0 DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x8DF DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x12D9 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x9C DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x904 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x923 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x965 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x9E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAEF PUSH2 0xAB3 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP3 POP DUP12 SWAP2 POP DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x181D SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1920 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD DUP3 MSTORE DUP9 DUP2 MSTORE SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP13 DUP4 MSTORE PUSH1 0x67 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0xBC7 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC06 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xC3A SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9D3ACFAF4CF0F7CA2755C0330B02196B1D84ACE88B6EE78448155159F4215B82 DUP9 DUP3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xCF0 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xD18 JUMPI POP PUSH2 0xD18 PUSH2 0x19E3 JUMP JUMPDEST DUP1 PUSH2 0xD26 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D70 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD98 CALLER PUSH2 0x11F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 DUP2 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH2 0x100 SWAP8 DUP5 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP3 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEE8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEBD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xECB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP4 SWAP5 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xF95 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xFD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1041 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6A65637420697320616C726561647920637265617465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP CALLER PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE DUP2 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD MSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP8 DUP4 MSTORE PUSH1 0x68 DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0x10D7 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1116 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x114A SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP5 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xED06D1E70F1FAA0E1750DEF1B3A1D942390A8F47D03679C9025A1C38DC34FE7B SWAP2 DUP6 SWAP2 DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1209 JUMPI POP PUSH2 0x1209 PUSH2 0x19E3 JUMP JUMPDEST DUP1 PUSH2 0x1217 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1255 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D70 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x12CF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x12CF SWAP1 PUSH1 0x9B SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x12F4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x1336 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xDAA DUP2 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x1347 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x1389 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1407 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070656E64696E67206564697420646F65736E27742065786973747300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x14D2 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1466 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x19E9 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15EB JUMPI PUSH2 0x1524 PUSH1 0x4 DUP3 ADD DUP7 DUP7 PUSH2 0x1B76 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1558 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD PUSH2 0x15A3 SWAP4 DUP4 DUP7 ADD SWAP4 SWAP1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP PUSH1 0x3 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH2 0x15E7 SWAP3 DUP5 ADD SWAP2 SWAP1 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x1618 DUP3 DUP3 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE PUSH2 0x1638 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1652 PUSH1 0x4 DUP4 ADD PUSH1 0x0 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH32 0x632679850203170FCCC7C6ABAEF76A269CBB5D0EC94F498416071A78C9F7D502 DUP9 DUP5 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP9 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP12 POP SWAP1 SWAP10 POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1899 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x198C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x196D JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x19D4 SWAP1 POP DUP3 DUP6 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19FC JUMPI POP PUSH1 0x0 PUSH2 0x19D9 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x1A27 JUMPI POP PUSH1 0x0 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1A63 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x19D9 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1A7B JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1B39 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B4B JUMP JUMPDEST POP PUSH2 0x1B72 SWAP3 SWAP2 POP PUSH2 0x1C99 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1BB7 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1C1D JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C3E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1C7F JUMPI POP PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 JUMPDEST PUSH2 0x918 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B72 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C9F JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735468652070656E64696E672065646974 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206861766520746865206970667320686173682073 PUSH6 0x6C6563746564 POP PUSH19 0x6F6A656374206265696E672065646974656420 PUSH5 0x6F65736E27 PUSH21 0x2065786973744F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20757067726164656420 PUSH21 0x6F207631A165627A7A723058205C2F99CF64D2A3BE 0xd SWAP11 SWAP12 BYTE 0x49 PUSH11 0xB882F0A4C9E6DCCE9911D1 PUSH1 0x8 ADDRESS 0xee DUP5 0xbc 0xe1 STOP 0x29 ",
              "sourceMap": "324:328:12:-;;;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100de5760e060020a6000350463117b246781146100e357806323870ff21461016057806348c35ad4146101e057806354fd4d501461020f578063715018a61461022e578063843d160a146102365780638da5cb5b1461034b5780638f32d59b1461036f5780639506ec011461038b578063b4796ce214610393578063bf1a800314610518578063c4d66de81461058d578063c6bdc0a2146105b3578063d746afa6146105bb578063f2fde38b1461065f578063f5cdd9c214610685578063fd2ca96b1461075b575b600080fd5b6100eb610787565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012557818101518382015260200161010d565b50505050905090810190601f1680156101525780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101de6004803603604081101561017657600080fd5b600160a060020a038235169190810190604081016020820135602060020a8111156101a057600080fd5b8201836020820111156101b257600080fd5b803590602001918460018302840111602060020a831117156101d357600080fd5b509092509050610815565b005b6101fd600480360360208110156101f657600080fd5b50356108f7565b60408051918252519081900360200190f35b610217610915565b6040805161ffff9092168252519081900360200190f35b6101de61091b565b6101de6004803603608081101561024c57600080fd5b81359190810190604081016020820135602060020a81111561026d57600080fd5b82018360208201111561027f57600080fd5b803590602001918460018302840111602060020a831117156102a057600080fd5b919390929091602081019035602060020a8111156102bd57600080fd5b8201836020820111156102cf57600080fd5b803590602001918460018302840111602060020a831117156102f057600080fd5b919390929091602081019035602060020a81111561030d57600080fd5b82018360208201111561031f57600080fd5b803590602001918460018302840111602060020a8311171561034057600080fd5b50909250905061099d565b610353610cca565b60408051600160a060020a039092168252519081900360200190f35b610377610cd9565b604080519115158252519081900360200190f35b6101de610cff565b6103b0600480360360208110156103a957600080fd5b5035610dad565b604051808060200186600160a060020a0316600160a060020a03168152602001806020018515151515815260200180602001848103845289818151815260200191508051906020019080838360005b838110156104175781810151838201526020016103ff565b50505050905090810190601f1680156104445780820380516001836020036101000a031916815260200191505b50848103835287518152875160209182019189019080838360005b8381101561047757818101518382015260200161045f565b50505050905090810190601f1680156104a45780820380516001836020036101000a031916815260200191505b50848103825285518152855160209182019187019080838360005b838110156104d75781810151838201526020016104bf565b50505050905090810190601f1680156105045780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b6101de6004803603604081101561052e57600080fd5b81359190810190604081016020820135602060020a81111561054f57600080fd5b82018360208201111561056157600080fd5b803590602001918460018302840111602060020a8311171561058257600080fd5b509092509050610f8d565b6101de600480360360208110156105a357600080fd5b5035600160a060020a03166111f0565b6101fd6112d3565b6101de600480360360208110156105d157600080fd5b810190602081018135602060020a8111156105eb57600080fd5b8201836020820111156105fd57600080fd5b803590602001918460018302840111602060020a8311171561061e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506112d9945050505050565b6101de6004803603602081101561067557600080fd5b5035600160a060020a03166112ec565b6101de600480360360a081101561069b57600080fd5b81359190810190604081016020820135602060020a8111156106bc57600080fd5b8201836020820111156106ce57600080fd5b803590602001918460018302840111602060020a831117156106ef57600080fd5b919390929091602081019035602060020a81111561070c57600080fd5b82018360208201111561071e57600080fd5b803590602001918460018302840111602060020a8311171561073f57600080fd5b9193509150600160a060020a038135169060200135151561133f565b6103b06004803603604081101561077157600080fd5b5080359060200135600160a060020a0316611718565b609b805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b505050505081565b609c54610100900460ff168061082e5750609c5460ff16155b61086c5760405160e560020a62461bcd028152600401808060200182810382526031815260200180611d9e6031913960400191505060405180910390fd5b609c54610100900460ff1615801561089757609c805460ff1961ff0019909116610100171660011790555b6108a08461178b565b6108df83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506112d992505050565b80156108f157609c805461ff00191690555b50505050565b6066818154811061090457fe5b600091825260209091200154905081565b60015b90565b610923610cd9565b610965576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b603354604051600091600160a060020a031690600080516020611d50833981519152908390a360338054600160a060020a0319169055565b6109a5610cd9565b6109e7576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b60008781526068602052604090206003015460ff16610a3a5760405160e560020a62461bcd028152600401808060200182810382526022815260200180611d0e6022913960400191505060405180910390fd5b6000610aef610ab38989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a908190840183828082843760009201919091525061181d92505050565b84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061192092505050565b6040805160c06020601f8b01819004028201810190925260a081018981529293509182918a908a9081908501838280828437600092019190915250505090825250600160a060020a03831660208083019190915260408051601f89018390048302810183018252888152920191908890889081908401838280828437600092018290525093855250506001602080850191909152604080518083018252848152948101949094528c835260678152838320600160a060020a0387168452815292909120835180519193610bc793508492910190611af8565b50602082810151600183018054600160a060020a031916600160a060020a0390921691909117905560408301518051610c069260028501920190611af8565b50606082015160038201805460ff191691151591909117905560808201518051610c3a916004840191602090910190611af8565b509050507f9d3acfaf4cf0f7ca2755c0330b02196b1d84ace88b6ee78448155159f4215b82888289896040518085815260200184600160a060020a0316600160a060020a03168152602001806020018281038252848482818152602001925080828437600083820152604051601f909101601f191690920182900397509095505050505050a15050505050505050565b603354600160a060020a031690565b603354600090600160a060020a0316610cf06119df565b600160a060020a031614905090565b600054610100900460ff1680610d185750610d186119e3565b80610d26575060005460ff16155b610d645760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611d70602e913960400191505060405180910390fd5b600054610100900460ff16158015610d8f576000805460ff1961ff0019909116610100171660011790555b610d98336111f0565b8015610daa576000805461ff00191690555b50565b60686020908152600091825260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452909291839190830182828015610e445780601f10610e1957610100808354040283529160200191610e44565b820191906000526020600020905b815481529060010190602001808311610e2757829003601f168201915b505050506001838101546002808601805460408051602061010097841615979097026000190190921693909304601f81018690048602820186019093528281529596600160a060020a03909316959294509192830182828015610ee85780601f10610ebd57610100808354040283529160200191610ee8565b820191906000526020600020905b815481529060010190602001808311610ecb57829003601f168201915b50505050600383015460048401805460408051602060026101006001861615026000190190941693909304601f8101849004840282018401909252818152959660ff9094169593945090830182828015610f835780601f10610f5857610100808354040283529160200191610f83565b820191906000526020600020905b815481529060010190602001808311610f6657829003601f168201915b5050505050905085565b610f95610cd9565b610fd7576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b60008381526068602052604090206003015460ff1615611041576040805160e560020a62461bcd02815260206004820152601e60248201527f5468652070726f6a65637420697320616c726561647920637265617465640000604482015290519081900360640190fd5b6040518060a0016040528083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093855250503360208085019190915260408051808301825284815281860152600160608601528051808301825284815260809095019490945287835260688152929091208351805191936110d793508492910190611af8565b50602082810151600183018054600160a060020a031916600160a060020a03909216919091179055604083015180516111169260028501920190611af8565b50606082015160038201805460ff19169115159190911790556080820151805161114a916004840191602090910190611af8565b5050606680546001810182556000919091527f46501879b8ca8525e8c2fd519e2fbfcfa2ebea26501294aa02cbfcfb12e94354018490555060408051848152602081018281529181018390527fed06d1e70f1faa0e1750def1b3a1d942390a8f47d03679c9025a1c38dc34fe7b918591859185919060608201848480828437600083820152604051601f909101601f1916909201829003965090945050505050a1505050565b600054610100900460ff168061120957506112096119e3565b80611217575060005460ff16155b6112555760405160e560020a62461bcd02815260040180806020018281038252602e815260200180611d70602e913960400191505060405180910390fd5b600054610100900460ff16158015611280576000805460ff1961ff0019909116610100171660011790555b60338054600160a060020a031916600160a060020a038481169190911791829055604051911690600090600080516020611d50833981519152908290a380156112cf576000805461ff00191690555b5050565b60665490565b80516112cf90609b906020840190611af8565b6112f4610cd9565b611336576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b610daa8161178b565b611347610cd9565b611389576040805160e560020a62461bcd0281526020600482018190526024820152600080516020611d30833981519152604482015290519081900360640190fd5b6000878152606760209081526040808320600160a060020a03861684529091529020600381015460ff16611407576040805160e560020a62461bcd02815260206004820152601f60248201527f5468652070656e64696e67206564697420646f65736e27742065786973747300604482015290519081900360640190fd5b805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181526114d292909184918301828280156114915780601f1061146657610100808354040283529160200191611491565b820191906000526020600020905b81548152906001019060200180831161147457829003601f168201915b505050505088888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506119e992505050565b6115105760405160e560020a62461bcd028152600401808060200182810382526034815260200180611cda6034913960400191505060405180910390fd5b81156115eb57611524600482018686611b76565b5060008881526068602052604090208154829190611558908290849060026000196101006001841615020190911604611be4565b506001828101548282018054600160a060020a031916600160a060020a03909216919091179055600280840180546115a3938386019390821615610100026000190190911604611be4565b50600382810154908201805460ff191660ff9092161515919091179055600480830180546115e7928401919060026101006001831615026000190190911604611be4565b5050505b6000888152606760209081526040808320600160a060020a03871684529091528120906116188282611c59565b600182018054600160a060020a0319169055611638600283016000611c59565b60038201805460ff19169055611652600483016000611c59565b50507f632679850203170fccc7c6abaef76a269cbb5d0ec94f498416071a78c9f7d502888489898989886040518088815260200187600160a060020a0316600160a060020a031681526020018060200180602001841515151581526020018381038352888882818152602001925080828437600083820152601f01601f191690910184810383528681526020019050868680828437600083820152604051601f909101601f19169092018290039b50909950505050505050505050a15050505050505050565b606760209081526000928352604080842082529183529181902080548251601f600260001961010060018616150201909316929092049182018590048502810185019093528083529092839190830182828015610e445780601f10610e1957610100808354040283529160200191610e44565b600160a060020a0381166117d35760405160e560020a62461bcd028152600401808060200182810382526026815260200180611cb46026913960400191505060405180910390fd5b603354604051600160a060020a03808416921690600080516020611d5083398151915290600090a360338054600160a060020a031916600160a060020a0392909216919091179055565b6000838383604051602001808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561186c578181015183820152602001611854565b50505050905090810190601f1680156118995780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156118cc5781810151838201526020016118b4565b50505050905090810190601f1680156118f95780820380516001836020036101000a031916815260200191505b50955050505050506040516020818303038152906040528051906020012090509392505050565b6000806040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250846040516020018083805190602001908083835b6020831061198c5780518252601f19909201916020918201910161196d565b51815160209384036101000a6000190180199092169116179052920193845250604080518085038152938201905282519201919091209250600091506119d490508285611a14565b925050505b92915050565b3390565b303b1590565b600081518351146119fc575060006119d9565b818051906020012083805190602001201490506119d9565b60008151604114611a27575060006119d9565b60208201516040830151606084015160001a6fa2a8918ca85bafe22016d0b997e4df6060ff60020a03821115611a6357600093505050506119d9565b8060ff16601b14158015611a7b57508060ff16601c14155b15611a8c57600093505050506119d9565b6040805160008152602080820180845289905260ff8416828401526060820186905260808201859052915160019260a0808401939192601f1981019281900390910190855afa158015611ae3573d6000803e3d6000fd5b5050604051601f190151979650505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611b3957805160ff1916838001178555611b66565b82800160010185558215611b66579182015b82811115611b66578251825591602001919060010190611b4b565b50611b72929150611c99565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611bb75782800160ff19823516178555611b66565b82800160010185558215611b66579182015b82811115611b66578235825591602001919060010190611bc9565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611c1d5780548555611b66565b82800160010185558215611b6657600052602060002091601f016020900482015b82811115611b66578254825591600101919060010190611c3e565b50805460018160011615610100020316600290046000825580601f10611c7f5750610daa565b601f016020900490600052602060002090810190610daa91905b61091891905b80821115611b725760008155600101611c9f56fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573735468652070656e64696e67206564697420646f65736e2774206861766520746865206970667320686173682073656c656374656450726f6a656374206265696e672065646974656420646f65736e27742065786973744f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65728be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20757067726164656420746f207631a165627a7a723058205c2f99cf64d2a3be0d9a9b1a496ab882f0a4c9e6dcce9911d1600830ee84bce10029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDE JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x117B2467 DUP2 EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23870FF2 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x48C35AD4 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x843D160A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x9506EC01 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0xB4796CE2 EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xBF1A8003 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0xC4D66DE8 EQ PUSH2 0x58D JUMPI DUP1 PUSH4 0xC6BDC0A2 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x65F JUMPI DUP1 PUSH4 0xF5CDD9C2 EQ PUSH2 0x685 JUMPI DUP1 PUSH4 0xFD2CA96B EQ PUSH2 0x75B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x125 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x152 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x1A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x1B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x815 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8F7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x217 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x91B JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x26D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x2A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x2BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x31F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x99D JUMP JUMPDEST PUSH2 0x353 PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP6 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 DUP2 SUB DUP5 MSTORE DUP10 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x417 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3FF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x444 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP4 MSTORE DUP8 MLOAD DUP2 MSTORE DUP8 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP10 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x477 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x45F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x4A4 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP5 DUP2 SUB DUP3 MSTORE DUP6 MLOAD DUP2 MSTORE DUP6 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP8 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4D7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4BF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x504 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP9 POP POP POP POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x52E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x11F0 JUMP JUMPDEST PUSH2 0x1FD PUSH2 0x12D3 JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x5EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x12D9 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x12EC JUMP JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x69B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x6BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x6CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x71E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x73F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x133F JUMP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x9B DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x80D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x80D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7F0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x82E JUMPI POP PUSH1 0x9C SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x86C JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D9E PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9C SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x897 JUMPI PUSH1 0x9C DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0x8A0 DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x8DF DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x12D9 SWAP3 POP POP POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F1 JUMPI PUSH1 0x9C DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x66 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x904 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x923 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x965 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9A5 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x9E7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND PUSH2 0xA3A JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D0E PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xAEF PUSH2 0xAB3 DUP10 DUP10 DUP10 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F DUP14 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP12 DUP2 MSTORE SWAP3 POP DUP12 SWAP2 POP DUP11 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x181D SWAP3 POP POP POP JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1920 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 PUSH1 0x20 PUSH1 0x1F DUP12 ADD DUP2 SWAP1 DIV MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0xA0 DUP2 ADD DUP10 DUP2 MSTORE SWAP3 SWAP4 POP SWAP2 DUP3 SWAP2 DUP11 SWAP1 DUP11 SWAP1 DUP2 SWAP1 DUP6 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F DUP10 ADD DUP4 SWAP1 DIV DUP4 MUL DUP2 ADD DUP4 ADD DUP3 MSTORE DUP9 DUP2 MSTORE SWAP3 ADD SWAP2 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP PUSH1 0x1 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP13 DUP4 MSTORE PUSH1 0x67 DUP2 MSTORE DUP4 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0xBC7 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC06 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xC3A SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP SWAP1 POP POP PUSH32 0x9D3ACFAF4CF0F7CA2755C0330B02196B1D84ACE88B6EE78448155159F4215B82 DUP9 DUP3 DUP10 DUP10 PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP8 POP SWAP1 SWAP6 POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH2 0xCF0 PUSH2 0x19DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xD18 JUMPI POP PUSH2 0xD18 PUSH2 0x19E3 JUMP JUMPDEST DUP1 PUSH2 0xD26 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xD64 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D70 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD8F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH2 0xD98 CALLER PUSH2 0x11F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDAA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x68 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE SWAP1 SWAP3 SWAP2 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE27 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x1 DUP4 DUP2 ADD SLOAD PUSH1 0x2 DUP1 DUP7 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH2 0x100 SWAP8 DUP5 AND ISZERO SWAP8 SWAP1 SWAP8 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP7 SWAP1 DIV DUP7 MUL DUP3 ADD DUP7 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP4 AND SWAP6 SWAP3 SWAP5 POP SWAP2 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEE8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEBD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEE8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xECB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP6 SWAP7 PUSH1 0xFF SWAP1 SWAP5 AND SWAP6 SWAP4 SWAP5 POP SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xF83 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF58 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF83 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF66 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xF95 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0xFD7 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1041 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070726F6A65637420697320616C726561647920637265617465640000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD DUP3 SWAP1 MSTORE POP SWAP4 DUP6 MSTORE POP POP CALLER PUSH1 0x20 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE DUP2 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP7 ADD MSTORE DUP1 MLOAD DUP1 DUP4 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x80 SWAP1 SWAP6 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP8 DUP4 MSTORE PUSH1 0x68 DUP2 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 DUP4 MLOAD DUP1 MLOAD SWAP2 SWAP4 PUSH2 0x10D7 SWAP4 POP DUP5 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0x1116 SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0x114A SWAP2 PUSH1 0x4 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST POP POP PUSH1 0x66 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x46501879B8CA8525E8C2FD519E2FBFCFA2EBEA26501294AA02CBFCFB12E94354 ADD DUP5 SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP3 DUP2 MSTORE SWAP2 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xED06D1E70F1FAA0E1750DEF1B3A1D942390A8F47D03679C9025A1C38DC34FE7B SWAP2 DUP6 SWAP2 DUP6 SWAP2 DUP6 SWAP2 SWAP1 PUSH1 0x60 DUP3 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1209 JUMPI POP PUSH2 0x1209 PUSH2 0x19E3 JUMP JUMPDEST DUP1 PUSH2 0x1217 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x1255 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D70 PUSH1 0x2E SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT PUSH2 0xFF00 NOT SWAP1 SWAP2 AND PUSH2 0x100 OR AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x12CF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x66 SLOAD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x12CF SWAP1 PUSH1 0x9B SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x1AF8 JUMP JUMPDEST PUSH2 0x12F4 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x1336 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0xDAA DUP2 PUSH2 0x178B JUMP JUMPDEST PUSH2 0x1347 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x1389 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D30 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1407 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652070656E64696E67206564697420646F65736E27742065786973747300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE PUSH2 0x14D2 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1491 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1466 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1491 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1474 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP9 DUP9 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x19E9 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1510 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDA PUSH1 0x34 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x15EB JUMPI PUSH2 0x1524 PUSH1 0x4 DUP3 ADD DUP7 DUP7 PUSH2 0x1B76 JUMP JUMPDEST POP PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x68 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x1558 SWAP1 DUP3 SWAP1 DUP5 SWAP1 PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD DUP3 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD PUSH2 0x15A3 SWAP4 DUP4 DUP7 ADD SWAP4 SWAP1 DUP3 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP PUSH1 0x3 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH2 0x15E7 SWAP3 DUP5 ADD SWAP2 SWAP1 PUSH1 0x2 PUSH2 0x100 PUSH1 0x1 DUP4 AND ISZERO MUL PUSH1 0x0 NOT ADD SWAP1 SWAP2 AND DIV PUSH2 0x1BE4 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SWAP1 PUSH2 0x1618 DUP3 DUP3 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND SWAP1 SSTORE PUSH2 0x1638 PUSH1 0x2 DUP4 ADD PUSH1 0x0 PUSH2 0x1C59 JUMP JUMPDEST PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1652 PUSH1 0x4 DUP4 ADD PUSH1 0x0 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH32 0x632679850203170FCCC7C6ABAEF76A269CBB5D0EC94F498416071A78C9F7D502 DUP9 DUP5 DUP10 DUP10 DUP10 DUP10 DUP9 PUSH1 0x40 MLOAD DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP5 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP9 DUP9 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP7 DUP7 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP12 POP SWAP1 SWAP10 POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x67 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP3 MSTORE SWAP2 DUP4 MSTORE SWAP2 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP3 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP6 SWAP1 DIV DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP1 SWAP3 DUP4 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE19 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE44 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH2 0x17D3 JUMPI PUSH1 0x40 MLOAD PUSH1 0xE5 PUSH1 0x2 EXP PUSH3 0x461BCD MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CB4 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D50 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP1 LOG3 PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP6 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x186C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1854 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1899 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18CC JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x18F9 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x198C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x196D JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x20 SWAP4 DUP5 SUB PUSH2 0x100 EXP PUSH1 0x0 NOT ADD DUP1 NOT SWAP1 SWAP3 AND SWAP2 AND OR SWAP1 MSTORE SWAP3 ADD SWAP4 DUP5 MSTORE POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 SUB DUP2 MSTORE SWAP4 DUP3 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP3 POP PUSH1 0x0 SWAP2 POP PUSH2 0x19D4 SWAP1 POP DUP3 DUP6 PUSH2 0x1A14 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x19FC JUMPI POP PUSH1 0x0 PUSH2 0x19D9 JUMP JUMPDEST DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP4 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x1A27 JUMPI POP PUSH1 0x0 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0xFF PUSH1 0x2 EXP SUB DUP3 GT ISZERO PUSH2 0x1A63 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x19D9 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1A7B JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A8C JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP5 AND DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP5 ADD SWAP4 SWAP2 SWAP3 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1B39 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1B4B JUMP JUMPDEST POP PUSH2 0x1B72 SWAP3 SWAP2 POP PUSH2 0x1C99 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1BB7 JUMPI DUP3 DUP1 ADD PUSH1 0xFF NOT DUP3 CALLDATALOAD AND OR DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 CALLDATALOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1BC9 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x1C1D JUMPI DUP1 SLOAD DUP6 SSTORE PUSH2 0x1B66 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1B66 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1B66 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1C3E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1C7F JUMPI POP PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xDAA SWAP2 SWAP1 JUMPDEST PUSH2 0x918 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1B72 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C9F JUMP INVALID 0x4f PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F20616464726573735468652070656E64696E672065646974 KECCAK256 PUSH5 0x6F65736E27 PUSH21 0x206861766520746865206970667320686173682073 PUSH6 0x6C6563746564 POP PUSH19 0x6F6A656374206265696E672065646974656420 PUSH5 0x6F65736E27 PUSH21 0x2065786973744F776E61626C653A2063616C6C6572 KECCAK256 PUSH10 0x73206E6F742074686520 PUSH16 0x776E65728BE0079C531659141344CD1F 0xd0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E0436F6E747261637420696E7374616E63652068 PUSH2 0x7320 PUSH2 0x6C72 PUSH6 0x616479206265 PUSH6 0x6E20696E6974 PUSH10 0x616C697A6564436F6E74 PUSH19 0x61637420696E7374616E63652068617320616C PUSH19 0x65616479206265656E20757067726164656420 PUSH21 0x6F207631A165627A7A723058205C2F99CF64D2A3BE 0xd SWAP11 SWAP12 BYTE 0x49 PUSH11 0xB882F0A4C9E6DCCE9911D1 PUSH1 0x8 ADDRESS 0xee DUP5 0xbc 0xe1 STOP 0x29 ",
              "sourceMap": "324:328:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;324:328:12;;;;;;-1:-1:-1;;;324:328:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;164:28:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;428:191:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;428:191:12;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;428:191:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;428:191:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;428:191:12;;-1:-1:-1;428:191:12;-1:-1:-1;428:191:12;:::i;:::-;;1193:27:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1193:27:5;;:::i;:::-;;;;;;;;;;;;;;;;1587:73:10;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1746:137:2;;;:::i;2368:1026:5:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2368:1026:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2368:1026:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2368:1026:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;2368:1026:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2368:1026:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2368:1026:5;;-1:-1:-1;2368:1026:5;-1:-1:-1;2368:1026:5;:::i;959:77:2:-;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:2;;;;;;;;;;;;;;1310:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;1546:96:5;;;:::i;1474:65::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1474:65:5;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;1474:65:5;-1:-1:-1;;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:714;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1648:714:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;1648:714:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1648:714:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;1648:714:5;;-1:-1:-1;1648:714:5;-1:-1:-1;1648:714:5;:::i;741:142:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:2;-1:-1:-1;;;;;741:142:2;;:::i;4466:102:5:-;;;:::i;237:94:13:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;237:94:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;237:94:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;237:94:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;237:94:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;237:94:13;;-1:-1:-1;237:94:13;;-1:-1:-1;;;;;237:94:13:i;2032:107:2:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:2;-1:-1:-1;;;;;2032:107:2;;:::i;3400:1060:5:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3400:1060:5;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3400:1060:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3400:1060:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3400:1060:5;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;3400:1060:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3400:1060:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3400:1060:5;;-1:-1:-1;3400:1060:5;-1:-1:-1;;;;;;3400:1060:5;;;;;;;;;;:::i;1319:78::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1319:78:5;;;;;;-1:-1:-1;;;;;1319:78:5;;:::i;164:28:13:-;;;;;;;;;;;;;;;-1:-1:-1;;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;428:191:12:-;1248:13:10;;;;;;;;:30;;-1:-1:-1;1266:12:10;;;;1265:13;1248:30;1240:92;;;;-1:-1:-1;;;;;1240:92:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:13;;;;;;;1365:14;1389:98;;;;1423:13;:20;;-1:-1:-1;;;;1423:20:10;;;;;1457:19;1439:4;1457:19;;;1389:98;539:34:12;566:6;539:26;:34::i;:::-;583:29;595:16;;583:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;583:11:12;;-1:-1:-1;;;583:29:12:i;:::-;1513:14:10;1509:66;;;1543:13;:21;;-1:-1:-1;;1543:21:10;;;1509:66;428:191:12;;;;:::o;1193:27:5:-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1193:27:5;:::o;1587:73:10:-;1652:1;1587:73;;:::o;1746:137:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:2;;-1:-1:-1;;;;;;;;;;;1807:40:2;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:2;;;1746:137::o;2368:1026:5:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2629:31:5;;;;:19;:31;;;;;:41;;;;;2621:88;;;;-1:-1:-1;;;;;2621:88:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2756:23;2794:160;2836:63;2853:10;2865:17;;2836:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;;2836:63:5;;;;137:4:-1;2836:63:5;;;;;;;;;;;;;;;;;;-1:-1:-1;2884:14:5;;-1:-1:-1;2884:14:5;;;;2836:63;;2884:14;;;;2836:63;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;2836:16:5;;-1:-1:-1;;;2836:63:5:i;:::-;2917:23;;2794:160;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2794:24:5;;-1:-1:-1;;;2794:160:5:i;:::-;3058:224;;;;;;;;;;;;;;;;;;;;;;;;;2756:198;;-1:-1:-1;3058:224:5;;;3109:17;;;;;;3058:224;;3109:17;;;;3058:224;1:33:-1;99:1;81:16;;74:27;;;;-1:-1;;;3058:224:5;;;-1:-1:-1;;;;;;3058:224:5;;;;;;;;;;;;;137:4:-1;3058:224:5;;;;;;;;;;;;;;;;;;;;3228:14;;;;;;3058:224;;3228:14;;;;3058:224;1:33:-1;99:1;81:16;;74:27;;;-1:-1;3058:224:5;;;-1:-1:-1;;3267:4:5;3058:224;;;;;;;;;;;;;;;;;;;;;;;;;;3014:24;;;:12;:24;;;;;-1:-1:-1;;;;;3014:41:5;;;;;;;;;;:268;;;;:41;;:268;;-1:-1:-1;3014:41:5;;:268;;;;:::i;:::-;-1:-1:-1;3014:268:5;;;;;;;;;;-1:-1:-1;;;;;;3014:268:5;-1:-1:-1;;;;;3014:268:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3014:268:5;;;;;;;;;-1:-1:-1;;3014:268:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;3320:67;3340:10;3352:15;3369:17;;3320:67;;;;;;;;;-1:-1:-1;;;;;3320:67:5;-1:-1:-1;;;;;3320:67:5;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;3320:67:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;3320:67:5;;;;-1:-1:-1;3320:67:5;;-1:-1:-1;;;;;;3320:67:5;1219:1:2;2368:1026:5;;;;;;;:::o;959:77:2:-;1023:6;;-1:-1:-1;;;;;1023:6:2;959:77;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:2;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:2;;1366:29;;1310:92;:::o;1546:96:5:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;1605:30:5;1624:10;1605:18;:30::i;:::-;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;1546:96:5;:::o;1474:65::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1474:65:5;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1474:65:5;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1474:65:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1648:714::-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;1802:31:5;;;;:19;:31;;;;;:41;;;;;1801:42;1793:85;;;;;-1:-1:-1;;;;;1793:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:214;;;;;;;;2022:24;;1971:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;-1:-1;1971:214:5;;;-1:-1:-1;;2106:10:5;1971:214;;;;;;;;;;;;;;;;;;;;;;;2170:4;1971:214;;;;;;;;;;;;;;;;;;;;;;1937:31;;;:19;:31;;;;;;:248;;;;:31;;:248;;-1:-1:-1;1937:31:5;;:248;;;;:::i;:::-;-1:-1:-1;1937:248:5;;;;;;;;;;-1:-1:-1;;;;;;1937:248:5;-1:-1:-1;;;;;1937:248:5;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1937:248:5;;;;;;;;;-1:-1:-1;;1937:248:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2238:10:5;27::-1;;39:1;23:18;;45:23;;-1:-1;2238:27:5;;;;;;;;;-1:-1:-1;2303:52:5;;;;;;2238:27;2303:52;;;;;;;;;;;;;2254:10;;2330:24;;;;2303:52;;;;2330:24;;;;2303:52;1:33:-1;99:1;81:16;;;74:27;2303:52:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;2303:52:5;;;;-1:-1:-1;2303:52:5;;-1:-1:-1;;;;;2303:52:5;1648:714;;;:::o;741:142:2:-;1024:12:3;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:3;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;;;1016:106:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:3;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:2;:15;;-1:-1:-1;;;;;;806:15:2;-1:-1:-1;;;;;806:15:2;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;;;;;;;;;;;;836:40:2;-1:-1:-1;;836:40:2;1268:14:3;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:3;;;1264:55;741:142:2;;:::o;4466:102:5:-;4544:10;:17;4466:102;:::o;237:94:13:-;299:25;;;;:14;;:25;;;;;:::i;2032:107:2:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;3400:1060:5:-;1163:9:2;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;;;1155:54:2;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1155:54:2;;;;;;;;;;;;;;;3671:39:5;3713:24;;;:12;:24;;;;;;;;-1:-1:-1;;;;;3713:40:5;;;;;;;;;3771:22;;;;;;3763:66;;;;;-1:-1:-1;;;;;3763:66:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;3860:70;;;;;;;;;;;;;-1:-1:-1;;3860:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3912:17;;3860:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;3860:20:5;;-1:-1:-1;;;3860:70:5:i;:::-;3839:169;;;;-1:-1:-1;;;;;3839:169:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4075:9;4071:143;;;4100:43;:26;;;4129:14;;4100:43;:::i;:::-;-1:-1:-1;4157:31:5;;;;:19;:31;;;;;:46;;4191:12;;4157:31;:46;;:31;;4191:12;;4157:46;-1:-1:-1;;4157:46:5;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4157:46:5;;;;;;;;;;-1:-1:-1;;;;;;4157:46:5;-1:-1:-1;;;;;4157:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4157:46:5;;;;;;:::i;:::-;-1:-1:-1;4157:46:5;;;;;;;;;;-1:-1:-1;;4157:46:5;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4157:46:5;;;;-1:-1:-1;;4157:46:5;;;;;;:::i;:::-;-1:-1:-1;;;4071:143:5;4283:24;;;;:12;:24;;;;;;;;-1:-1:-1;;;;;4283:40:5;;;;;;;;;;4276:47;4283:40;:24;4276:47;:::i;:::-;;;;;;-1:-1:-1;;;;;;4276:47:5;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;4276:47:5;;;;;;;;;:::i;:::-;;;4361:92;4380:10;4392:14;4408:17;;4427:14;;4443:9;4361:92;;;;;;;;;-1:-1:-1;;;;;4361:92:5;-1:-1:-1;;;;;4361:92:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;;74:27;137:4;117:14;-1:-1;;113:30;157:16;;;4361:92:5;;;;;;;;;;;-1:-1:-1;4361:92:5;;;;;1:33:-1;99:1;81:16;;;74:27;4361:92:5;;137:4:-1;117:14;;;-1:-1;;113:30;157:16;;;4361:92:5;;;;-1:-1:-1;4361:92:5;;-1:-1:-1;;;;;;;;;;4361:92:5;1219:1:2;3400:1060:5;;;;;;;:::o;1319:78::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1319:78:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2240:225:2;-1:-1:-1;;;;;2313:22:2;;2305:73;;;;-1:-1:-1;;;;;2305:73:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:2;;;;2414:6;;-1:-1:-1;;;;;;;;;;;2393:38:2;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:2;-1:-1:-1;;;;;2441:17:2;;;;;;;;;;2240:225::o;4574:263:5:-;4736:7;4783:10;4795:17;4814:14;4772:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4772:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4772:57:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4772:57:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4772:57:5;;;4762:68;;;;;;4755:75;;4574:263;;;;;:::o;725:360:8:-;809:7;878:27;935:6;;;;;;;;;;;;;;;;;943:11;918:37;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;918:37:8;;;;;-1:-1:-1;918:37:8;;;26:21:-1;;;6:49;;918:37:8;;;;;908:48;;;;;;;;;-1:-1:-1;;;;1010:45:8;;-1:-1:-1;908:48:8;1045:9;1010:13;:45::i;:::-;993:62;-1:-1:-1;;;725:360:8;;;;;:::o;867:96:0:-;946:10;867:96;:::o;1409:498:3:-;1820:4;1864:17;1895:7;1409:498;:::o;51:260:9:-;128:4;174:2;168:16;154:2;148:16;:36;144:161;;-1:-1:-1;207:5:9;200:12;;144:161;290:2;274:20;;;;;;266:2;250:20;;;;;;:44;243:51;;;;1226:1891:1;1304:7;1365:9;:16;1385:2;1365:22;1361:72;;-1:-1:-1;1419:1:1;1403:19;;1361:72;1783:4;1768:20;;1762:27;1828:4;1813:20;;1807:27;1881:4;1866:20;;1860:27;1499:9;1852:36;-1:-1:-1;;;;;2786:79:1;;2782:127;;;2896:1;2881:17;;;;;;;2782:127;2923:1;:7;;2928:2;2923:7;;:18;;;;;2934:1;:7;;2939:2;2934:7;;2923:18;2919:66;;;2972:1;2957:17;;;;;;;2919:66;3086:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3086:24:1;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3086:24:1;;-1:-1:-1;;3086:24:1;;;1226:1891;-1:-1:-1;;;;;;;1226:1891:1:o;324:328:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;324:328:12;;;-1:-1:-1;324:328:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;324:328:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "createProject(uint256,string)": "bf1a8003",
              "getProjectsLength()": "c6bdc0a2",
              "initialize(address)": "c4d66de8",
              "isOwner()": "8f32d59b",
              "owner()": "8da5cb5b",
              "pendingEdits(uint256,address)": "fd2ca96b",
              "projectIds(uint256)": "48c35ad4",
              "projectsDescription(uint256)": "b4796ce2",
              "proposeProjectEdit(uint256,string,string,bytes)": "843d160a",
              "registryInitialize()": "9506ec01",
              "registryUpgradeToV1(address,string)": "23870ff2",
              "renounceOwnership()": "715018a6",
              "setVariable(string)": "d746afa6",
              "stringVariable()": "117b2467",
              "submitProjectEditAuditResult(uint256,string,string,address,bool)": "f5cdd9c2",
              "transferOwnership(address)": "f2fde38b",
              "version()": "54fd4d50"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"stringVariable\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_initialVariable\",\"type\":\"string\"}],\"name\":\"registryUpgradeToV1\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectIds\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposedIpfsHash\",\"type\":\"string\"},{\"name\":\"_proposerEmail\",\"type\":\"string\"},{\"name\":\"_authorizationSignature\",\"type\":\"bytes\"}],\"name\":\"proposeProjectEdit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"registryInitialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"projectsDescription\",\"outputs\":[{\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"authorAddress\",\"type\":\"address\"},{\"name\":\"authorEmail\",\"type\":\"string\"},{\"name\":\"isCreated\",\"type\":\"bool\"},{\"name\":\"auditIpfsHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_initialProposalIpfsHash\",\"type\":\"string\"}],\"name\":\"createProject\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProjectsLength\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"setVariable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_projectId\",\"type\":\"uint256\"},{\"name\":\"_proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"_auditIpfsHash\",\"type\":\"string\"},{\"name\":\"_authorAddress\",\"type\":\"address\"},{\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"submitProjectEditAuditResult\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingEdits\",\"outputs\":[{\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"name\":\"authorAddress\",\"type\":\"address\"},{\"name\":\"authorEmail\",\"type\":\"string\"},{\"name\":\"isCreated\",\"type\":\"bool\"},{\"name\":\"auditIpfsHash\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"ipfsHash\",\"type\":\"string\"}],\"name\":\"ProjectCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposedIpfsHash\",\"type\":\"string\"}],\"name\":\"ProjectEditProposed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"proposalIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"auditIpfsHash\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ProjectEditAudited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"V2 of the ProjectsRegistry contract, extending it's behavior with the VariableStorageForTests       Used only for testing purposes\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol\":\"ProjectsRegistryV1ForTests\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzzr://5cddbf3b74b775a8670757a6b8e108dac17dac20253f35f4c729e9cb6bea4ed3\"]},\"@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0xc89ea7e48ba477b1781b24ae963442fff1bb2af33b6178dad679a3fa2f5ab2de\",\"urls\":[\"bzzr://2428cb52cd677455598ffafc70496a6e85d25af47cb45ef6f16dd1ee3d15e985\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzzr://b4c855b32d75f2a4969bfbd530b6934b69f12f28584b3746967e1ca64e024bd9\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzzr://f75d88b16fe25a9e19b3512691c496e2bb6d8451bc9a636196c4e17ca9b40201\"]},\"src/contracts/ProjectsRegistry.sol\":{\"keccak256\":\"0x3d0140ef5be1864d6a5be548e3b799fe858cabb9316659778a089d18c6574974\",\"urls\":[\"bzzr://4608d2fbc558c7b1f7534f0c903cc0b0bfd0b7d87cfa96046b9b86737a39b6b1\"]},\"src/contracts/interfaces/IProjectsRegistry.sol\":{\"keccak256\":\"0xc83f4b91b3af69aa6cc65f7850a1c254fb8d433d82a47cd6f5f67fc0803c13da\",\"urls\":[\"bzzr://c039091f576131b5d443bae58678c6e3617296208f6b1d1c049701bc08bdb5e4\"]},\"src/contracts/utils/SignatureVerifier.sol\":{\"keccak256\":\"0x7640764af901ef936847670e9221d794c5a1f8914e2a9ef877edb49892b5b83e\",\"urls\":[\"bzzr://dee27cc02f5f8fbb586336ce888e0747372c85b1d1de244928426eabb8bcc14e\"]},\"src/contracts/utils/StringUtils.sol\":{\"keccak256\":\"0x5ddd47496a33edbbd7440040c2638d1a5063a3cd04b353000e2da10eb5077aa9\",\"urls\":[\"bzzr://42bad4ea3a3bd293cedcf199d863f3228ea4de5ec24aba71d248fe5edab45f6a\"]},\"src/contracts/utils/UpgradeableToV1.sol\":{\"keccak256\":\"0x43b03a366784bc1f79a3c3338f23a6158ae356d2ac3a97bb35f9bc5479c96008\",\"urls\":[\"bzzr://50e951b1ec66448e0aca894e7f956beca941a161c1a39a1275885acd413a7f44\"]},\"src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol\":{\"keccak256\":\"0x7c86514fc8e6b183dd217924192fa2c7d64e7d72bc5a6b424692fa811c073893\",\"urls\":[\"bzzr://400395838513c95b9e140caf5200ea93ae05f694ed955b6200c06fc7453926b9\"]},\"src/tests/contracts/mockUpgrades/VariableStorageForTests.sol\":{\"keccak256\":\"0x697a58f1c61cae82446bcf2502729b90327d74a2acb97c128f0849bbdb48b802\",\"urls\":[\"bzzr://b215c4796ffd355234f36cf6755ae2f560a4f5ebfd84a8b007a7d1c458f7bbbc\"]}},\"version\":1}"
        }
      },
      "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol": {
        "VariableStorageForTests": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "stringVariable",
              "outputs": [
                {
                  "name": "",
                  "type": "string"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "name": "newValue",
                  "type": "string"
                }
              ],
              "name": "setVariable",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506102cd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100395760e060020a6000350463117b2467811461003e578063d746afa6146100bb575b600080fd5b610046610161565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610080578181015183820152602001610068565b50505050905090810190601f1680156100ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015f600480360360208110156100d157600080fd5b810190602081018135602060020a8111156100eb57600080fd5b8201836020820111156100fd57600080fd5b803590602001918460018302840111602060020a8311171561011e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101ef945050505050565b005b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101e75780601f106101bc576101008083540402835291602001916101e7565b820191906000526020600020905b8154815290600101906020018083116101ca57829003601f168201915b505050505081565b8051610202906000906020840190610206565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024757805160ff1916838001178555610274565b82800160010185558215610274579182015b82811115610274578251825591602001919060010190610259565b50610280929150610284565b5090565b61029e91905b80821115610280576000815560010161028a565b9056fea165627a7a72305820de4d52b5a585ef4212827487f6b6f80e4950a8febff51c814b2e637fd814b3380029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x39 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x117B2467 DUP2 EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x68 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1EF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x202 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x206 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x247 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x274 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x274 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x274 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x259 JUMP JUMPDEST POP PUSH2 0x280 SWAP3 SWAP2 POP PUSH2 0x284 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28A JUMP JUMPDEST SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xde 0x4d MSTORE 0xb5 0xa5 DUP6 0xef TIMESTAMP SLT DUP3 PUSH21 0x87F6B6F80E4950A8FEBFF51C814B2E637FD814B338 STOP 0x29 ",
              "sourceMap": "125:208:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;125:208:13;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100395760e060020a6000350463117b2467811461003e578063d746afa6146100bb575b600080fd5b610046610161565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610080578181015183820152602001610068565b50505050905090810190601f1680156100ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61015f600480360360208110156100d157600080fd5b810190602081018135602060020a8111156100eb57600080fd5b8201836020820111156100fd57600080fd5b803590602001918460018302840111602060020a8311171561011e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101ef945050505050565b005b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156101e75780601f106101bc576101008083540402835291602001916101e7565b820191906000526020600020905b8154815290600101906020018083116101ca57829003601f168201915b505050505081565b8051610202906000906020840190610206565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061024757805160ff1916838001178555610274565b82800160010185558215610274579182015b82811115610274578251825591602001919060010190610259565b50610280929150610284565b5090565b61029e91905b80821115610280576000815560010161028a565b9056fea165627a7a72305820de4d52b5a585ef4212827487f6b6f80e4950a8febff51c814b2e637fd814b3380029",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x39 JUMPI PUSH1 0xE0 PUSH1 0x2 EXP PUSH1 0x0 CALLDATALOAD DIV PUSH4 0x117B2467 DUP2 EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0xD746AFA6 EQ PUSH2 0xBB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x80 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x68 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xAD JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH1 0x20 PUSH1 0x2 EXP DUP2 GT ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x20 PUSH1 0x2 EXP DUP4 GT OR ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1EF SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x1E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x202 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x206 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x247 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x274 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x274 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x274 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x259 JUMP JUMPDEST POP PUSH2 0x280 SWAP3 SWAP2 POP PUSH2 0x284 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28A JUMP JUMPDEST SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xde 0x4d MSTORE 0xb5 0xa5 DUP6 0xef TIMESTAMP SLT DUP3 PUSH21 0x87F6B6F80E4950A8FEBFF51C814B2E637FD814B338 STOP 0x29 ",
              "sourceMap": "125:208:13:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;125:208:13;;;;;;-1:-1:-1;;;125:208:13;;;;;;;;;;;;;;;;;164:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:94;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;237:94:13;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;237:94:13;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;237:94:13;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;237:94:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;237:94:13;;-1:-1:-1;237:94:13;;-1:-1:-1;;;;;237:94:13:i;:::-;;164:28;;;;;;;;;;;;;;;-1:-1:-1;;164:28:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;237:94::-;299:25;;;;:14;;:25;;;;;:::i;:::-;;237:94;:::o;125:208::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;125:208:13;;;-1:-1:-1;125:208:13;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "setVariable(string)": "d746afa6",
              "stringVariable()": "117b2467"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"stringVariable\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newValue\",\"type\":\"string\"}],\"name\":\"setVariable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{},\"title\":\"Contract storing a string variable       To be used for testing purposes only\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"src/tests/contracts/mockUpgrades/VariableStorageForTests.sol\":\"VariableStorageForTests\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"src/tests/contracts/mockUpgrades/VariableStorageForTests.sol\":{\"keccak256\":\"0x697a58f1c61cae82446bcf2502729b90327d74a2acb97c128f0849bbdb48b802\",\"urls\":[\"bzzr://b215c4796ffd355234f36cf6755ae2f560a4f5ebfd84a8b007a7d1c458f7bbbc\"]}},\"version\":1}"
        }
      }
    },
    "sources": {
      "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
          "exportedSymbols": {
            "Context": [
              29
            ]
          },
          "id": 30,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "id": 2,
              "nodeType": "ImportDirective",
              "scope": 30,
              "sourceUnit": 304,
              "src": "25:60:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 3,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 303,
                    "src": "607:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$303",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 4,
                  "nodeType": "InheritanceSpecifier",
                  "src": "607:13:0"
                }
              ],
              "contractDependencies": [
                303
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 29,
              "linearizedBaseContracts": [
                29,
                303
              ],
              "name": "Context",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 7,
                    "nodeType": "Block",
                    "src": "805:3:0",
                    "statements": []
                  },
                  "documentation": null,
                  "id": 8,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "793:2:0"
                  },
                  "returnParameters": {
                    "id": 6,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "805:0:0"
                  },
                  "scope": 29,
                  "src": "781:27:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 16,
                    "nodeType": "Block",
                    "src": "929:34:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 13,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "946:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "946:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 12,
                        "id": 15,
                        "nodeType": "Return",
                        "src": "939:17:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 17,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "886:2:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 17,
                        "src": "912:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "912:15:0",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "911:17:0"
                  },
                  "scope": 29,
                  "src": "867:96:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "1026:165:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 22,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1439,
                          "src": "1036:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$29",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 23,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:4:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 24,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "1176:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1176:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 21,
                        "id": 26,
                        "nodeType": "Return",
                        "src": "1169:15:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 28,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "986:2:0"
                  },
                  "returnParameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "1012:12:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1012:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1011:14:0"
                  },
                  "scope": 29,
                  "src": "969:222:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 30,
              "src": "587:606:0"
            }
          ],
          "src": "0:1194:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
          "exportedSymbols": {
            "ECDSA": [
              110
            ]
          },
          "id": 111,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 31,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:1"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n * These functions can be used to verify that a message was signed by the holder\nof the private keys of a given address.",
              "fullyImplemented": true,
              "id": 110,
              "linearizedBaseContracts": [
                110
              ],
              "name": "ECDSA",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "1313:1804:1",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 40,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "1365:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 41,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1365:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "3635",
                            "id": 42,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1385:2:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "1365:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 50,
                        "nodeType": "IfStatement",
                        "src": "1361:72:1",
                        "trueBody": {
                          "id": 49,
                          "nodeType": "Block",
                          "src": "1389:44:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "hexValue": "30",
                                        "id": 45,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1419:1:1",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 44,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1411:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 46,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1411:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  }
                                ],
                                "id": 47,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1410:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "functionReturnParameters": 39,
                              "id": 48,
                              "nodeType": "Return",
                              "src": "1403:19:1"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          52
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 52,
                            "name": "r",
                            "nodeType": "VariableDeclaration",
                            "scope": 92,
                            "src": "1499:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 51,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1499:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 53,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1499:9:1"
                      },
                      {
                        "assignments": [
                          55
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 55,
                            "name": "s",
                            "nodeType": "VariableDeclaration",
                            "scope": 92,
                            "src": "1518:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 54,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1518:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 56,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1518:9:1"
                      },
                      {
                        "assignments": [
                          58
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 58,
                            "name": "v",
                            "nodeType": "VariableDeclaration",
                            "scope": 92,
                            "src": "1537:7:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 57,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "1537:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 59,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1537:7:1"
                      },
                      {
                        "externalReferences": [
                          {
                            "r": {
                              "declaration": 52,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1757:1:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "signature": {
                              "declaration": 35,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1772:9:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "v": {
                              "declaration": 58,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1847:1:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "s": {
                              "declaration": 55,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1802:1:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "signature": {
                              "declaration": 35,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1817:9:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "signature": {
                              "declaration": 35,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1870:9:1",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 60,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    r := mload(add(signature, 0x20))\n    s := mload(add(signature, 0x40))\n    v := byte(0, mload(add(signature, 0x60)))\n}",
                        "src": "1734:164:1"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 62,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 55,
                                "src": "2794:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 61,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2786:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2786:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 64,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2799:66:1",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "2786:79:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 71,
                        "nodeType": "IfStatement",
                        "src": "2782:127:1",
                        "trueBody": {
                          "id": 70,
                          "nodeType": "Block",
                          "src": "2867:42:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 67,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2896:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 66,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2888:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 68,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2888:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "functionReturnParameters": 39,
                              "id": 69,
                              "nodeType": "Return",
                              "src": "2881:17:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 72,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "2923:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3237",
                              "id": 73,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2928:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_27_by_1",
                                "typeString": "int_const 27"
                              },
                              "value": "27"
                            },
                            "src": "2923:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 75,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "2934:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "hexValue": "3238",
                              "id": 76,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2939:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28_by_1",
                                "typeString": "int_const 28"
                              },
                              "value": "28"
                            },
                            "src": "2934:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2923:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 84,
                        "nodeType": "IfStatement",
                        "src": "2919:66:1",
                        "trueBody": {
                          "id": 83,
                          "nodeType": "Block",
                          "src": "2943:42:1",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 80,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2972:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 79,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2964:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 81,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2964:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "functionReturnParameters": 39,
                              "id": 82,
                              "nodeType": "Return",
                              "src": "2957:17:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 86,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "3096:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 87,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 58,
                              "src": "3102:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 88,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "3105:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 55,
                              "src": "3108:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 85,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "3086:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3086:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 39,
                        "id": 91,
                        "nodeType": "Return",
                        "src": "3079:31:1"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the address that signed a hashed message (`hash`) with\n`signature`. This address can then be used for verification purposes.\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\nthis function rejects them by requiring the `s` value to be in the lower\nhalf order, and the `v` value to be either 27 or 28.\n     * NOTE: This call _does not revert_ if the signature is invalid, or\nif the signer is otherwise unable to be retrieved. In those scenarios,\nthe zero address is returned.\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\nverification to be secure: it is possible to craft signatures that\nrecover to arbitrary addresses for non-hashed data. A safe way to ensure\nthis is by receiving a hash of the original message (which may otherwise\nbe too long), and then calling {toEthSignedMessageHash} on it.",
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 36,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "name": "hash",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1243:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1243:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 35,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1257:22:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 34,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1257:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1242:38:1"
                  },
                  "returnParameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "1304:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1304:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1303:9:1"
                  },
                  "scope": 110,
                  "src": "1226:1891:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 108,
                    "nodeType": "Block",
                    "src": "3459:187:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3597:34:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 104,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 95,
                                  "src": "3633:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 101,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1410,
                                  "src": "3580:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 102,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "3580:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 105,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3580:58:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 100,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "3570:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3570:69:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 99,
                        "id": 107,
                        "nodeType": "Return",
                        "src": "3563:76:1"
                      }
                    ]
                  },
                  "documentation": "@dev Returns an Ethereum Signed Message, created from a `hash`. This\nreplicates the behavior of the\nhttps://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sign[`eth_sign`]\nJSON-RPC method.\n     * See {recover}.",
                  "id": 109,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toEthSignedMessageHash",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 95,
                        "name": "hash",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "3413:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3413:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3412:14:1"
                  },
                  "returnParameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 98,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "3450:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3450:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3449:9:1"
                  },
                  "scope": 110,
                  "src": "3381:265:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 111,
              "src": "231:3417:1"
            }
          ],
          "src": "0:3649:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
          "exportedSymbols": {
            "Ownable": [
              234
            ]
          },
          "id": 235,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 112,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:2"
            },
            {
              "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "id": 113,
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 304,
              "src": "25:60:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
              "file": "../GSN/Context.sol",
              "id": 114,
              "nodeType": "ImportDirective",
              "scope": 235,
              "sourceUnit": 30,
              "src": "87:28:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 115,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 303,
                    "src": "497:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$303",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 116,
                  "nodeType": "InheritanceSpecifier",
                  "src": "497:13:2"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 117,
                    "name": "Context",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 29,
                    "src": "512:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Context_$29",
                      "typeString": "contract Context"
                    }
                  },
                  "id": 118,
                  "nodeType": "InheritanceSpecifier",
                  "src": "512:7:2"
                }
              ],
              "contractDependencies": [
                29,
                303
              ],
              "contractKind": "contract",
              "documentation": "@dev Contract module which provides a basic access control mechanism, where\nthere is an account (an owner) that can be granted exclusive access to\nspecific functions.\n * This module is used through inheritance. It will make available the modifier\n`onlyOwner`, which can be aplied to your functions to restrict their use to\nthe owner.",
              "fullyImplemented": true,
              "id": 234,
              "linearizedBaseContracts": [
                234,
                29,
                303
              ],
              "name": "Ownable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 120,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "526:22:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 126,
                  "name": "OwnershipTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "indexed": true,
                        "name": "previousOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "582:29:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "582:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 124,
                        "indexed": true,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "613:24:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "581:57:2"
                  },
                  "src": "555:84:2"
                },
                {
                  "body": {
                    "id": 144,
                    "nodeType": "Block",
                    "src": "796:87:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 133,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "806:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 134,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "815:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "806:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 136,
                        "nodeType": "ExpressionStatement",
                        "src": "806:15:2"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "865:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "857:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "857:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 141,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "869:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 137,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "836:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "836:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 143,
                        "nodeType": "EmitStatement",
                        "src": "831:45:2"
                      }
                    ]
                  },
                  "documentation": "@dev Initializes the contract setting the deployer as the initial owner.",
                  "id": 145,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 131,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 130,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "784:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "784:11:2"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 128,
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "761:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "761:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "760:16:2"
                  },
                  "returnParameters": {
                    "id": 132,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:0:2"
                  },
                  "scope": 234,
                  "src": "741:142:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 152,
                    "nodeType": "Block",
                    "src": "1006:30:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 150,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 120,
                          "src": "1023:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 149,
                        "id": 151,
                        "nodeType": "Return",
                        "src": "1016:13:2"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the address of the current owner.",
                  "id": 153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "973:2:2"
                  },
                  "returnParameters": {
                    "id": 149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "997:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "996:9:2"
                  },
                  "scope": 234,
                  "src": "959:77:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 162,
                    "nodeType": "Block",
                    "src": "1145:82:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 156,
                                "name": "isOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 174,
                                "src": "1163:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                  "typeString": "function () view returns (bool)"
                                }
                              },
                              "id": 157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1163:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1174:34:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 155,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "1155:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1155:54:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 160,
                        "nodeType": "ExpressionStatement",
                        "src": "1155:54:2"
                      },
                      {
                        "id": 161,
                        "nodeType": "PlaceholderStatement",
                        "src": "1219:1:2"
                      }
                    ]
                  },
                  "documentation": "@dev Throws if called by any account other than the owner.",
                  "id": 163,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 154,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1142:2:2"
                  },
                  "src": "1124:103:2",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 173,
                    "nodeType": "Block",
                    "src": "1356:46:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 168,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17,
                              "src": "1373:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1373:12:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 170,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1389:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1373:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 167,
                        "id": 172,
                        "nodeType": "Return",
                        "src": "1366:29:2"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if the caller is the current owner.",
                  "id": 174,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 164,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1326:2:2"
                  },
                  "returnParameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 166,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "1350:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1350:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1349:6:2"
                  },
                  "scope": 234,
                  "src": "1310:92:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 192,
                    "nodeType": "Block",
                    "src": "1792:91:2",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1828:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1844:1:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1836:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1836:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 179,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "1807:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1807:40:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "EmitStatement",
                        "src": "1802:45:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1857:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 188,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1874:1:2",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1866:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1857:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 191,
                        "nodeType": "ExpressionStatement",
                        "src": "1857:19:2"
                      }
                    ]
                  },
                  "documentation": "@dev Leaves the contract without owner. It will not be possible to call\n`onlyOwner` functions anymore. Can only be called by the current owner.\n     * > Note: Renouncing ownership will leave the contract without an owner,\nthereby removing any functionality that is only available to the owner.",
                  "id": 193,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 177,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 176,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1782:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1782:9:2"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1772:2:2"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1792:0:2"
                  },
                  "scope": 234,
                  "src": "1746:137:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 204,
                    "nodeType": "Block",
                    "src": "2094:45:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 201,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 195,
                              "src": "2123:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 200,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "2104:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2104:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 203,
                        "nodeType": "ExpressionStatement",
                        "src": "2104:28:2"
                      }
                    ]
                  },
                  "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).\nCan only be called by the current owner.",
                  "id": 205,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 198,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 197,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2084:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2084:9:2"
                    }
                  ],
                  "name": "transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 205,
                        "src": "2059:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2059:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2058:18:2"
                  },
                  "returnParameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2094:0:2"
                  },
                  "scope": 234,
                  "src": "2032:107:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "2295:170:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 211,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 207,
                                "src": "2313:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2333:1:2",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 212,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2325:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 214,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2325:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2313:22:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2337:40:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 210,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "2305:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2305:73:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "2305:73:2"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 220,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "2414:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 221,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 207,
                              "src": "2422:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 219,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 126,
                            "src": "2393:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2393:38:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 223,
                        "nodeType": "EmitStatement",
                        "src": "2388:43:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 224,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "2441:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 225,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2450:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2441:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2441:17:2"
                      }
                    ]
                  },
                  "documentation": "@dev Transfers ownership of the contract to a new account (`newOwner`).",
                  "id": 229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 207,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "2268:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2267:18:2"
                  },
                  "returnParameters": {
                    "id": 209,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2295:0:2"
                  },
                  "scope": 234,
                  "src": "2240:225:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 233,
                  "name": "______gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "2471:29:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 230,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2471:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 232,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2479:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2471:11:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 235,
              "src": "477:2026:2"
            }
          ],
          "src": "0:2504:2"
        },
        "id": 2
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              303
            ]
          },
          "id": 304,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 236,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:32:3"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title Initializable\n * @dev Helper contract to support initializer functions. To use it, replace\nthe constructor with a function that has the `initializer` modifier.\nWARNING: Unlike constructors, initializer functions must be manually\ninvoked. This applies both to deploying an Initializable contract, as well\nas extending an Initializable contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\na parent initializer twice, or ensure that all initializers are idempotent,\nbecause this is not dealt with automatically as with constructors.",
              "fullyImplemented": true,
              "id": 303,
              "linearizedBaseContracts": [
                303
              ],
              "name": "Initializable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 238,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "757:24:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 237,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 240,
                  "name": "initializing",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "876:25:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "1010:313:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 243,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 240,
                                  "src": "1024:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 244,
                                    "name": "isConstructor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 298,
                                    "src": "1040:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 245,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1040:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1024:31:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1059:12:3",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 247,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "1060:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1024:47:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1073:48:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                                "typeString": "literal_string \"Contract instance has already been initialized\""
                              },
                              "value": "Contract instance has already been initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                                "typeString": "literal_string \"Contract instance has already been initialized\""
                              }
                            ],
                            "id": 242,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "1016:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:106:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "1016:106:3"
                      },
                      {
                        "assignments": [
                          254
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 254,
                            "name": "isTopLevelCall",
                            "nodeType": "VariableDeclaration",
                            "scope": 277,
                            "src": "1129:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 253,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1129:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 257,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1151:13:3",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 255,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 240,
                            "src": "1152:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1129:35:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 258,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1174:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 268,
                        "nodeType": "IfStatement",
                        "src": "1170:80:3",
                        "trueBody": {
                          "id": 267,
                          "nodeType": "Block",
                          "src": "1190:60:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 240,
                                  "src": "1198:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1213:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1198:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 262,
                              "nodeType": "ExpressionStatement",
                              "src": "1198:19:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 265,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 263,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "1225:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 264,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1239:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1225:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 266,
                              "nodeType": "ExpressionStatement",
                              "src": "1225:18:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 269,
                        "nodeType": "PlaceholderStatement",
                        "src": "1256:1:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 270,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 254,
                          "src": "1268:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 276,
                        "nodeType": "IfStatement",
                        "src": "1264:55:3",
                        "trueBody": {
                          "id": 275,
                          "nodeType": "Block",
                          "src": "1284:35:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 273,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 271,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 240,
                                  "src": "1292:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 272,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1307:5:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1292:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 274,
                              "nodeType": "ExpressionStatement",
                              "src": "1292:20:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to use in the initializer function of a contract.",
                  "id": 278,
                  "name": "initializer",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1007:2:3"
                  },
                  "src": "987:336:3",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 297,
                    "nodeType": "Block",
                    "src": "1462:445:3",
                    "statements": [
                      {
                        "assignments": [
                          284
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 284,
                            "name": "self",
                            "nodeType": "VariableDeclaration",
                            "scope": 297,
                            "src": "1797:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1797:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 288,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 286,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "1820:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$303",
                                "typeString": "contract Initializable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Initializable_$303",
                                "typeString": "contract Initializable"
                              }
                            ],
                            "id": 285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1812:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1812:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1797:28:3"
                      },
                      {
                        "assignments": [
                          290
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 290,
                            "name": "cs",
                            "nodeType": "VariableDeclaration",
                            "scope": 297,
                            "src": "1831:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 289,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1831:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 291,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1831:10:3"
                      },
                      {
                        "externalReferences": [
                          {
                            "cs": {
                              "declaration": 290,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1858:2:3",
                              "valueSize": 1
                            }
                          },
                          {
                            "self": {
                              "declaration": 284,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1876:4:3",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 292,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    cs := extcodesize(self)\n}",
                        "src": "1847:36:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 293,
                            "name": "cs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 290,
                            "src": "1895:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1901:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1895:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 282,
                        "id": 296,
                        "nodeType": "Return",
                        "src": "1888:14:3"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if and only if the function is running in the constructor",
                  "id": 298,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isConstructor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1431:2:3"
                  },
                  "returnParameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "1456:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1456:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1455:6:3"
                  },
                  "scope": 303,
                  "src": "1409:498:3",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 302,
                  "name": "______gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "1982:29:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 299,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1982:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 301,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1990:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1982:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 304,
              "src": "657:1357:3"
            }
          ],
          "src": "0:2015:3"
        },
        "id": 3
      },
      "src/contracts/ClaimsRegistry.sol": {
        "ast": {
          "absolutePath": "src/contracts/ClaimsRegistry.sol",
          "exportedSymbols": {
            "ClaimsRegistry": [
              779
            ]
          },
          "id": 780,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 305,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
              "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
              "id": 306,
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 235,
              "src": "25:82:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "id": 307,
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 304,
              "src": "108:60:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/interfaces/IClaimsRegistry.sol",
              "file": "./interfaces/IClaimsRegistry.sol",
              "id": 308,
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 1127,
              "src": "169:42:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/SignatureVerifier.sol",
              "file": "./utils/SignatureVerifier.sol",
              "id": 309,
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 1229,
              "src": "212:39:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/StringUtils.sol",
              "file": "./utils/StringUtils.sol",
              "id": 310,
              "nodeType": "ImportDirective",
              "scope": 780,
              "sourceUnit": 1268,
              "src": "252:33:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 311,
                    "name": "IClaimsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1126,
                    "src": "735:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimsRegistry_$1126",
                      "typeString": "contract IClaimsRegistry"
                    }
                  },
                  "id": 312,
                  "nodeType": "InheritanceSpecifier",
                  "src": "735:15:4"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 313,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 303,
                    "src": "752:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$303",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 314,
                  "nodeType": "InheritanceSpecifier",
                  "src": "752:13:4"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 315,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 234,
                    "src": "767:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$234",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 316,
                  "nodeType": "InheritanceSpecifier",
                  "src": "767:7:4"
                }
              ],
              "contractDependencies": [
                29,
                234,
                303,
                1126
              ],
              "contractKind": "contract",
              "documentation": "@title This contract holds information about claims made by COA members\n@dev this was originally based on EIP780 Ethereum Claims Registry https://github.com/ethereum/EIPs/issues/780\n     but with current version more based on EIP1812 Ethereum Verifiable Claims\n     https://eips.ethereum.org/EIPS/eip-1812, on which the user is not the sender of the tx but only part of\n     it through a signature",
              "fullyImplemented": true,
              "id": 779,
              "linearizedBaseContracts": [
                779,
                234,
                29,
                303,
                1126
              ],
              "name": "ClaimsRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ClaimsRegistry.ClaimProposal",
                  "id": 327,
                  "members": [
                    {
                      "constant": false,
                      "id": 318,
                      "name": "proofHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "1043:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1043:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 320,
                      "name": "activityId",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "1069:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 319,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1069:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 322,
                      "name": "proposerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "1097:23:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 321,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1097:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 324,
                      "name": "proposerEmail",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "1130:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 323,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1130:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 326,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 327,
                      "src": "1237:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 325,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1237:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "ClaimProposal",
                  "nodeType": "StructDefinition",
                  "scope": 779,
                  "src": "781:474:4",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ClaimsRegistry.ClaimAudit",
                  "id": 340,
                  "members": [
                    {
                      "constant": false,
                      "id": 329,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1350:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                        "typeString": "struct ClaimsRegistry.ClaimProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 328,
                        "name": "ClaimProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 327,
                        "src": "1350:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                          "typeString": "struct ClaimsRegistry.ClaimProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 331,
                      "name": "auditorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1382:22:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 330,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1382:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 333,
                      "name": "auditorEmail",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1414:19:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 332,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1414:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 335,
                      "name": "approved",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1443:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 334,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1443:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 337,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1543:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 336,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1543:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 339,
                      "name": "ipfsHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 340,
                      "src": "1564:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "ClaimAudit",
                  "nodeType": "StructDefinition",
                  "scope": 779,
                  "src": "1261:325:4",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 348,
                  "name": "registryProposedClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1682:103:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$_$",
                    "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal)))"
                  },
                  "typeName": {
                    "id": 347,
                    "keyType": {
                      "id": 341,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1690:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1682:73:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$_$",
                      "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal)))"
                    },
                    "valueType": {
                      "id": 346,
                      "keyType": {
                        "id": 342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1709:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1701:53:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$",
                        "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal))"
                      },
                      "valueType": {
                        "id": 345,
                        "keyType": {
                          "id": 343,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1728:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1720:33:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$",
                          "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimProposal)"
                        },
                        "valueType": {
                          "contractScope": null,
                          "id": 344,
                          "name": "ClaimProposal",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 327,
                          "src": "1739:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                            "typeString": "struct ClaimsRegistry.ClaimProposal"
                          }
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 356,
                  "name": "registryAuditedClaims",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "1872:101:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                    "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit)))"
                  },
                  "typeName": {
                    "id": 355,
                    "keyType": {
                      "id": 349,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1880:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1872:70:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                      "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit)))"
                    },
                    "valueType": {
                      "id": 354,
                      "keyType": {
                        "id": 350,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1899:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1891:50:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$",
                        "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit))"
                      },
                      "valueType": {
                        "id": 353,
                        "keyType": {
                          "id": 351,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1918:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1910:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$",
                          "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimAudit)"
                        },
                        "valueType": {
                          "contractScope": null,
                          "id": 352,
                          "name": "ClaimAudit",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 340,
                          "src": "1929:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimAudit_$340_storage_ptr",
                            "typeString": "struct ClaimsRegistry.ClaimAudit"
                          }
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 368,
                    "nodeType": "Block",
                    "src": "2029:47:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 364,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "2058:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 365,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2058:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 361,
                              "name": "Ownable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "2039:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Ownable_$234_$",
                                "typeString": "type(contract Ownable)"
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "2039:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2039:30:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "2039:30:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 369,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 359,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 358,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "2017:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2017:11:4"
                    }
                  ],
                  "name": "registryInitialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 357,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2007:2:4"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2029:0:4"
                  },
                  "scope": 779,
                  "src": "1980:96:4",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 425,
                    "nodeType": "Block",
                    "src": "2338:758:4",
                    "statements": [
                      {
                        "assignments": [
                          387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 387,
                            "name": "proposerAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 425,
                            "src": "2403:23:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2403:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 399,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 391,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 371,
                                  "src": "2501:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 392,
                                  "name": "_claimHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 373,
                                  "src": "2513:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 393,
                                  "name": "_proofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 375,
                                  "src": "2525:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 394,
                                  "name": "_activityId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 377,
                                  "src": "2537:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 395,
                                  "name": "_proposerEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 379,
                                  "src": "2550:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 390,
                                "name": "hashProposedClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 741,
                                "src": "2483:17:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256,bytes32,string memory,uint256,string memory) pure returns (bytes32)"
                                }
                              },
                              "id": 396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2483:82:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 397,
                              "name": "_authorizationSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "2583:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 388,
                              "name": "SignatureVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "2441:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$1228_$",
                                "typeString": "type(library SignatureVerifier)"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1227,
                            "src": "2441:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2441:179:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2403:217:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 400,
                                  "name": "registryProposedClaims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 348,
                                  "src": "2666:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref)))"
                                  }
                                },
                                "id": 404,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 401,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 371,
                                  "src": "2689:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2666:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref))"
                                }
                              },
                              "id": 405,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 402,
                                "name": "proposerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "2701:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2666:51:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$",
                                "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref)"
                              }
                            },
                            "id": 406,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "2718:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2666:63:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimProposal_$327_storage",
                              "typeString": "struct ClaimsRegistry.ClaimProposal storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 408,
                                "name": "_proofHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 375,
                                "src": "2771:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 409,
                                "name": "_activityId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 377,
                                "src": "2807:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 410,
                                "name": "proposerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "2849:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 411,
                                "name": "_proposerEmail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "2893:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2929:4:4",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 407,
                              "name": "ClaimProposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 327,
                              "src": "2732:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ClaimProposal_$327_storage_ptr_$",
                                "typeString": "type(struct ClaimsRegistry.ClaimProposal storage pointer)"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "proofHash",
                              "activityId",
                              "proposerAddress",
                              "proposerEmail",
                              "exists"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "2732:212:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimProposal_$327_memory",
                              "typeString": "struct ClaimsRegistry.ClaimProposal memory"
                            }
                          },
                          "src": "2666:278:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimProposal_$327_storage",
                            "typeString": "struct ClaimsRegistry.ClaimProposal storage ref"
                          }
                        },
                        "id": 415,
                        "nodeType": "ExpressionStatement",
                        "src": "2666:278:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 417,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "3019:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 418,
                              "name": "proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "3031:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 419,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "3048:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "_proofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "3060:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 421,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "3072:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 422,
                              "name": "_activityId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 377,
                              "src": "3077:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 416,
                            "name": "ClaimProposed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1047,
                            "src": "3005:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,bytes32,string memory,uint256,uint256)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3005:84:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "EmitStatement",
                        "src": "3000:89:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 426,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 384,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 383,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2328:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2328:9:4"
                    }
                  ],
                  "name": "proposeClaim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 382,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2113:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2113:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 373,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2141:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2141:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 375,
                        "name": "_proofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2169:26:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2169:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 377,
                        "name": "_activityId",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2205:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 376,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2205:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 379,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2234:30:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 378,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2234:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 381,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2274:38:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 380,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2274:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2103:215:4"
                  },
                  "returnParameters": {
                    "id": 385,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2338:0:4"
                  },
                  "scope": 779,
                  "src": "2082:1014:4",
                  "stateMutability": "nonpayable",
                  "superFunction": 1078,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 456,
                    "nodeType": "Block",
                    "src": "3417:269:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 428,
                              "src": "3463:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 430,
                              "src": "3487:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 448,
                              "name": "_proposalProofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 432,
                              "src": "3511:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 449,
                              "name": "_auditIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "3543:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 450,
                              "name": "_proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 436,
                              "src": "3571:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 451,
                              "name": "_auditorEmail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "3601:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "74727565",
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3628:4:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "argumentTypes": null,
                              "id": 453,
                              "name": "_authorizationSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "3646:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 445,
                            "name": "submitClaimAuditResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "3427:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes32,string memory,string memory,address,string memory,bool,bytes memory)"
                            }
                          },
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3427:252:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "3427:252:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 457,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 443,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 442,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "3407:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3407:9:4"
                    }
                  ],
                  "name": "submitClaimApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 428,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3140:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 427,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3140:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 430,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3168:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 429,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 432,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3196:34:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 431,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3196:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 434,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3240:30:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3240:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3280:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3280:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3314:29:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3353:38:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3353:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3130:267:4"
                  },
                  "returnParameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3417:0:4"
                  },
                  "scope": 779,
                  "src": "3102:584:4",
                  "stateMutability": "nonpayable",
                  "superFunction": 1095,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 487,
                    "nodeType": "Block",
                    "src": "4008:270:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 477,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 459,
                              "src": "4054:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 478,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "4078:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 479,
                              "name": "_proposalProofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "4102:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 480,
                              "name": "_auditIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 465,
                              "src": "4134:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 481,
                              "name": "_proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 467,
                              "src": "4162:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 482,
                              "name": "_auditorEmail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 469,
                              "src": "4192:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4219:5:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "argumentTypes": null,
                              "id": 484,
                              "name": "_authorizationSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 471,
                              "src": "4238:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 476,
                            "name": "submitClaimAuditResult",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 594,
                            "src": "4018:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,bytes32,string memory,string memory,address,string memory,bool,bytes memory)"
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4018:253:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 486,
                        "nodeType": "ExpressionStatement",
                        "src": "4018:253:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 488,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 474,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 473,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "3998:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3998:9:4"
                    }
                  ],
                  "name": "submitClaimRejection",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 459,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3731:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3759:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3759:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3787:34:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3787:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 465,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3831:30:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3831:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 467,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3871:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 466,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3871:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 469,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3905:29:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 468,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3905:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 471,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 488,
                        "src": "3944:38:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3944:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3721:267:4"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4008:0:4"
                  },
                  "scope": 779,
                  "src": "3692:586:4",
                  "stateMutability": "nonpayable",
                  "superFunction": 1112,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "4813:1653:4",
                    "statements": [
                      {
                        "assignments": [
                          510
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 510,
                            "name": "auditorAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 593,
                            "src": "4877:22:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 509,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4877:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 524,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 514,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 490,
                                  "src": "4998:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 515,
                                  "name": "_claimHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "5030:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 516,
                                  "name": "_proposalProofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 494,
                                  "src": "5062:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 517,
                                  "name": "_auditIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "5102:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 518,
                                  "name": "_proposerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 498,
                                  "src": "5138:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 519,
                                  "name": "_auditorEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 500,
                                  "src": "5176:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 520,
                                  "name": "_approved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 502,
                                  "src": "5211:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "id": 513,
                                "name": "hashClaimAuditResult",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 774,
                                "src": "4956:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256,bytes32,string memory,string memory,address,string memory,bool) pure returns (bytes32)"
                                }
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4956:282:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 522,
                              "name": "_authorizationSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "5256:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 511,
                              "name": "SignatureVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "4914:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$1228_$",
                                "typeString": "type(library SignatureVerifier)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1227,
                            "src": "4914:24:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4914:379:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4877:416:4"
                      },
                      {
                        "assignments": [
                          526
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 526,
                            "name": "proposedClaim",
                            "nodeType": "VariableDeclaration",
                            "scope": 593,
                            "src": "5335:35:4",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                              "typeString": "struct ClaimsRegistry.ClaimProposal"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 525,
                              "name": "ClaimProposal",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 327,
                              "src": "5335:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                "typeString": "struct ClaimsRegistry.ClaimProposal"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 534,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 527,
                                "name": "registryProposedClaims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 348,
                                "src": "5373:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref)))"
                                }
                              },
                              "id": 529,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 528,
                                "name": "_projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 490,
                                "src": "5396:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5373:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref))"
                              }
                            },
                            "id": 531,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 530,
                              "name": "_proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 498,
                              "src": "5408:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5373:52:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimProposal_$327_storage_$",
                              "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimProposal storage ref)"
                            }
                          },
                          "id": 533,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 532,
                            "name": "_claimHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "5426:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5373:64:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimProposal_$327_storage",
                            "typeString": "struct ClaimsRegistry.ClaimProposal storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5335:102:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 536,
                                "name": "proposedClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "5455:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                }
                              },
                              "id": 537,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 326,
                              "src": "5455:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436c61696d207761736e27742070726f706f736564",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5477:23:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_56d3a11fc59841844467f0623e6bd14b65ca182c9df71c130e46ad63f4595e52",
                                "typeString": "literal_string \"Claim wasn't proposed\""
                              },
                              "value": "Claim wasn't proposed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_56d3a11fc59841844467f0623e6bd14b65ca182c9df71c130e46ad63f4595e52",
                                "typeString": "literal_string \"Claim wasn't proposed\""
                              }
                            ],
                            "id": 535,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "5447:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5447:54:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "5447:54:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 544,
                                    "name": "proposedClaim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 526,
                                    "src": "5553:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                      "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                    }
                                  },
                                  "id": 545,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "proofHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 318,
                                  "src": "5553:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 546,
                                  "name": "_proposalProofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 494,
                                  "src": "5578:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 542,
                                  "name": "StringUtils",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "5532:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StringUtils_$1267_$",
                                    "typeString": "type(library StringUtils)"
                                  }
                                },
                                "id": 543,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "areEqual",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1266,
                                "src": "5532:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (string memory,string memory) pure returns (bool)"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5532:65:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436c61696d2070726f706f73616c2068617320646966666572656e742070726f6f662068617368207468616e206578706563746564",
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5611:55:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5716a8e50a4c15550963c88437bfd40dfd4fbe4abeb316d07fb17b1860c82f87",
                                "typeString": "literal_string \"Claim proposal has different proof hash than expected\""
                              },
                              "value": "Claim proposal has different proof hash than expected"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5716a8e50a4c15550963c88437bfd40dfd4fbe4abeb316d07fb17b1860c82f87",
                                "typeString": "literal_string \"Claim proposal has different proof hash than expected\""
                              }
                            ],
                            "id": 541,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "5511:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5511:165:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 550,
                        "nodeType": "ExpressionStatement",
                        "src": "5511:165:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5707:69:4",
                              "subExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 552,
                                        "name": "registryAuditedClaims",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 356,
                                        "src": "5708:21:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                                          "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)))"
                                        }
                                      },
                                      "id": 554,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 553,
                                        "name": "_projectId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 490,
                                        "src": "5730:10:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "5708:33:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$",
                                        "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref))"
                                      }
                                    },
                                    "id": 556,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 555,
                                      "name": "auditorAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 510,
                                      "src": "5742:14:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5708:49:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$",
                                      "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)"
                                    }
                                  },
                                  "id": 558,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 557,
                                    "name": "_claimHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 492,
                                    "src": "5758:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5708:61:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_storage",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit storage ref"
                                  }
                                },
                                "id": 559,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exists",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 337,
                                "src": "5708:68:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "41756469746f7220616c72656164792061756469746564207468697320636c61696d",
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5790:36:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_16243ca3010af4268d094b4ba46f2033ffc321723e5136916af8afec27e89beb",
                                "typeString": "literal_string \"Auditor already audited this claim\""
                              },
                              "value": "Auditor already audited this claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_16243ca3010af4268d094b4ba46f2033ffc321723e5136916af8afec27e89beb",
                                "typeString": "literal_string \"Auditor already audited this claim\""
                              }
                            ],
                            "id": 551,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "5686:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5686:150:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 563,
                        "nodeType": "ExpressionStatement",
                        "src": "5686:150:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 564,
                                  "name": "registryAuditedClaims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 356,
                                  "src": "5881:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)))"
                                  }
                                },
                                "id": 568,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 565,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 490,
                                  "src": "5903:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5881:33:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$",
                                  "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref))"
                                }
                              },
                              "id": 569,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 566,
                                "name": "auditorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5915:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5881:49:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$",
                                "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)"
                              }
                            },
                            "id": 570,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "5931:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5881:61:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimAudit_$340_storage",
                              "typeString": "struct ClaimsRegistry.ClaimAudit storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 572,
                                "name": "proposedClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "5980:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 573,
                                "name": "_auditIpfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 496,
                                "src": "6017:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 574,
                                "name": "auditorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "6061:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 575,
                                "name": "_auditorEmail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 500,
                                "src": "6103:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 576,
                                "name": "_approved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 502,
                                "src": "6140:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6171:4:4",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 571,
                              "name": "ClaimAudit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 340,
                              "src": "5945:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ClaimAudit_$340_storage_ptr_$",
                                "typeString": "type(struct ClaimsRegistry.ClaimAudit storage pointer)"
                              }
                            },
                            "id": 578,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "proposal",
                              "ipfsHash",
                              "auditorAddress",
                              "auditorEmail",
                              "approved",
                              "exists"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "5945:241:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimAudit_$340_memory",
                              "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                            }
                          },
                          "src": "5881:305:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimAudit_$340_storage",
                            "typeString": "struct ClaimsRegistry.ClaimAudit storage ref"
                          }
                        },
                        "id": 580,
                        "nodeType": "ExpressionStatement",
                        "src": "5881:305:4"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 582,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 490,
                              "src": "6272:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 583,
                              "name": "auditorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "6296:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 584,
                              "name": "_claimHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 492,
                              "src": "6324:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 585,
                              "name": "_approved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "6348:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 586,
                                "name": "proposedClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "6371:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                }
                              },
                              "id": 587,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proofHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 318,
                              "src": "6371:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 588,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "6408:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 589,
                                "name": "proposedClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 526,
                                "src": "6425:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_storage_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal storage pointer"
                                }
                              },
                              "id": 590,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "activityId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 320,
                              "src": "6425:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 581,
                            "name": "ClaimAudited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1063,
                            "src": "6246:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes32_$_t_bool_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,address,bytes32,bool,string memory,uint256,uint256)"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6246:213:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 592,
                        "nodeType": "EmitStatement",
                        "src": "6241:218:4"
                      }
                    ]
                  },
                  "documentation": "@dev This funciton was kept internal with 2 ways of calling to reduce the parameters of the external functions\n      For some reason 8 parameters causes the 0.5.8 compiler to fail",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 507,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 506,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "4803:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4803:9:4"
                    }
                  ],
                  "name": "submitClaimAuditResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 490,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4520:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 489,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4520:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4548:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4548:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 494,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4576:32:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4576:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4618:28:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4618:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 498,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4656:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 497,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4656:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 500,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4690:27:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4690:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 502,
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4727:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4727:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "4751:36:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4751:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4510:283:4"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4813:0:4"
                  },
                  "scope": 779,
                  "src": "4479:1987:4",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 651,
                    "nodeType": "Block",
                    "src": "6630:451:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 608,
                                  "name": "_auditors",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 599,
                                  "src": "6648:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6648:16:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 610,
                                  "name": "_claims",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 602,
                                  "src": "6668:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                    "typeString": "bytes32[] calldata"
                                  }
                                },
                                "id": 611,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6668:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6648:34:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "617272617973206d75737420626520657175616c2073697a65",
                              "id": 613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6684:27:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_854527e3f34fd90a907518201e155913ba9b279bb2fd6cde3170c1ff5f7341fe",
                                "typeString": "literal_string \"arrays must be equal size\""
                              },
                              "value": "arrays must be equal size"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_854527e3f34fd90a907518201e155913ba9b279bb2fd6cde3170c1ff5f7341fe",
                                "typeString": "literal_string \"arrays must be equal size\""
                              }
                            ],
                            "id": 607,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "6640:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6640:72:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 615,
                        "nodeType": "ExpressionStatement",
                        "src": "6640:72:4"
                      },
                      {
                        "body": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "6767:287:4",
                          "statements": [
                            {
                              "assignments": [
                                628
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 628,
                                  "name": "claim",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 647,
                                  "src": "6781:23:4",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 627,
                                    "name": "ClaimAudit",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 340,
                                    "src": "6781:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimAudit_$340_storage_ptr",
                                      "typeString": "struct ClaimsRegistry.ClaimAudit"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 640,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 629,
                                      "name": "registryAuditedClaims",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 356,
                                      "src": "6807:21:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                                        "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)))"
                                      }
                                    },
                                    "id": 631,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 630,
                                      "name": "_projectId",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 596,
                                      "src": "6829:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6807:33:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$",
                                      "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref))"
                                    }
                                  },
                                  "id": 635,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 632,
                                      "name": "_auditors",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 599,
                                      "src": "6841:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 634,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 633,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 617,
                                      "src": "6851:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6841:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6807:47:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$",
                                    "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)"
                                  }
                                },
                                "id": 639,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 636,
                                    "name": "_claims",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 602,
                                    "src": "6855:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                      "typeString": "bytes32[] calldata"
                                    }
                                  },
                                  "id": 638,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 637,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 617,
                                    "src": "6863:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6855:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6807:59:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_storage",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6781:85:4"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "id": 643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "7014:15:4",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 641,
                                    "name": "claim",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 628,
                                    "src": "7015:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                      "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                    }
                                  },
                                  "id": 642,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approved",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 335,
                                  "src": "7015:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 646,
                              "nodeType": "IfStatement",
                              "src": "7010:33:4",
                              "trueBody": {
                                "expression": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 644,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7038:5:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "functionReturnParameters": 606,
                                "id": 645,
                                "nodeType": "Return",
                                "src": "7031:12:4"
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 620,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "6742:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 621,
                              "name": "_claims",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 602,
                              "src": "6746:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                                "typeString": "bytes32[] calldata"
                              }
                            },
                            "id": 622,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6746:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6742:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "initializationExpression": {
                          "assignments": [
                            617
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 617,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 648,
                              "src": "6727:9:4",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 616,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6727:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 619,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6739:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "6727:13:4"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "6762:3:4",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 624,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "6762:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 626,
                          "nodeType": "ExpressionStatement",
                          "src": "6762:3:4"
                        },
                        "nodeType": "ForStatement",
                        "src": "6722:332:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7070:4:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 606,
                        "id": 650,
                        "nodeType": "Return",
                        "src": "7063:11:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 652,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "areApproved",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 596,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6502:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6502:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "name": "_auditors",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6530:28:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 597,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6530:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 598,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6530:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "name": "_claims",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6568:26:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 600,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6568:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 601,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6568:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6492:108:4"
                  },
                  "returnParameters": {
                    "id": 606,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "6624:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6624:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6623:6:4"
                  },
                  "scope": 779,
                  "src": "6472:609:4",
                  "stateMutability": "view",
                  "superFunction": 1125,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 713,
                    "nodeType": "Block",
                    "src": "7863:494:4",
                    "statements": [
                      {
                        "assignments": [
                          680
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 680,
                            "name": "claimAudit",
                            "nodeType": "VariableDeclaration",
                            "scope": 713,
                            "src": "7873:28:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                              "typeString": "struct ClaimsRegistry.ClaimAudit"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 679,
                              "name": "ClaimAudit",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 340,
                              "src": "7873:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimAudit_$340_storage_ptr",
                                "typeString": "struct ClaimsRegistry.ClaimAudit"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 688,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 681,
                                "name": "registryAuditedClaims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 356,
                                "src": "7904:21:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)))"
                                }
                              },
                              "id": 683,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 682,
                                "name": "_projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 654,
                                "src": "7926:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7904:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$_$",
                                "typeString": "mapping(address => mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref))"
                              }
                            },
                            "id": 685,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 684,
                              "name": "_auditorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 656,
                              "src": "7938:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7904:50:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ClaimAudit_$340_storage_$",
                              "typeString": "mapping(bytes32 => struct ClaimsRegistry.ClaimAudit storage ref)"
                            }
                          },
                          "id": 687,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 686,
                            "name": "_claimHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 658,
                            "src": "7955:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7904:62:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimAudit_$340_storage",
                            "typeString": "struct ClaimsRegistry.ClaimAudit storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7873:93:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 689,
                                  "name": "claimAudit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 680,
                                  "src": "7998:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                  }
                                },
                                "id": 690,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 329,
                                "src": "7998:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_memory",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal memory"
                                }
                              },
                              "id": 691,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proofHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 318,
                              "src": "7998:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 692,
                                  "name": "claimAudit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 680,
                                  "src": "8041:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                  }
                                },
                                "id": 693,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 329,
                                "src": "8041:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_memory",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal memory"
                                }
                              },
                              "id": 694,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "activityId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 320,
                              "src": "8041:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 695,
                                  "name": "claimAudit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 680,
                                  "src": "8085:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                  }
                                },
                                "id": 696,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 329,
                                "src": "8085:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_memory",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal memory"
                                }
                              },
                              "id": 697,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposerAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 322,
                              "src": "8085:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 698,
                                  "name": "claimAudit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 680,
                                  "src": "8134:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                    "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                  }
                                },
                                "id": 699,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "proposal",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 329,
                                "src": "8134:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimProposal_$327_memory",
                                  "typeString": "struct ClaimsRegistry.ClaimProposal memory"
                                }
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "proposerEmail",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 324,
                              "src": "8134:33:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 701,
                                "name": "claimAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "8181:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                }
                              },
                              "id": 702,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "exists",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 337,
                              "src": "8181:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 703,
                                "name": "claimAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "8212:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                }
                              },
                              "id": 704,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "auditorAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 331,
                              "src": "8212:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 705,
                                "name": "claimAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "8251:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "auditorEmail",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 333,
                              "src": "8251:23:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 707,
                                "name": "claimAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "8288:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                }
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 335,
                              "src": "8288:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 709,
                                "name": "claimAudit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 680,
                                "src": "8321:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ClaimAudit_$340_memory_ptr",
                                  "typeString": "struct ClaimsRegistry.ClaimAudit memory"
                                }
                              },
                              "id": 710,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ipfsHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 339,
                              "src": "8321:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "id": 711,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7984:366:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_string_memory_$_t_uint256_$_t_address_$_t_string_memory_$_t_bool_$_t_address_$_t_string_memory_$_t_bool_$_t_string_memory_$",
                            "typeString": "tuple(string memory,uint256,address,string memory,bool,address,string memory,bool,string memory)"
                          }
                        },
                        "functionReturnParameters": 678,
                        "id": 712,
                        "nodeType": "Return",
                        "src": "7977:373:4"
                      }
                    ]
                  },
                  "documentation": "@notice Returns the audit information of a claim\n@dev This function was created as structs inside structs are not supported for the contract's public interface\n@param _projectId - the id of the project the queried claim belongs to.\n@param _auditorAddress - the auditor of the queried claim.\n@param _claimHash - the has of the queried claim.",
                  "id": 714,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getClaimAudit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 654,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7511:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7511:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 656,
                        "name": "_auditorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7539:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 655,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7539:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 658,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7572:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7572:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7501:95:4"
                  },
                  "returnParameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7655:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7655:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7682:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7682:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7703:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7703:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 667,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7724:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7724:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7751:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7751:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7769:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7769:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 673,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7790:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7790:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 675,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7817:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 674,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7817:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 677,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 714,
                        "src": "7835:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7835:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7641:217:4"
                  },
                  "scope": 779,
                  "src": "7479:878:4",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 740,
                    "nodeType": "Block",
                    "src": "8585:110:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 732,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 716,
                                  "src": "8623:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 733,
                                  "name": "_claimHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 718,
                                  "src": "8635:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 734,
                                  "name": "_proofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 720,
                                  "src": "8647:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 735,
                                  "name": "_activityId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 722,
                                  "src": "8659:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 736,
                                  "name": "_proposerEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 724,
                                  "src": "8672:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 730,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1410,
                                  "src": "8612:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8612:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8612:75:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 729,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "8602:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8602:86:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 728,
                        "id": 739,
                        "nodeType": "Return",
                        "src": "8595:93:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 741,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashProposedClaim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8399:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8399:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8427:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "name": "_proofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8455:24:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8455:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 722,
                        "name": "_activityId",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8489:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8489:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 724,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8518:28:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8518:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8389:163:4"
                  },
                  "returnParameters": {
                    "id": 728,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 727,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 741,
                        "src": "8576:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 726,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8576:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8575:9:4"
                  },
                  "scope": 779,
                  "src": "8363:332:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 773,
                    "nodeType": "Block",
                    "src": "9000:349:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 763,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 743,
                                  "src": "9088:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 764,
                                  "name": "_claimHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 745,
                                  "src": "9120:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 765,
                                  "name": "_proposalProofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 747,
                                  "src": "9152:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 766,
                                  "name": "_auditIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 749,
                                  "src": "9192:14:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 767,
                                  "name": "_proposerAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 751,
                                  "src": "9228:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 768,
                                  "name": "_auditorEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 753,
                                  "src": "9266:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 769,
                                  "name": "_approved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 755,
                                  "src": "9301:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 761,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1410,
                                  "src": "9056:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 762,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "9056:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9056:272:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 760,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "9029:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9029:313:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 759,
                        "id": 772,
                        "nodeType": "Return",
                        "src": "9010:332:4"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 774,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashClaimAuditResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 743,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8740:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 742,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 745,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8768:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 744,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8768:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 747,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8796:32:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8796:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 749,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8838:28:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 748,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8838:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 751,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8876:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8876:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 753,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8910:27:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 752,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8910:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8947:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 754,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8947:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8730:237:4"
                  },
                  "returnParameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 758,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 774,
                        "src": "8991:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 757,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8991:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8990:9:4"
                  },
                  "scope": 779,
                  "src": "8701:648:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 778,
                  "name": "_gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 779,
                  "src": "9355:24:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 775,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9355:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 777,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9363:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "9355:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 780,
              "src": "708:8674:4"
            }
          ],
          "src": "0:9383:4"
        },
        "id": 4
      },
      "src/contracts/ProjectsRegistry.sol": {
        "ast": {
          "absolutePath": "src/contracts/ProjectsRegistry.sol",
          "exportedSymbols": {
            "ProjectsRegistry": [
              1031
            ]
          },
          "id": 1032,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 781,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
              "file": "@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol",
              "id": 782,
              "nodeType": "ImportDirective",
              "scope": 1032,
              "sourceUnit": 235,
              "src": "25:82:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "id": 783,
              "nodeType": "ImportDirective",
              "scope": 1032,
              "sourceUnit": 304,
              "src": "108:60:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/SignatureVerifier.sol",
              "file": "./utils/SignatureVerifier.sol",
              "id": 784,
              "nodeType": "ImportDirective",
              "scope": 1032,
              "sourceUnit": 1229,
              "src": "169:39:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/StringUtils.sol",
              "file": "./utils/StringUtils.sol",
              "id": 785,
              "nodeType": "ImportDirective",
              "scope": 1032,
              "sourceUnit": 1268,
              "src": "209:33:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/interfaces/IProjectsRegistry.sol",
              "file": "./interfaces/IProjectsRegistry.sol",
              "id": 786,
              "nodeType": "ImportDirective",
              "scope": 1032,
              "sourceUnit": 1192,
              "src": "243:44:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 787,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 303,
                    "src": "372:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$303",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 788,
                  "nodeType": "InheritanceSpecifier",
                  "src": "372:13:5"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 789,
                    "name": "Ownable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 234,
                    "src": "387:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ownable_$234",
                      "typeString": "contract Ownable"
                    }
                  },
                  "id": 790,
                  "nodeType": "InheritanceSpecifier",
                  "src": "387:7:5"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 791,
                    "name": "IProjectsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1191,
                    "src": "396:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IProjectsRegistry_$1191",
                      "typeString": "contract IProjectsRegistry"
                    }
                  },
                  "id": 792,
                  "nodeType": "InheritanceSpecifier",
                  "src": "396:17:5"
                }
              ],
              "contractDependencies": [
                29,
                234,
                303,
                1191
              ],
              "contractKind": "contract",
              "documentation": "@title Stores projects related information",
              "fullyImplemented": true,
              "id": 1031,
              "linearizedBaseContracts": [
                1031,
                1191,
                234,
                29,
                303
              ],
              "name": "ProjectsRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ProjectsRegistry.ProjectDescription",
                  "id": 803,
                  "members": [
                    {
                      "constant": false,
                      "id": 794,
                      "name": "proposalIpfsHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "738:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 793,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 796,
                      "name": "authorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "820:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "820:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 798,
                      "name": "authorEmail",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "898:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "898:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 800,
                      "name": "isCreated",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "1003:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1003:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 802,
                      "name": "auditIpfsHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 803,
                      "src": "1133:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 801,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1133:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "ProjectDescription",
                  "nodeType": "StructDefinition",
                  "scope": 1031,
                  "src": "641:519:5",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 806,
                  "name": "projectIds",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "1193:27:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 804,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 805,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1193:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 812,
                  "name": "pendingEdits",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "1319:78:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$_$",
                    "typeString": "mapping(uint256 => mapping(address => struct ProjectsRegistry.ProjectDescription))"
                  },
                  "typeName": {
                    "id": 811,
                    "keyType": {
                      "id": 807,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1327:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1319:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$_$",
                      "typeString": "mapping(uint256 => mapping(address => struct ProjectsRegistry.ProjectDescription))"
                    },
                    "valueType": {
                      "id": 810,
                      "keyType": {
                        "id": 808,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1346:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1338:38:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$",
                        "typeString": "mapping(address => struct ProjectsRegistry.ProjectDescription)"
                      },
                      "valueType": {
                        "contractScope": null,
                        "id": 809,
                        "name": "ProjectDescription",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 803,
                        "src": "1357:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                          "typeString": "struct ProjectsRegistry.ProjectDescription"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 816,
                  "name": "projectsDescription",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "1474:65:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                    "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription)"
                  },
                  "typeName": {
                    "id": 815,
                    "keyType": {
                      "id": 813,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1482:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1474:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                      "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription)"
                    },
                    "valueType": {
                      "contractScope": null,
                      "id": 814,
                      "name": "ProjectDescription",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 803,
                      "src": "1493:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                        "typeString": "struct ProjectsRegistry.ProjectDescription"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "1595:47:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 824,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "1624:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1624:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 821,
                              "name": "Ownable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "1605:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Ownable_$234_$",
                                "typeString": "type(contract Ownable)"
                              }
                            },
                            "id": 823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 145,
                            "src": "1605:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1605:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "1605:30:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 829,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 819,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 818,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 278,
                        "src": "1583:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1583:11:5"
                    }
                  ],
                  "name": "registryInitialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 817,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1573:2:5"
                  },
                  "returnParameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1595:0:5"
                  },
                  "scope": 1031,
                  "src": "1546:96:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "1752:610:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1801:42:5",
                              "subExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 839,
                                    "name": "projectsDescription",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 816,
                                    "src": "1802:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                                      "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription storage ref)"
                                    }
                                  },
                                  "id": 841,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 840,
                                    "name": "_projectId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 831,
                                    "src": "1822:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1802:31:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                                    "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                                  }
                                },
                                "id": 842,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isCreated",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 800,
                                "src": "1802:41:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652070726f6a65637420697320616c72656164792063726561746564",
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1845:32:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_774f8620f64ccbd12531c1db4d1dc3a86b3f081cd11cd87d97255e1f88236430",
                                "typeString": "literal_string \"The project is already created\""
                              },
                              "value": "The project is already created"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_774f8620f64ccbd12531c1db4d1dc3a86b3f081cd11cd87d97255e1f88236430",
                                "typeString": "literal_string \"The project is already created\""
                              }
                            ],
                            "id": 838,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "1793:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1793:85:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "1793:85:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 847,
                              "name": "projectsDescription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 816,
                              "src": "1937:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                                "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription storage ref)"
                              }
                            },
                            "id": 849,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 848,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 831,
                              "src": "1957:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1937:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                              "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 851,
                                "name": "_initialProposalIpfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 833,
                                "src": "2022:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 852,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2075:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 853,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1423,
                                  "src": "2106:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 854,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2106:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2143:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2170:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 850,
                              "name": "ProjectDescription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "1971:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ProjectDescription_$803_storage_ptr_$",
                                "typeString": "type(struct ProjectsRegistry.ProjectDescription storage pointer)"
                              }
                            },
                            "id": 857,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "proposalIpfsHash",
                              "auditIpfsHash",
                              "authorAddress",
                              "authorEmail",
                              "isCreated"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "1971:214:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_memory",
                              "typeString": "struct ProjectsRegistry.ProjectDescription memory"
                            }
                          },
                          "src": "1937:248:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                            "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "1937:248:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 863,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 831,
                              "src": "2254:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 860,
                              "name": "projectIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 806,
                              "src": "2238:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2238:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2238:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 865,
                        "nodeType": "ExpressionStatement",
                        "src": "2238:27:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 867,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 831,
                              "src": "2318:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 868,
                              "name": "_initialProposalIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 833,
                              "src": "2330:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 866,
                            "name": "ProjectCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "2303:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory)"
                            }
                          },
                          "id": 869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2303:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 870,
                        "nodeType": "EmitStatement",
                        "src": "2298:57:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 872,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 836,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 835,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "1742:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1742:9:5"
                    }
                  ],
                  "name": "createProject",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 834,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 831,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "1671:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1671:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 833,
                        "name": "_initialProposalIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 872,
                        "src": "1691:40:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1691:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1670:62:5"
                  },
                  "returnParameters": {
                    "id": 837,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1752:0:5"
                  },
                  "scope": 1031,
                  "src": "1648:714:5",
                  "stateMutability": "nonpayable",
                  "superFunction": 1161,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 925,
                    "nodeType": "Block",
                    "src": "2580:814:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 886,
                                  "name": "projectsDescription",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 816,
                                  "src": "2629:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                                    "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription storage ref)"
                                  }
                                },
                                "id": 888,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 887,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 874,
                                  "src": "2649:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2629:31:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                                  "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                                }
                              },
                              "id": 889,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isCreated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 800,
                              "src": "2629:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "50726f6a656374206265696e672065646974656420646f65736e2774206578697374",
                              "id": 890,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2672:36:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6715592bd5897a3844eab6fd784012a93486e2e0aa535bdad8a7c37e0839570b",
                                "typeString": "literal_string \"Project being edited doesn't exist\""
                              },
                              "value": "Project being edited doesn't exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6715592bd5897a3844eab6fd784012a93486e2e0aa535bdad8a7c37e0839570b",
                                "typeString": "literal_string \"Project being edited doesn't exist\""
                              }
                            ],
                            "id": 885,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "2621:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2621:88:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 892,
                        "nodeType": "ExpressionStatement",
                        "src": "2621:88:5"
                      },
                      {
                        "assignments": [
                          894
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 894,
                            "name": "proposerAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 925,
                            "src": "2756:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 893,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2756:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 904,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 898,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 874,
                                  "src": "2853:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 899,
                                  "name": "_proposedIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 876,
                                  "src": "2865:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 900,
                                  "name": "_proposerEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 878,
                                  "src": "2884:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 897,
                                "name": "hashProposedEdit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1026,
                                "src": "2836:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256,string memory,string memory) pure returns (bytes32)"
                                }
                              },
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2836:63:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 902,
                              "name": "_authorizationSignature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "2917:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 895,
                              "name": "SignatureVerifier",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1228,
                              "src": "2794:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_SignatureVerifier_$1228_$",
                                "typeString": "type(library SignatureVerifier)"
                              }
                            },
                            "id": 896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1227,
                            "src": "2794:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2794:160:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2756:198:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 905,
                                "name": "pendingEdits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "3014:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct ProjectsRegistry.ProjectDescription storage ref))"
                                }
                              },
                              "id": 908,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 906,
                                "name": "_projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 874,
                                "src": "3027:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3014:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$",
                                "typeString": "mapping(address => struct ProjectsRegistry.ProjectDescription storage ref)"
                              }
                            },
                            "id": 909,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 907,
                              "name": "proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "3039:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3014:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                              "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 911,
                                "name": "_proposedIpfsHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 876,
                                "src": "3109:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "",
                                "id": 912,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3155:2:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              },
                              {
                                "argumentTypes": null,
                                "id": 913,
                                "name": "proposerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 894,
                                "src": "3186:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 914,
                                "name": "_proposerEmail",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 878,
                                "src": "3228:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 915,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3267:4:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_string_calldata_ptr",
                                  "typeString": "string calldata"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 910,
                              "name": "ProjectDescription",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 803,
                              "src": "3058:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_ProjectDescription_$803_storage_ptr_$",
                                "typeString": "type(struct ProjectsRegistry.ProjectDescription storage pointer)"
                              }
                            },
                            "id": 916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "proposalIpfsHash",
                              "auditIpfsHash",
                              "authorAddress",
                              "authorEmail",
                              "isCreated"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "3058:224:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_memory",
                              "typeString": "struct ProjectsRegistry.ProjectDescription memory"
                            }
                          },
                          "src": "3014:268:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                            "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                          }
                        },
                        "id": 918,
                        "nodeType": "ExpressionStatement",
                        "src": "3014:268:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 920,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 874,
                              "src": "3340:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 921,
                              "name": "proposerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 894,
                              "src": "3352:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 922,
                              "name": "_proposedIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 876,
                              "src": "3369:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 919,
                            "name": "ProjectEditProposed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1142,
                            "src": "3320:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,address,string memory)"
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3320:67:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 924,
                        "nodeType": "EmitStatement",
                        "src": "3315:72:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 926,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 883,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 882,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "2570:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2570:9:5"
                    }
                  ],
                  "name": "proposeProjectEdit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2405:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2405:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "name": "_proposedIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2433:33:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2433:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 878,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2476:30:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 877,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2476:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 880,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 926,
                        "src": "2516:38:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 879,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2516:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2395:165:5"
                  },
                  "returnParameters": {
                    "id": 884,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2580:0:5"
                  },
                  "scope": 1031,
                  "src": "2368:1026:5",
                  "stateMutability": "nonpayable",
                  "superFunction": 1172,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 995,
                    "nodeType": "Block",
                    "src": "3630:830:5",
                    "statements": [
                      {
                        "assignments": [
                          942
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 942,
                            "name": "proposedEdit",
                            "nodeType": "VariableDeclaration",
                            "scope": 995,
                            "src": "3671:39:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                              "typeString": "struct ProjectsRegistry.ProjectDescription"
                            },
                            "typeName": {
                              "contractScope": null,
                              "id": 941,
                              "name": "ProjectDescription",
                              "nodeType": "UserDefinedTypeName",
                              "referencedDeclaration": 803,
                              "src": "3671:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                                "typeString": "struct ProjectsRegistry.ProjectDescription"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 948,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 943,
                              "name": "pendingEdits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 812,
                              "src": "3713:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$_$",
                                "typeString": "mapping(uint256 => mapping(address => struct ProjectsRegistry.ProjectDescription storage ref))"
                              }
                            },
                            "id": 945,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 944,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "3726:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3713:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$",
                              "typeString": "mapping(address => struct ProjectsRegistry.ProjectDescription storage ref)"
                            }
                          },
                          "id": 947,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 946,
                            "name": "_authorAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 934,
                            "src": "3738:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3713:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                            "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3671:82:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 950,
                                "name": "proposedEdit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 942,
                                "src": "3771:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                                  "typeString": "struct ProjectsRegistry.ProjectDescription storage pointer"
                                }
                              },
                              "id": 951,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isCreated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 800,
                              "src": "3771:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652070656e64696e67206564697420646f65736e277420657869737473",
                              "id": 952,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3795:33:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f20d041b7e6e4cffef35d2f2d6c6970c30e69c758054e0592283165f74a3185f",
                                "typeString": "literal_string \"The pending edit doesn't exists\""
                              },
                              "value": "The pending edit doesn't exists"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f20d041b7e6e4cffef35d2f2d6c6970c30e69c758054e0592283165f74a3185f",
                                "typeString": "literal_string \"The pending edit doesn't exists\""
                              }
                            ],
                            "id": 949,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "3763:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3763:66:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 954,
                        "nodeType": "ExpressionStatement",
                        "src": "3763:66:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 958,
                                    "name": "proposedEdit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 942,
                                    "src": "3881:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                                      "typeString": "struct ProjectsRegistry.ProjectDescription storage pointer"
                                    }
                                  },
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "proposalIpfsHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 794,
                                  "src": "3881:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 960,
                                  "name": "_proposalIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 930,
                                  "src": "3912:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 956,
                                  "name": "StringUtils",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1267,
                                  "src": "3860:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_StringUtils_$1267_$",
                                    "typeString": "type(library StringUtils)"
                                  }
                                },
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "areEqual",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1266,
                                "src": "3860:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (string memory,string memory) pure returns (bool)"
                                }
                              },
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3860:70:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5468652070656e64696e67206564697420646f65736e2774206861766520746865206970667320686173682073656c6563746564",
                              "id": 962,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3944:54:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5558bd7615c52b7bd79cfc6d250b50a5a2321006019df4df8afe7221ca698046",
                                "typeString": "literal_string \"The pending edit doesn't have the ipfs hash selected\""
                              },
                              "value": "The pending edit doesn't have the ipfs hash selected"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5558bd7615c52b7bd79cfc6d250b50a5a2321006019df4df8afe7221ca698046",
                                "typeString": "literal_string \"The pending edit doesn't have the ipfs hash selected\""
                              }
                            ],
                            "id": 955,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "3839:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3839:169:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "3839:169:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 965,
                          "name": "_approved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 936,
                          "src": "4075:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "4071:143:5",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "4086:128:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 970,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 966,
                                    "name": "proposedEdit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 942,
                                    "src": "4100:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                                      "typeString": "struct ProjectsRegistry.ProjectDescription storage pointer"
                                    }
                                  },
                                  "id": 968,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "auditIpfsHash",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 802,
                                  "src": "4100:26:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 969,
                                  "name": "_auditIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 932,
                                  "src": "4129:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                },
                                "src": "4100:43:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              },
                              "id": 971,
                              "nodeType": "ExpressionStatement",
                              "src": "4100:43:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 972,
                                    "name": "projectsDescription",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 816,
                                    "src": "4157:19:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ProjectDescription_$803_storage_$",
                                      "typeString": "mapping(uint256 => struct ProjectsRegistry.ProjectDescription storage ref)"
                                    }
                                  },
                                  "id": 974,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 973,
                                    "name": "_projectId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "4177:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "4157:31:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                                    "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 975,
                                  "name": "proposedEdit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 942,
                                  "src": "4191:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ProjectDescription_$803_storage_ptr",
                                    "typeString": "struct ProjectsRegistry.ProjectDescription storage pointer"
                                  }
                                },
                                "src": "4157:46:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                                  "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                                }
                              },
                              "id": 977,
                              "nodeType": "ExpressionStatement",
                              "src": "4157:46:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4276:47:5",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 980,
                                "name": "pendingEdits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "4283:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => struct ProjectsRegistry.ProjectDescription storage ref))"
                                }
                              },
                              "id": 982,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 981,
                                "name": "_projectId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 928,
                                "src": "4296:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4283:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_ProjectDescription_$803_storage_$",
                                "typeString": "mapping(address => struct ProjectsRegistry.ProjectDescription storage ref)"
                              }
                            },
                            "id": 984,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 983,
                              "name": "_authorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "4308:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4283:40:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProjectDescription_$803_storage",
                              "typeString": "struct ProjectsRegistry.ProjectDescription storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 986,
                        "nodeType": "ExpressionStatement",
                        "src": "4276:47:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 988,
                              "name": "_projectId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 928,
                              "src": "4380:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 989,
                              "name": "_authorAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 934,
                              "src": "4392:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 990,
                              "name": "_proposalIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 930,
                              "src": "4408:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 991,
                              "name": "_auditIpfsHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 932,
                              "src": "4427:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 992,
                              "name": "_approved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 936,
                              "src": "4443:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 987,
                            "name": "ProjectEditAudited",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "4361:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$",
                              "typeString": "function (uint256,address,string memory,string memory,bool)"
                            }
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4361:92:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 994,
                        "nodeType": "EmitStatement",
                        "src": "4356:97:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 996,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 939,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 938,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "3620:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3620:9:5"
                    }
                  ],
                  "name": "submitProjectEditAuditResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 937,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "3447:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3447:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "name": "_proposalIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "3475:33:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3475:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 932,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "3518:30:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 931,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3518:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 934,
                        "name": "_authorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "3558:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3558:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 936,
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 996,
                        "src": "3590:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 935,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3590:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3437:173:5"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3630:0:5"
                  },
                  "scope": 1031,
                  "src": "3400:1060:5",
                  "stateMutability": "nonpayable",
                  "superFunction": 1185,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1004,
                    "nodeType": "Block",
                    "src": "4527:41:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1001,
                            "name": "projectIds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "4544:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1002,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4544:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1000,
                        "id": 1003,
                        "nodeType": "Return",
                        "src": "4537:24:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1005,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProjectsLength",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4492:2:5"
                  },
                  "returnParameters": {
                    "id": 1000,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 999,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1005,
                        "src": "4518:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 998,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4518:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4517:9:5"
                  },
                  "scope": 1031,
                  "src": "4466:102:5",
                  "stateMutability": "view",
                  "superFunction": 1190,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1025,
                    "nodeType": "Block",
                    "src": "4745:92:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1019,
                                  "name": "_projectId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1007,
                                  "src": "4783:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1020,
                                  "name": "_proposedIpfsHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1009,
                                  "src": "4795:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1021,
                                  "name": "_proposerEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1011,
                                  "src": "4814:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1017,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1410,
                                  "src": "4772:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4772:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4772:57:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1016,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "4762:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4762:68:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1015,
                        "id": 1024,
                        "nodeType": "Return",
                        "src": "4755:75:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1026,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hashProposedEdit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1007,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4609:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1006,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4609:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1009,
                        "name": "_proposedIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4637:31:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1008,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4637:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1011,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4678:28:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1010,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4678:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4599:113:5"
                  },
                  "returnParameters": {
                    "id": 1015,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1014,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1026,
                        "src": "4736:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1013,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4736:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4735:9:5"
                  },
                  "scope": 1031,
                  "src": "4574:263:5",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "name": "_gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "4843:24:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1027,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4843:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1029,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 1028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4851:2:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "4843:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 1032,
              "src": "343:4527:5"
            }
          ],
          "src": "0:4871:5"
        },
        "id": 5
      },
      "src/contracts/interfaces/IClaimsRegistry.sol": {
        "ast": {
          "absolutePath": "src/contracts/interfaces/IClaimsRegistry.sol",
          "exportedSymbols": {
            "IClaimsRegistry": [
              1126
            ]
          },
          "id": 1127,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1033,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:6"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@title This contract holds information about claims made buy COA members",
              "fullyImplemented": false,
              "id": 1126,
              "linearizedBaseContracts": [
                1126
              ],
              "name": "IClaimsRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 1047,
                  "name": "ClaimProposed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1046,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1035,
                        "indexed": true,
                        "name": "projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "222:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1034,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "222:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1037,
                        "indexed": true,
                        "name": "proposer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "257:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1036,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "257:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1039,
                        "indexed": true,
                        "name": "claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "291:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1038,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "291:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1041,
                        "indexed": false,
                        "name": "proofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "326:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1040,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "326:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1043,
                        "indexed": false,
                        "name": "proposedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "352:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1042,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "352:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": false,
                        "name": "activityId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1047,
                        "src": "380:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "212:192:6"
                  },
                  "src": "193:212:6"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 1063,
                  "name": "ClaimAudited",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1062,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": true,
                        "name": "projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "495:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "495:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1051,
                        "indexed": true,
                        "name": "auditor",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "530:23:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1050,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "530:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "indexed": true,
                        "name": "claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "563:25:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1052,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "563:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1055,
                        "indexed": false,
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "598:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "598:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "indexed": false,
                        "name": "proofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "622:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "622:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1059,
                        "indexed": false,
                        "name": "verifiedAt",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "648:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1058,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1061,
                        "indexed": false,
                        "name": "activityId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1063,
                        "src": "676:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1060,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "676:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "485:215:6"
                  },
                  "src": "467:234:6"
                },
                {
                  "body": null,
                  "documentation": "@notice Proposes a claim, by sending it's hash and proof\n        The owner of the contract acts as the relayer, by propagating a signature by the proposer\n@dev Validations being performed:\n      - The sender is the contract owner\n     Note: the identifier of a proposal is projectId+claimHash+proposerAddress, allowing\n           multiple proposals to exists for different proposers\n     Note: a user can override a proposal by sending a new one\n@param _projectId - the id of the project the claim is from.\n@param _claimHash - bytes32 of the claim's hash.\n@param _proofHash - IPFS hash of the proof of the claim.\n@param _activityId - the activity identifier.\n@param _proposerEmail - the email of the user proposing the claim.\n@param _authorizationSignature - the signature of the params by the proposer of the claim.",
                  "id": 1078,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposeClaim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1065,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1662:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1662:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1067,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1690:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1066,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1690:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1069,
                        "name": "_proofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1718:26:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1068,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1718:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1071,
                        "name": "_activityId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1754:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1070,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1783:30:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1783:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1075,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1078,
                        "src": "1823:38:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "1823:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1652:215:6"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1876:0:6"
                  },
                  "scope": 1126,
                  "src": "1631:246:6",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Submits the approval of a proposed claim as the result of the audit.\n        The owner of the contract acts as the relayer, by propagating a signature by the auditor.\n@dev Validations being performed:\n      - The proposal exists\n      - The proposal has the same proof hash as being passed as parameter\n      - The auditor didn't already submit his audit\n@param _projectId - the id of the project the claim is from.\n@param _claimHash - bytes32 of the claim's hash being audited.\n@param _proposalProofHash - IPFS hash of the proof from the proposal.\n                            This is required as it's allowed for a user to override his proposal,\n                            preventing this from the auditor approving a proposal he didn't intended.\n@param _auditIpfsHash - IPFS hash of the audit report\n@param _proposerAddress - address of the proposer of the claim.\n@param _auditorEmail - email of the author of the audit.\n@param _authorizationSignature - the signature of the params by the auditor.",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitClaimApproval",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1080,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3051:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3051:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1082,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3079:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3079:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1084,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3107:34:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1083,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3107:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1086,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3151:30:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1085,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3151:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1088,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3191:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3191:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3225:29:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3225:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1092,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "3264:38:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3264:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3041:267:6"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3317:0:6"
                  },
                  "scope": 1126,
                  "src": "3013:305:6",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Submits the rejection of a proposed claim as the result of the audit.\n        The owner of the contract acts as the relayer, by propagating a signature by the auditor.\n@dev Validations being performed:\n      - The proposal exists\n      - The proposal has the same proof hash as being passed as parameter\n      - The auditor didn't already submit his audit\n@param _projectId - the id of the project the claim is from.\n@param _claimHash - bytes32 of the claim's hash being audited.\n@param _proposalProofHash - IPFS hash of the proof from the proposal.\n                            This is required as it's allowed for a user to override his proposal,\n                            preventing this from the auditor approving a proposal he didn't intended.\n@param _auditIpfsHash - IPFS hash of the audit report\n@param _proposerAddress - address of the proposer of the claim.\n@param _auditorEmail - email of the author of the audit.\n@param _authorizationSignature - the signature of the params by the auditor.",
                  "id": 1112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitClaimRejection",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1097,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4494:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1096,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4494:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1099,
                        "name": "_claimHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4522:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4522:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "name": "_proposalProofHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4550:34:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1100,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4550:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1103,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4594:30:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1102,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4594:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "name": "_proposerAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4634:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4634:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "name": "_auditorEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4668:29:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4668:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1109,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1112,
                        "src": "4707:38:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4707:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4484:267:6"
                  },
                  "returnParameters": {
                    "id": 1111,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4760:0:6"
                  },
                  "scope": 1126,
                  "src": "4455:306:6",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Checks whether the tasks from a project's milestone are approved).\n@param _projectId - address of a project.\n@param _auditors - array of addresses of the auditors.\n@param _claims - array of bytes32 hashes of the claims.",
                  "id": 1125,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "areApproved",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1114,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "5069:18:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5069:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1117,
                        "name": "_auditors",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "5097:28:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5097:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1116,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5097:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1120,
                        "name": "_claims",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "5135:26:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1118,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "5135:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1119,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "5135:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5059:108:6"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1123,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "5191:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1122,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5191:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5190:6:6"
                  },
                  "scope": 1126,
                  "src": "5039:158:6",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 1127,
              "src": "109:5090:6"
            }
          ],
          "src": "0:5200:6"
        },
        "id": 6
      },
      "src/contracts/interfaces/IProjectsRegistry.sol": {
        "ast": {
          "absolutePath": "src/contracts/interfaces/IProjectsRegistry.sol",
          "exportedSymbols": {
            "IProjectsRegistry": [
              1191
            ]
          },
          "id": 1192,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1128,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:7"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@title Stores projects related information",
              "fullyImplemented": false,
              "id": 1191,
              "linearizedBaseContracts": [
                1191
              ],
              "name": "IProjectsRegistry",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": "Emitted when a new Project is created",
                  "id": 1134,
                  "name": "ProjectCreated",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1130,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "173:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "173:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1132,
                        "indexed": false,
                        "name": "ipfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1134,
                        "src": "185:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "185:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "172:29:7"
                  },
                  "src": "152:50:7"
                },
                {
                  "anonymous": false,
                  "documentation": "Emitted when an edit is proposed",
                  "id": 1142,
                  "name": "ProjectEditProposed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1136,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "274:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "274:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1138,
                        "indexed": false,
                        "name": "proposer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "286:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1137,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "286:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1140,
                        "indexed": false,
                        "name": "proposedIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1142,
                        "src": "304:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1139,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "304:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "273:55:7"
                  },
                  "src": "248:81:7"
                },
                {
                  "anonymous": false,
                  "documentation": "Emmited when an edit is audited",
                  "id": 1154,
                  "name": "ProjectEditAudited",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1144,
                        "indexed": false,
                        "name": "id",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "408:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "408:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1146,
                        "indexed": false,
                        "name": "proposer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "428:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1145,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1148,
                        "indexed": false,
                        "name": "proposalIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "454:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "454:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1150,
                        "indexed": false,
                        "name": "auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "487:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1149,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "487:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1152,
                        "indexed": false,
                        "name": "approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "517:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "398:138:7"
                  },
                  "src": "374:163:7"
                },
                {
                  "body": null,
                  "documentation": "@notice Creates a Project, can only be run by the admin\n        Submits the initial IPFS hash of a project\n@dev Validations being performed:\n      - The sender is the contract owner\n      - There's no created project with the same id\n@param _projectId - the id of the project created\n@param _initialIpfsHash - the IPFS hash of the newly created project",
                  "id": 1161,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createProject",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1156,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1161,
                        "src": "984:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1155,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "984:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1158,
                        "name": "_initialIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1161,
                        "src": "1004:32:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1004:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "983:54:7"
                  },
                  "returnParameters": {
                    "id": 1160,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1046:0:7"
                  },
                  "scope": 1191,
                  "src": "961:86:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice proposes a project edit\n        It can only be run by the owner of the contract, which acts as the relayer,\n        by propagating a signature of the proposer\n@dev Validations being performed:\n      - The sender is the contract owner\n      - The project edited exists\n     Note: the identifier of a proposal is the projectId+proposerAddress,\n           so there can be multiple proposals from different users\n     Note: a user can override his proposal by sending a new one\n@param _projectId - the id of the project that's proposed to be edited\n@param _proposedIpfsHash - the new proposed project's IPFS hash\n@param _proposerEmail - the email of the proposer\n@param _authorizationSignature - the authorization signature by the edit proposer",
                  "id": 1172,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposeProjectEdit",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1163,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "1946:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1162,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1946:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1165,
                        "name": "_proposedIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "1974:33:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1974:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1167,
                        "name": "_proposerEmail",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "2017:30:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1166,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2017:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1169,
                        "name": "_authorizationSignature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1172,
                        "src": "2057:38:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1168,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2057:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1936:165:7"
                  },
                  "returnParameters": {
                    "id": 1171,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2110:0:7"
                  },
                  "scope": 1191,
                  "src": "1909:202:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Approves/rejects a proposed project edit\n        This can only be run by the admin\n@dev Validations being performed:\n      - The sender is the contract owner\n      - The proposal exists, and has the parameter IPFS hash\n@param _projectId - id of the project the edit belongs to\n@param _proposalIpfsHash - the IPFS hash of the project edit being audited.\n                           This is required as it's allowed for a user to override his proposal,\n                           preventing this from the auditor approving a proposal he didn't intended.\n@param _auditIpfsHash - the IPFS hash of the audit report\n@param _authorAddress - the address of the author of the proposal\n@param _approved - the audt result, whether the proposal was approved or not",
                  "id": 1185,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "submitProjectEditAuditResult",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1183,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1174,
                        "name": "_projectId",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3024:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3024:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1176,
                        "name": "_proposalIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3052:33:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1175,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3052:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1178,
                        "name": "_auditIpfsHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3095:30:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1177,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3095:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1180,
                        "name": "_authorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3135:22:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1179,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3135:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1182,
                        "name": "_approved",
                        "nodeType": "VariableDeclaration",
                        "scope": 1185,
                        "src": "3167:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1181,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3167:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3014:173:7"
                  },
                  "returnParameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3196:0:7"
                  },
                  "scope": 1191,
                  "src": "2977:220:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 1190,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProjectsLength",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1186,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3275:2:7"
                  },
                  "returnParameters": {
                    "id": 1189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1188,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1190,
                        "src": "3301:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3301:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3300:9:7"
                  },
                  "scope": 1191,
                  "src": "3249:61:7",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 1192,
              "src": "72:3240:7"
            }
          ],
          "src": "0:3313:7"
        },
        "id": 7
      },
      "src/contracts/utils/SignatureVerifier.sol": {
        "ast": {
          "absolutePath": "src/contracts/utils/SignatureVerifier.sol",
          "exportedSymbols": {
            "SignatureVerifier": [
              1228
            ]
          },
          "id": 1229,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1193,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
              "file": "@openzeppelin/contracts-ethereum-package/contracts/cryptography/ECDSA.sol",
              "id": 1194,
              "nodeType": "ImportDirective",
              "scope": 1229,
              "sourceUnit": 111,
              "src": "25:83:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Contract for verifying the signatures of the authorization message for performing actions on behalf of users\n * TODO: Add nonces to signatures to avoid potential replay attacks\n      This isn't sth core right now as the only sender of txs are our wallets",
              "fullyImplemented": true,
              "id": 1228,
              "linearizedBaseContracts": [
                1228
              ],
              "name": "SignatureVerifier",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 1197,
                  "name": "prefix",
                  "nodeType": "VariableDeclaration",
                  "scope": 1228,
                  "src": "419:67:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": {
                    "argumentTypes": null,
                    "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                    "id": 1196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "452:34:8",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                      "typeString": "literal_string \"\u0019Ethereum Signed Message:\n32\""
                    },
                    "value": "\u0019Ethereum Signed Message:\n32"
                  },
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1226,
                    "nodeType": "Block",
                    "src": "818:267:8",
                    "statements": [
                      {
                        "assignments": [
                          1207
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1207,
                            "name": "prefixedMessageHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 1226,
                            "src": "878:27:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1206,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "878:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1215,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1211,
                                  "name": "prefix",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1197,
                                  "src": "935:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1212,
                                  "name": "messageHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1199,
                                  "src": "943:11:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1209,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1410,
                                  "src": "918:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "918:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "918:37:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1208,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1417,
                            "src": "908:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "908:48:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "878:78:8"
                      },
                      {
                        "assignments": [
                          1217
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1217,
                            "name": "signer",
                            "nodeType": "VariableDeclaration",
                            "scope": 1226,
                            "src": "993:14:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1216,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "993:7:8",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1223,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1220,
                              "name": "prefixedMessageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1207,
                              "src": "1024:19:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1221,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1201,
                              "src": "1045:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1218,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "1010:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$110_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 1219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 93,
                            "src": "1010:13:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 1222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1010:45:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "993:62:8"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1224,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1217,
                          "src": "1072:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1205,
                        "id": 1225,
                        "nodeType": "Return",
                        "src": "1065:13:8"
                      }
                    ]
                  },
                  "documentation": "@notice Verifies that the signature of a message hash is correct, and returns the signer address\n@param messageHash - the hash of the message\n@param signature - the signature of the message hash",
                  "id": 1227,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1199,
                        "name": "messageHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "741:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1198,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1201,
                        "name": "signature",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "762:22:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "740:45:8"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1227,
                        "src": "809:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:9:8"
                  },
                  "scope": 1228,
                  "src": "725:360:8",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1229,
              "src": "387:700:8"
            }
          ],
          "src": "0:1088:8"
        },
        "id": 8
      },
      "src/contracts/utils/StringUtils.sol": {
        "ast": {
          "absolutePath": "src/contracts/utils/StringUtils.sol",
          "exportedSymbols": {
            "StringUtils": [
              1267
            ]
          },
          "id": 1268,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1230,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:9"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1267,
              "linearizedBaseContracts": [
                1267
              ],
              "name": "StringUtils",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1265,
                    "nodeType": "Block",
                    "src": "134:177:9",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1240,
                                  "name": "s1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "154:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "148:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "148:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "148:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1244,
                                  "name": "s2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1234,
                                  "src": "174:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 1243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "168:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": "bytes"
                              },
                              "id": 1245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "168:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "168:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "148:36:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1263,
                          "nodeType": "Block",
                          "src": "229:76:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1253,
                                          "name": "s1",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1232,
                                          "src": "266:2:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "260:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": "bytes"
                                      },
                                      "id": 1254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "260:9:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1251,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1417,
                                    "src": "250:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1255,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "250:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1258,
                                          "name": "s2",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1234,
                                          "src": "290:2:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 1257,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "284:5:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": "bytes"
                                      },
                                      "id": 1259,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "284:9:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 1256,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1417,
                                    "src": "274:9:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 1260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "274:20:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "250:44:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "functionReturnParameters": 1238,
                              "id": 1262,
                              "nodeType": "Return",
                              "src": "243:51:9"
                            }
                          ]
                        },
                        "id": 1264,
                        "nodeType": "IfStatement",
                        "src": "144:161:9",
                        "trueBody": {
                          "id": 1250,
                          "nodeType": "Block",
                          "src": "186:37:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "207:5:9",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 1238,
                              "id": 1249,
                              "nodeType": "Return",
                              "src": "200:12:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1266,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "areEqual",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1232,
                        "name": "s1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1266,
                        "src": "69:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1231,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "69:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1234,
                        "name": "s2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1266,
                        "src": "87:16:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "87:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "68:36:9"
                  },
                  "returnParameters": {
                    "id": 1238,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1237,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1266,
                        "src": "128:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1236,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "128:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "127:6:9"
                  },
                  "scope": 1267,
                  "src": "51:260:9",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1268,
              "src": "25:288:9"
            }
          ],
          "src": "0:314:9"
        },
        "id": 9
      },
      "src/contracts/utils/UpgradeableToV1.sol": {
        "ast": {
          "absolutePath": "src/contracts/utils/UpgradeableToV1.sol",
          "exportedSymbols": {
            "UpgradeableToV1": [
              1321
            ]
          },
          "id": 1322,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1269,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:10"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title UpgradeableToV1\n * @dev Helper contract to support upgrade functions. To use it, replace\n     the constructor with a function that has the `initializer` modifier.\n@dev Not in use right now (apart from testing) as a single version contract is provided.\n     See the test contracts for an example on how to use it.\nWARNING: Unlike constructors, initializer functions must be manually\n         invoked. This applies both to deploying an UpgradeableToV1 contract, as well\n         as extending an UpgradeableToV1 contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\n         a parent initializer twice, or ensure that all initializers are idempotent,\n         because this is not dealt with automatically as with constructors.",
              "fullyImplemented": true,
              "id": 1321,
              "linearizedBaseContracts": [
                1321
              ],
              "name": "UpgradeableToV1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1271,
                  "name": "upgradedToV1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "958:25:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1270,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1273,
                  "name": "upgradingToV1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1089:26:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1089:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "1230:351:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1276,
                                "name": "upgradingToV1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1273,
                                "src": "1248:13:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1265:13:10",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 1277,
                                  "name": "upgradedToV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1271,
                                  "src": "1266:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1248:30:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20757067726164656420746f207631",
                              "id": 1280,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1280:51:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f4783b87993cea58b297c5be0206f5498a09369e683a45c8d7b0690509cda521",
                                "typeString": "literal_string \"Contract instance has already been upgraded to v1\""
                              },
                              "value": "Contract instance has already been upgraded to v1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f4783b87993cea58b297c5be0206f5498a09369e683a45c8d7b0690509cda521",
                                "typeString": "literal_string \"Contract instance has already been upgraded to v1\""
                              }
                            ],
                            "id": 1275,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1426,
                              1427
                            ],
                            "referencedDeclaration": 1427,
                            "src": "1240:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1240:92:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1282,
                        "nodeType": "ExpressionStatement",
                        "src": "1240:92:10"
                      },
                      {
                        "assignments": [
                          1284
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1284,
                            "name": "isTopLevelCall",
                            "nodeType": "VariableDeclaration",
                            "scope": 1307,
                            "src": "1343:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1283,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1343:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1287,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1365:14:10",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 1285,
                            "name": "upgradingToV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "1366:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1343:36:10"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1288,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "1393:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1298,
                        "nodeType": "IfStatement",
                        "src": "1389:98:10",
                        "trueBody": {
                          "id": 1297,
                          "nodeType": "Block",
                          "src": "1409:78:10",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1289,
                                  "name": "upgradingToV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "1423:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 1290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1439:4:10",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1423:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1292,
                              "nodeType": "ExpressionStatement",
                              "src": "1423:20:10"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1293,
                                  "name": "upgradedToV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1271,
                                  "src": "1457:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 1294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1472:4:10",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1457:19:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1296,
                              "nodeType": "ExpressionStatement",
                              "src": "1457:19:10"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1299,
                        "nodeType": "PlaceholderStatement",
                        "src": "1497:1:10"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 1300,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1284,
                          "src": "1513:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1306,
                        "nodeType": "IfStatement",
                        "src": "1509:66:10",
                        "trueBody": {
                          "id": 1305,
                          "nodeType": "Block",
                          "src": "1529:46:10",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 1301,
                                  "name": "upgradingToV1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "1543:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 1302,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1559:5:10",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1543:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1304,
                              "nodeType": "ExpressionStatement",
                              "src": "1543:21:10"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to use in the upgraded function of a contract.",
                  "id": 1308,
                  "name": "upgraderToV1",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1227:2:10"
                  },
                  "src": "1206:375:10",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "1635:25:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1652:1:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 1312,
                        "id": 1314,
                        "nodeType": "Return",
                        "src": "1645:8:10"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1316,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "version",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1309,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1603:2:10"
                  },
                  "returnParameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1311,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1316,
                        "src": "1627:6:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "1627:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1626:8:10"
                  },
                  "scope": 1321,
                  "src": "1587:73:10",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1320,
                  "name": "______gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1321,
                  "src": "1739:29:10",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1739:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1319,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1747:2:10",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1739:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 1322,
              "src": "846:925:10"
            }
          ],
          "src": "0:1772:10"
        },
        "id": 10
      },
      "src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol": {
        "ast": {
          "absolutePath": "src/tests/contracts/mockUpgrades/ClaimsRegistryV1ForTests.sol",
          "exportedSymbols": {
            "ClaimsRegistryV1ForTests": [
              1357
            ]
          },
          "id": 1358,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1323,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:11"
            },
            {
              "absolutePath": "src/contracts/ClaimsRegistry.sol",
              "file": "../../../contracts/ClaimsRegistry.sol",
              "id": 1324,
              "nodeType": "ImportDirective",
              "scope": 1358,
              "sourceUnit": 780,
              "src": "25:47:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/UpgradeableToV1.sol",
              "file": "../../../contracts/utils/UpgradeableToV1.sol",
              "id": 1325,
              "nodeType": "ImportDirective",
              "scope": 1358,
              "sourceUnit": 1322,
              "src": "73:54:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol",
              "file": "./VariableStorageForTests.sol",
              "id": 1326,
              "nodeType": "ImportDirective",
              "scope": 1358,
              "sourceUnit": 1409,
              "src": "128:39:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1327,
                    "name": "ClaimsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 779,
                    "src": "357:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ClaimsRegistry_$779",
                      "typeString": "contract ClaimsRegistry"
                    }
                  },
                  "id": 1328,
                  "nodeType": "InheritanceSpecifier",
                  "src": "357:14:11"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1329,
                    "name": "VariableStorageForTests",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1408,
                    "src": "373:23:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VariableStorageForTests_$1408",
                      "typeString": "contract VariableStorageForTests"
                    }
                  },
                  "id": 1330,
                  "nodeType": "InheritanceSpecifier",
                  "src": "373:23:11"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1331,
                    "name": "UpgradeableToV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1321,
                    "src": "398:15:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToV1_$1321",
                      "typeString": "contract UpgradeableToV1"
                    }
                  },
                  "id": 1332,
                  "nodeType": "InheritanceSpecifier",
                  "src": "398:15:11"
                }
              ],
              "contractDependencies": [
                29,
                234,
                303,
                779,
                1126,
                1321,
                1408
              ],
              "contractKind": "contract",
              "documentation": "@title V2 of the ClaimsRegistry contract, extending it's behavior with the VariableStorageForTests\n       Used only for testing purposes",
              "fullyImplemented": true,
              "id": 1357,
              "linearizedBaseContracts": [
                1357,
                1321,
                1408,
                779,
                234,
                29,
                303,
                1126
              ],
              "name": "ClaimsRegistryV1ForTests",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1351,
                    "nodeType": "Block",
                    "src": "518:90:11",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1344,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "555:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1341,
                              "name": "Ownable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "528:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Ownable_$234_$",
                                "typeString": "type(contract Ownable)"
                              }
                            },
                            "id": 1343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 229,
                            "src": "528:26:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "528:34:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1346,
                        "nodeType": "ExpressionStatement",
                        "src": "528:34:11"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1348,
                              "name": "_initialVariable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "584:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 1347,
                            "name": "setVariable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "572:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 1349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "572:29:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1350,
                        "nodeType": "ExpressionStatement",
                        "src": "572:29:11"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1352,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1339,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1338,
                        "name": "upgraderToV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "505:12:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "505:12:11"
                    }
                  ],
                  "name": "claimUpgradeToV1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1334,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1352,
                        "src": "446:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1336,
                        "name": "_initialVariable",
                        "nodeType": "VariableDeclaration",
                        "scope": 1352,
                        "src": "462:32:11",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "462:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "445:50:11"
                  },
                  "returnParameters": {
                    "id": 1340,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "518:0:11"
                  },
                  "scope": 1357,
                  "src": "420:188:11",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "id": 1356,
                  "name": "_gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "614:24:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$49_storage",
                    "typeString": "uint256[49]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1353,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "614:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1355,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3439",
                      "id": 1354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "622:2:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      },
                      "value": "49"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "614:11:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                      "typeString": "uint256[49]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 1358,
              "src": "320:321:11"
            }
          ],
          "src": "0:642:11"
        },
        "id": 11
      },
      "src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol": {
        "ast": {
          "absolutePath": "src/tests/contracts/mockUpgrades/ProjectsRegistryV1ForTests.sol",
          "exportedSymbols": {
            "ProjectsRegistryV1ForTests": [
              1393
            ]
          },
          "id": 1394,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1359,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:12"
            },
            {
              "absolutePath": "src/contracts/ProjectsRegistry.sol",
              "file": "../../../contracts/ProjectsRegistry.sol",
              "id": 1360,
              "nodeType": "ImportDirective",
              "scope": 1394,
              "sourceUnit": 1032,
              "src": "25:49:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/contracts/utils/UpgradeableToV1.sol",
              "file": "../../../contracts/utils/UpgradeableToV1.sol",
              "id": 1361,
              "nodeType": "ImportDirective",
              "scope": 1394,
              "sourceUnit": 1322,
              "src": "75:54:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol",
              "file": "./VariableStorageForTests.sol",
              "id": 1362,
              "nodeType": "ImportDirective",
              "scope": 1394,
              "sourceUnit": 1409,
              "src": "130:39:12",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1363,
                    "name": "ProjectsRegistry",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1031,
                    "src": "363:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ProjectsRegistry_$1031",
                      "typeString": "contract ProjectsRegistry"
                    }
                  },
                  "id": 1364,
                  "nodeType": "InheritanceSpecifier",
                  "src": "363:16:12"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1365,
                    "name": "VariableStorageForTests",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1408,
                    "src": "381:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VariableStorageForTests_$1408",
                      "typeString": "contract VariableStorageForTests"
                    }
                  },
                  "id": 1366,
                  "nodeType": "InheritanceSpecifier",
                  "src": "381:23:12"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1367,
                    "name": "UpgradeableToV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1321,
                    "src": "406:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_UpgradeableToV1_$1321",
                      "typeString": "contract UpgradeableToV1"
                    }
                  },
                  "id": 1368,
                  "nodeType": "InheritanceSpecifier",
                  "src": "406:15:12"
                }
              ],
              "contractDependencies": [
                29,
                234,
                303,
                1031,
                1191,
                1321,
                1408
              ],
              "contractKind": "contract",
              "documentation": "@title V2 of the ProjectsRegistry contract, extending it's behavior with the VariableStorageForTests\n       Used only for testing purposes",
              "fullyImplemented": true,
              "id": 1393,
              "linearizedBaseContracts": [
                1393,
                1321,
                1408,
                1031,
                1191,
                234,
                29,
                303
              ],
              "name": "ProjectsRegistryV1ForTests",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1387,
                    "nodeType": "Block",
                    "src": "529:90:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1380,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1370,
                              "src": "566:6:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1377,
                              "name": "Ownable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 234,
                              "src": "539:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Ownable_$234_$",
                                "typeString": "type(contract Ownable)"
                              }
                            },
                            "id": 1379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transferOwnership",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 229,
                            "src": "539:26:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "539:34:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1382,
                        "nodeType": "ExpressionStatement",
                        "src": "539:34:12"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1384,
                              "name": "_initialVariable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1372,
                              "src": "595:16:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 1383,
                            "name": "setVariable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "583:11:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 1385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "583:29:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1386,
                        "nodeType": "ExpressionStatement",
                        "src": "583:29:12"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1388,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 1375,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 1374,
                        "name": "upgraderToV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1308,
                        "src": "516:12:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "516:12:12"
                    }
                  ],
                  "name": "registryUpgradeToV1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1370,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "457:14:12",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "457:7:12",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1372,
                        "name": "_initialVariable",
                        "nodeType": "VariableDeclaration",
                        "scope": 1388,
                        "src": "473:32:12",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "456:50:12"
                  },
                  "returnParameters": {
                    "id": 1376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "529:0:12"
                  },
                  "scope": 1393,
                  "src": "428:191:12",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "constant": false,
                  "id": 1392,
                  "name": "_gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1393,
                  "src": "625:24:12",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$49_storage",
                    "typeString": "uint256[49]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1389,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "625:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1391,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3439",
                      "id": 1390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "633:2:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_49_by_1",
                        "typeString": "int_const 49"
                      },
                      "value": "49"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "625:11:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                      "typeString": "uint256[49]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 1394,
              "src": "324:328:12"
            }
          ],
          "src": "0:653:12"
        },
        "id": 12
      },
      "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol": {
        "ast": {
          "absolutePath": "src/tests/contracts/mockUpgrades/VariableStorageForTests.sol",
          "exportedSymbols": {
            "VariableStorageForTests": [
              1408
            ]
          },
          "id": 1409,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1395,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".8"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:13"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title Contract storing a string variable\n       To be used for testing purposes only",
              "fullyImplemented": true,
              "id": 1408,
              "linearizedBaseContracts": [
                1408
              ],
              "name": "VariableStorageForTests",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1397,
                  "name": "stringVariable",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "164:28:13",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1396,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1406,
                    "nodeType": "Block",
                    "src": "289:42:13",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1402,
                            "name": "stringVariable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1397,
                            "src": "299:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1403,
                            "name": "newValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1399,
                            "src": "316:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "299:25:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1405,
                        "nodeType": "ExpressionStatement",
                        "src": "299:25:13"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1407,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setVariable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1400,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1399,
                        "name": "newValue",
                        "nodeType": "VariableDeclaration",
                        "scope": 1407,
                        "src": "258:22:13",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "258:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "257:24:13"
                  },
                  "returnParameters": {
                    "id": 1401,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "289:0:13"
                  },
                  "scope": 1408,
                  "src": "237:94:13",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                }
              ],
              "scope": 1409,
              "src": "125:208:13"
            }
          ],
          "src": "0:334:13"
        },
        "id": 13
      }
    }
  }
}
